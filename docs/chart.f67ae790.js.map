{"version":3,"sources":["aktiengraphen/chart.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","Chart","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","Animator","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","currentStep","Math","min","me","_update","_refresh","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","animator","map","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","v","r","g","hexParse","str","len","ret","hexString","round","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","rgbParse","m","exec","rgbString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","range","calln","isArray","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","p1","p2","rotate","deg","hslString","map$1","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names$1","nameParse","transparent","toLowerCase","modHSL","ratio","tmp","clone$1","proto","assign","fromObject","input","functionParse","charAt","Color","_rgb","_valid","obj","color","weight","c1","c2","w2","p","w1","val","index_esm","isPatternOrGradient","value","CanvasGradient","CanvasPattern","getHoverColor","saturate","darken","noop","uid","id","isNullOrUndef","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","current","console","warn","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","toUpperCase","defined","isFunction","overrides","descriptors","getScope$1","node","split","root","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","size","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","isNumber","isNaN","almostEquals","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","strokeStyle","lineWidth","strokeText","maxWidth","fillText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","_lookup","table","cmp","hi","lo","mid","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","defineProperty","configurable","method","base","res","object","unlistenArrayEvents","stub","_arrayUnique","Set","add","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","evt","native","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition$1","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","getRelativePosition","evaluateAllVisibleItems","handler","metasets","getSortedVisibleDatasetMetas","skip","binarySearch","metaset","axis","controller","_sorted","iScale","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","chartArea","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","center","getCenterPoint","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","meta","dataset","getDatasetMeta","nearest","LINE_HEIGHT","RegExp","toLineHeight","numberOrZero$1","readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","grace","STATIC_POSITIONS","filterByPosition","filter","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","horizontal","isHorizontal","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","same","other","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","change","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","update","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","display","freeze","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","initial","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","createAttachObserver","observer","MutationObserver","entries","entry","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","platforms","__proto__","atEdge","t","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","interpolators","boolean","from","to","factor","c0","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","rej","resolved","numbers","colors","animationOptions","properties","active","show","animations","visible","hide","Animations","config","_chart","_properties","animatedProps","getOwnPropertyNames","option","has","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","_animateOptions","anim","wait","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","updateStacks","parsed","_stacks","vScale","iAxis","vAxis","itemStacks","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","count","sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","getMaxOverflow","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","cacheKey","sharing","datasetElementScopeKeys","prefixes","resolveNamedOptions","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","arguments","Element","getProps","final","defaultRoutes","intlCache","getNumberFormat","locale","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","offset","beginAtZero","bounds","grid","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","route","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","last","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","_length","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","next","ceil","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMatchingVisibleMetas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","nestedLabel","_resolveTickFontOptions","valueAt","getPixelForValue","decimal","getBaseValue","optionTicks","rot","ticksLength","tl","borderOpts","setContext","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","edgeOpts","lastLineWidth","_computeLabelArea","_computeLabelItems","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","_createResolver","rootScopes","_resolve","Symbol","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","_scopes","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","override","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","createSubResolver","resolver","resolveFallback","getScope","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","firstParent","addScopesFromKey","resolveKeysFromAllScopes","EPSILON","getPoint","points","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","pointBefore","splineCurveMonotone","slopeDeltaX","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","tension","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","rtl","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","makeSubSegment","getSegment","segment","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","stop","_computeSegments","completeLoop","_fullLoop","helpers","easingEffects","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","parts","Registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getPlugin","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","initialCanvas","existingChart","chartOptionScopes","_initializePlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","error","listen","_initialize","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","oldRatio","newRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","getScale","init","hasUpdated","oldIndex","_destroyDatasetMeta","_dataset","newControllers","_removeUnreferencedMetasets","order","_updateMetasetIndex","isDatasetVisible","updateIndex","ControllerClass","getController","getElement","_updateMetasets","reset","_resetElements","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","hidden","setDatasetVisibility","_updateDatasetVisibility","_destroy","remove","unbindEvents","releaseContext","toDataURL","_add","_remove","detached","isAttached","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","_handleEvent","lastEvent","getElementsAtEventForMode","invalidatePlugins","unregister","abstract","DateAdapter","timestamp","amount","unit","weekday","members","_adapters","_date","getAllScaleValues","$bar","getAllParsedValues","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","bars","getBasePixel","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","updateElement","_getStacks","_getStackCount","grouped","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","skipNull","stackIndex","_getStackIndex","rects","_index_","_value_","BubbleController","getPixelForDecimal","tooltip","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_getRotationExtents","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","border","lastPoint","updateControlPoints","pointCount","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","PolarAreaController","_updateRadius","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","clipArc","pixelMargin","angleMargin","pathArc","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","betweenAngles","withinRadius","halfAngle","halfRadius","setStyle","vm","lineCap","borderCapStyle","borderJoinStyle","getLineMethod","stepped","pathVars","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","usePath2D","strokePath","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","segmentMethod","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","o","parseBorderRadius","borderRadius","maxR","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addRoundedRectPath","addNormalRectPath","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","destroy","getLineByIndex","parseFillOption","fillOption","decodeFill","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","interpolate","pointValue","firstValue","lastValue","getTarget","resolveTarget","propagate","visited","clipY","getBounds","_getEdge","tpoints","subs","subBounds","fillSources","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","tgt","lineLoop","targetLoop","doFill","above","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDatasetsDraw","beforeDatasetDraw","lineOpts","getBoxSize","labelOpts","fontSize","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","hitbox","_draw","defaultColor","rtlHelper","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","strokeRect","textDirection","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","_getLegendItemAt","sameItem","onLeave","plugin_legend","_element","adjustHitBoxes","afterEvent","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","createTitle","titleBlock","plugin_title","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","MIN_SPACING","step","precision","maxTicks","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","stepSize","computeTickLimit","getTickLimit","numericGeneratorOptions","LinearScale","handleTickRangeOptions","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","backdropPadding","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","adjustPointPositionForLabelHeight","getTextAlignForAngle","drawPointLabels","backdropColor","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","distanceFromCenter","showLabelBackdrop","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","time","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","message","overlay","createErrorOverlay","appendChild","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps"],"mappings":"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","file":"chart.f67ae790.js","sourceRoot":"..\\src","sourcesContent":["/*!\r\n * Chart.js v3.0.1\r\n * https://www.chartjs.org\r\n * (c) 2021 Chart.js Contributors\r\n * Released under the MIT License\r\n */\r\n(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n        typeof define === 'function' && define.amd ? define(factory) :\r\n            (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\r\n}(this, (function () {\r\n    'use strict';\r\n\r\n    function fontString(pixelSize, fontStyle, fontFamily) {\r\n        return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n    }\r\n\r\n    const requestAnimFrame = (function () {\r\n        if (typeof window === 'undefined') {\r\n            return function (callback) {\r\n                return callback();\r\n            };\r\n        }\r\n        return window.requestAnimationFrame;\r\n    }());\r\n\r\n    function throttled(fn, thisArg, updateFn) {\r\n        const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\r\n        let ticking = false;\r\n        let args = [];\r\n        return function (...rest) {\r\n            args = updateArgs(rest);\r\n            if (!ticking) {\r\n                ticking = true;\r\n                requestAnimFrame.call(window, () => {\r\n                    ticking = false;\r\n                    fn.apply(thisArg, args);\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    function debounce(fn, delay) {\r\n        let timeout;\r\n        return function () {\r\n            if (delay) {\r\n                clearTimeout(timeout);\r\n                timeout = setTimeout(fn, delay);\r\n            } else {\r\n                fn();\r\n            }\r\n            return delay;\r\n        };\r\n    }\r\n\r\n    const _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\r\n    const _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\r\n    const _textX = (align, left, right) => align === 'right' ? right : align === 'center' ? (left + right) / 2 : left;\r\n\r\n    class Animator {\r\n        constructor() {\r\n            this._request = null;\r\n            this._charts = new Map();\r\n            this._running = false;\r\n            this._lastDate = undefined;\r\n        }\r\n\r\n        _notify(chart, anims, date, type) {\r\n            const callbacks = anims.listeners[type];\r\n            const numSteps = anims.duration;\r\n            callbacks.forEach(fn => fn({\r\n                chart,\r\n                numSteps,\r\n                currentStep: Math.min(date - anims.start, numSteps)\r\n            }));\r\n        }\r\n\r\n        _refresh() {\r\n            const me = this;\r\n            if (me._request) {\r\n                return;\r\n            }\r\n            me._running = true;\r\n            me._request = requestAnimFrame.call(window, () => {\r\n                me._update();\r\n                me._request = null;\r\n                if (me._running) {\r\n                    me._refresh();\r\n                }\r\n            });\r\n        }\r\n\r\n        _update(date = Date.now()) {\r\n            const me = this;\r\n            let remaining = 0;\r\n            me._charts.forEach((anims, chart) => {\r\n                if (!anims.running || !anims.items.length) {\r\n                    return;\r\n                }\r\n                const items = anims.items;\r\n                let i = items.length - 1;\r\n                let draw = false;\r\n                let item;\r\n                for (; i >= 0; --i) {\r\n                    item = items[i];\r\n                    if (item._active) {\r\n                        if (item._total > anims.duration) {\r\n                            anims.duration = item._total;\r\n                        }\r\n                        item.tick(date);\r\n                        draw = true;\r\n                    } else {\r\n                        items[i] = items[items.length - 1];\r\n                        items.pop();\r\n                    }\r\n                }\r\n                if (draw) {\r\n                    chart.draw();\r\n                    me._notify(chart, anims, date, 'progress');\r\n                }\r\n                if (!items.length) {\r\n                    anims.running = false;\r\n                    me._notify(chart, anims, date, 'complete');\r\n                }\r\n                remaining += items.length;\r\n            });\r\n            me._lastDate = date;\r\n            if (remaining === 0) {\r\n                me._running = false;\r\n            }\r\n        }\r\n\r\n        _getAnims(chart) {\r\n            const charts = this._charts;\r\n            let anims = charts.get(chart);\r\n            if (!anims) {\r\n                anims = {\r\n                    running: false,\r\n                    items: [],\r\n                    listeners: {\r\n                        complete: [],\r\n                        progress: []\r\n                    }\r\n                };\r\n                charts.set(chart, anims);\r\n            }\r\n            return anims;\r\n        }\r\n\r\n        listen(chart, event, cb) {\r\n            this._getAnims(chart).listeners[event].push(cb);\r\n        }\r\n\r\n        add(chart, items) {\r\n            if (!items || !items.length) {\r\n                return;\r\n            }\r\n            this._getAnims(chart).items.push(...items);\r\n        }\r\n\r\n        has(chart) {\r\n            return this._getAnims(chart).items.length > 0;\r\n        }\r\n\r\n        start(chart) {\r\n            const anims = this._charts.get(chart);\r\n            if (!anims) {\r\n                return;\r\n            }\r\n            anims.running = true;\r\n            anims.start = Date.now();\r\n            anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\r\n            this._refresh();\r\n        }\r\n\r\n        running(chart) {\r\n            if (!this._running) {\r\n                return false;\r\n            }\r\n            const anims = this._charts.get(chart);\r\n            if (!anims || !anims.running || !anims.items.length) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        stop(chart) {\r\n            const anims = this._charts.get(chart);\r\n            if (!anims || !anims.items.length) {\r\n                return;\r\n            }\r\n            const items = anims.items;\r\n            let i = items.length - 1;\r\n            for (; i >= 0; --i) {\r\n                items[i].cancel();\r\n            }\r\n            anims.items = [];\r\n            this._notify(chart, anims, Date.now(), 'complete');\r\n        }\r\n\r\n        remove(chart) {\r\n            return this._charts.delete(chart);\r\n        }\r\n    }\r\n\r\n    var animator = new Animator();\r\n\r\n    /*!\r\n * @kurkle/color v0.1.9\r\n * https://github.com/kurkle/color#readme\r\n * (c) 2020 Jukka Kurkela\r\n * Released under the MIT License\r\n */\r\n    const map = {\r\n        0: 0,\r\n        1: 1,\r\n        2: 2,\r\n        3: 3,\r\n        4: 4,\r\n        5: 5,\r\n        6: 6,\r\n        7: 7,\r\n        8: 8,\r\n        9: 9,\r\n        A: 10,\r\n        B: 11,\r\n        C: 12,\r\n        D: 13,\r\n        E: 14,\r\n        F: 15,\r\n        a: 10,\r\n        b: 11,\r\n        c: 12,\r\n        d: 13,\r\n        e: 14,\r\n        f: 15\r\n    };\r\n    const hex = '0123456789ABCDEF';\r\n    const h1 = (b) => hex[b & 0xF];\r\n    const h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\r\n    const eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\r\n\r\n    function isShort(v) {\r\n        return eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\r\n    }\r\n\r\n    function hexParse(str) {\r\n        var len = str.length;\r\n        var ret;\r\n        if (str[0] === '#') {\r\n            if (len === 4 || len === 5) {\r\n                ret = {\r\n                    r: 255 & map[str[1]] * 17,\r\n                    g: 255 & map[str[2]] * 17,\r\n                    b: 255 & map[str[3]] * 17,\r\n                    a: len === 5 ? map[str[4]] * 17 : 255\r\n                };\r\n            } else if (len === 7 || len === 9) {\r\n                ret = {\r\n                    r: map[str[1]] << 4 | map[str[2]],\r\n                    g: map[str[3]] << 4 | map[str[4]],\r\n                    b: map[str[5]] << 4 | map[str[6]],\r\n                    a: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\r\n                };\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function hexString(v) {\r\n        var f = isShort(v) ? h1 : h2;\r\n        return v\r\n            ? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\r\n            : v;\r\n    }\r\n\r\n    function round(v) {\r\n        return v + 0.5 | 0;\r\n    }\r\n\r\n    const lim = (v, l, h) => Math.max(Math.min(v, h), l);\r\n\r\n    function p2b(v) {\r\n        return lim(round(v * 2.55), 0, 255);\r\n    }\r\n\r\n    function n2b(v) {\r\n        return lim(round(v * 255), 0, 255);\r\n    }\r\n\r\n    function b2n(v) {\r\n        return lim(round(v / 2.55) / 100, 0, 1);\r\n    }\r\n\r\n    function n2p(v) {\r\n        return lim(round(v * 100), 0, 100);\r\n    }\r\n\r\n    const RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\r\n\r\n    function rgbParse(str) {\r\n        const m = RGB_RE.exec(str);\r\n        let a = 255;\r\n        let r, g, b;\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (m[7] !== r) {\r\n            const v = +m[7];\r\n            a = 255 & (m[8] ? p2b(v) : v * 255);\r\n        }\r\n        r = +m[1];\r\n        g = +m[3];\r\n        b = +m[5];\r\n        r = 255 & (m[2] ? p2b(r) : r);\r\n        g = 255 & (m[4] ? p2b(g) : g);\r\n        b = 255 & (m[6] ? p2b(b) : b);\r\n        return {\r\n            r: r,\r\n            g: g,\r\n            b: b,\r\n            a: a\r\n        };\r\n    }\r\n\r\n    function rgbString(v) {\r\n        return v && (\r\n            v.a < 255\r\n                ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\r\n                : `rgb(${v.r}, ${v.g}, ${v.b})`\r\n        );\r\n    }\r\n\r\n    const HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\r\n\r\n    function hsl2rgbn(h, s, l) {\r\n        const a = s * Math.min(l, 1 - l);\r\n        const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\r\n        return [f(0), f(8), f(4)];\r\n    }\r\n\r\n    function hsv2rgbn(h, s, v) {\r\n        const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\r\n        return [f(5), f(3), f(1)];\r\n    }\r\n\r\n    function hwb2rgbn(h, w, b) {\r\n        const rgb = hsl2rgbn(h, 1, 0.5);\r\n        let i;\r\n        if (w + b > 1) {\r\n            i = 1 / (w + b);\r\n            w *= i;\r\n            b *= i;\r\n        }\r\n        for (i = 0; i < 3; i++) {\r\n            rgb[i] *= 1 - w - b;\r\n            rgb[i] += w;\r\n        }\r\n        return rgb;\r\n    }\r\n\r\n    function rgb2hsl(v) {\r\n        const range = 255;\r\n        const r = v.r / range;\r\n        const g = v.g / range;\r\n        const b = v.b / range;\r\n        const max = Math.max(r, g, b);\r\n        const min = Math.min(r, g, b);\r\n        const l = (max + min) / 2;\r\n        let h, s, d;\r\n        if (max !== min) {\r\n            d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            h = max === r\r\n                ? ((g - b) / d) + (g < b ? 6 : 0)\r\n                : max === g\r\n                    ? (b - r) / d + 2\r\n                    : (r - g) / d + 4;\r\n            h = h * 60 + 0.5;\r\n        }\r\n        return [h | 0, s || 0, l];\r\n    }\r\n\r\n    function calln(f, a, b, c) {\r\n        return (\r\n            Array.isArray(a)\r\n                ? f(a[0], a[1], a[2])\r\n                : f(a, b, c)\r\n        ).map(n2b);\r\n    }\r\n\r\n    function hsl2rgb(h, s, l) {\r\n        return calln(hsl2rgbn, h, s, l);\r\n    }\r\n\r\n    function hwb2rgb(h, w, b) {\r\n        return calln(hwb2rgbn, h, w, b);\r\n    }\r\n\r\n    function hsv2rgb(h, s, v) {\r\n        return calln(hsv2rgbn, h, s, v);\r\n    }\r\n\r\n    function hue(h) {\r\n        return (h % 360 + 360) % 360;\r\n    }\r\n\r\n    function hueParse(str) {\r\n        const m = HUE_RE.exec(str);\r\n        let a = 255;\r\n        let v;\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (m[5] !== v) {\r\n            a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\r\n        }\r\n        const h = hue(+m[2]);\r\n        const p1 = +m[3] / 100;\r\n        const p2 = +m[4] / 100;\r\n        if (m[1] === 'hwb') {\r\n            v = hwb2rgb(h, p1, p2);\r\n        } else if (m[1] === 'hsv') {\r\n            v = hsv2rgb(h, p1, p2);\r\n        } else {\r\n            v = hsl2rgb(h, p1, p2);\r\n        }\r\n        return {\r\n            r: v[0],\r\n            g: v[1],\r\n            b: v[2],\r\n            a: a\r\n        };\r\n    }\r\n\r\n    function rotate(v, deg) {\r\n        var h = rgb2hsl(v);\r\n        h[0] = hue(h[0] + deg);\r\n        h = hsl2rgb(h);\r\n        v.r = h[0];\r\n        v.g = h[1];\r\n        v.b = h[2];\r\n    }\r\n\r\n    function hslString(v) {\r\n        if (!v) {\r\n            return;\r\n        }\r\n        const a = rgb2hsl(v);\r\n        const h = a[0];\r\n        const s = n2p(a[1]);\r\n        const l = n2p(a[2]);\r\n        return v.a < 255\r\n            ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\r\n            : `hsl(${h}, ${s}%, ${l}%)`;\r\n    }\r\n\r\n    const map$1 = {\r\n        x: 'dark',\r\n        Z: 'light',\r\n        Y: 're',\r\n        X: 'blu',\r\n        W: 'gr',\r\n        V: 'medium',\r\n        U: 'slate',\r\n        A: 'ee',\r\n        T: 'ol',\r\n        S: 'or',\r\n        B: 'ra',\r\n        C: 'lateg',\r\n        D: 'ights',\r\n        R: 'in',\r\n        Q: 'turquois',\r\n        E: 'hi',\r\n        P: 'ro',\r\n        O: 'al',\r\n        N: 'le',\r\n        M: 'de',\r\n        L: 'yello',\r\n        F: 'en',\r\n        K: 'ch',\r\n        G: 'arks',\r\n        H: 'ea',\r\n        I: 'ightg',\r\n        J: 'wh'\r\n    };\r\n    const names = {\r\n        OiceXe: 'f0f8ff',\r\n        antiquewEte: 'faebd7',\r\n        aqua: 'ffff',\r\n        aquamarRe: '7fffd4',\r\n        azuY: 'f0ffff',\r\n        beige: 'f5f5dc',\r\n        bisque: 'ffe4c4',\r\n        black: '0',\r\n        blanKedOmond: 'ffebcd',\r\n        Xe: 'ff',\r\n        XeviTet: '8a2be2',\r\n        bPwn: 'a52a2a',\r\n        burlywood: 'deb887',\r\n        caMtXe: '5f9ea0',\r\n        KartYuse: '7fff00',\r\n        KocTate: 'd2691e',\r\n        cSO: 'ff7f50',\r\n        cSnflowerXe: '6495ed',\r\n        cSnsilk: 'fff8dc',\r\n        crimson: 'dc143c',\r\n        cyan: 'ffff',\r\n        xXe: '8b',\r\n        xcyan: '8b8b',\r\n        xgTMnPd: 'b8860b',\r\n        xWay: 'a9a9a9',\r\n        xgYF: '6400',\r\n        xgYy: 'a9a9a9',\r\n        xkhaki: 'bdb76b',\r\n        xmagFta: '8b008b',\r\n        xTivegYF: '556b2f',\r\n        xSange: 'ff8c00',\r\n        xScEd: '9932cc',\r\n        xYd: '8b0000',\r\n        xsOmon: 'e9967a',\r\n        xsHgYF: '8fbc8f',\r\n        xUXe: '483d8b',\r\n        xUWay: '2f4f4f',\r\n        xUgYy: '2f4f4f',\r\n        xQe: 'ced1',\r\n        xviTet: '9400d3',\r\n        dAppRk: 'ff1493',\r\n        dApskyXe: 'bfff',\r\n        dimWay: '696969',\r\n        dimgYy: '696969',\r\n        dodgerXe: '1e90ff',\r\n        fiYbrick: 'b22222',\r\n        flSOwEte: 'fffaf0',\r\n        foYstWAn: '228b22',\r\n        fuKsia: 'ff00ff',\r\n        gaRsbSo: 'dcdcdc',\r\n        ghostwEte: 'f8f8ff',\r\n        gTd: 'ffd700',\r\n        gTMnPd: 'daa520',\r\n        Way: '808080',\r\n        gYF: '8000',\r\n        gYFLw: 'adff2f',\r\n        gYy: '808080',\r\n        honeyMw: 'f0fff0',\r\n        hotpRk: 'ff69b4',\r\n        RdianYd: 'cd5c5c',\r\n        Rdigo: '4b0082',\r\n        ivSy: 'fffff0',\r\n        khaki: 'f0e68c',\r\n        lavFMr: 'e6e6fa',\r\n        lavFMrXsh: 'fff0f5',\r\n        lawngYF: '7cfc00',\r\n        NmoncEffon: 'fffacd',\r\n        ZXe: 'add8e6',\r\n        ZcSO: 'f08080',\r\n        Zcyan: 'e0ffff',\r\n        ZgTMnPdLw: 'fafad2',\r\n        ZWay: 'd3d3d3',\r\n        ZgYF: '90ee90',\r\n        ZgYy: 'd3d3d3',\r\n        ZpRk: 'ffb6c1',\r\n        ZsOmon: 'ffa07a',\r\n        ZsHgYF: '20b2aa',\r\n        ZskyXe: '87cefa',\r\n        ZUWay: '778899',\r\n        ZUgYy: '778899',\r\n        ZstAlXe: 'b0c4de',\r\n        ZLw: 'ffffe0',\r\n        lime: 'ff00',\r\n        limegYF: '32cd32',\r\n        lRF: 'faf0e6',\r\n        magFta: 'ff00ff',\r\n        maPon: '800000',\r\n        VaquamarRe: '66cdaa',\r\n        VXe: 'cd',\r\n        VScEd: 'ba55d3',\r\n        VpurpN: '9370db',\r\n        VsHgYF: '3cb371',\r\n        VUXe: '7b68ee',\r\n        VsprRggYF: 'fa9a',\r\n        VQe: '48d1cc',\r\n        VviTetYd: 'c71585',\r\n        midnightXe: '191970',\r\n        mRtcYam: 'f5fffa',\r\n        mistyPse: 'ffe4e1',\r\n        moccasR: 'ffe4b5',\r\n        navajowEte: 'ffdead',\r\n        navy: '80',\r\n        Tdlace: 'fdf5e6',\r\n        Tive: '808000',\r\n        TivedBb: '6b8e23',\r\n        Sange: 'ffa500',\r\n        SangeYd: 'ff4500',\r\n        ScEd: 'da70d6',\r\n        pOegTMnPd: 'eee8aa',\r\n        pOegYF: '98fb98',\r\n        pOeQe: 'afeeee',\r\n        pOeviTetYd: 'db7093',\r\n        papayawEp: 'ffefd5',\r\n        pHKpuff: 'ffdab9',\r\n        peru: 'cd853f',\r\n        pRk: 'ffc0cb',\r\n        plum: 'dda0dd',\r\n        powMrXe: 'b0e0e6',\r\n        purpN: '800080',\r\n        YbeccapurpN: '663399',\r\n        Yd: 'ff0000',\r\n        Psybrown: 'bc8f8f',\r\n        PyOXe: '4169e1',\r\n        saddNbPwn: '8b4513',\r\n        sOmon: 'fa8072',\r\n        sandybPwn: 'f4a460',\r\n        sHgYF: '2e8b57',\r\n        sHshell: 'fff5ee',\r\n        siFna: 'a0522d',\r\n        silver: 'c0c0c0',\r\n        skyXe: '87ceeb',\r\n        UXe: '6a5acd',\r\n        UWay: '708090',\r\n        UgYy: '708090',\r\n        snow: 'fffafa',\r\n        sprRggYF: 'ff7f',\r\n        stAlXe: '4682b4',\r\n        tan: 'd2b48c',\r\n        teO: '8080',\r\n        tEstN: 'd8bfd8',\r\n        tomato: 'ff6347',\r\n        Qe: '40e0d0',\r\n        viTet: 'ee82ee',\r\n        JHt: 'f5deb3',\r\n        wEte: 'ffffff',\r\n        wEtesmoke: 'f5f5f5',\r\n        Lw: 'ffff00',\r\n        LwgYF: '9acd32'\r\n    };\r\n\r\n    function unpack() {\r\n        const unpacked = {};\r\n        const keys = Object.keys(names);\r\n        const tkeys = Object.keys(map$1);\r\n        let i, j, k, ok, nk;\r\n        for (i = 0; i < keys.length; i++) {\r\n            ok = nk = keys[i];\r\n            for (j = 0; j < tkeys.length; j++) {\r\n                k = tkeys[j];\r\n                nk = nk.replace(k, map$1[k]);\r\n            }\r\n            k = parseInt(names[ok], 16);\r\n            unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\r\n        }\r\n        return unpacked;\r\n    }\r\n\r\n    let names$1;\r\n\r\n    function nameParse(str) {\r\n        if (!names$1) {\r\n            names$1 = unpack();\r\n            names$1.transparent = [0, 0, 0, 0];\r\n        }\r\n        const a = names$1[str.toLowerCase()];\r\n        return a && {\r\n            r: a[0],\r\n            g: a[1],\r\n            b: a[2],\r\n            a: a.length === 4 ? a[3] : 255\r\n        };\r\n    }\r\n\r\n    function modHSL(v, i, ratio) {\r\n        if (v) {\r\n            let tmp = rgb2hsl(v);\r\n            tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\r\n            tmp = hsl2rgb(tmp);\r\n            v.r = tmp[0];\r\n            v.g = tmp[1];\r\n            v.b = tmp[2];\r\n        }\r\n    }\r\n\r\n    function clone$1(v, proto) {\r\n        return v ? Object.assign(proto || {}, v) : v;\r\n    }\r\n\r\n    function fromObject(input) {\r\n        var v = {r: 0, g: 0, b: 0, a: 255};\r\n        if (Array.isArray(input)) {\r\n            if (input.length >= 3) {\r\n                v = {r: input[0], g: input[1], b: input[2], a: 255};\r\n                if (input.length > 3) {\r\n                    v.a = n2b(input[3]);\r\n                }\r\n            }\r\n        } else {\r\n            v = clone$1(input, {r: 0, g: 0, b: 0, a: 1});\r\n            v.a = n2b(v.a);\r\n        }\r\n        return v;\r\n    }\r\n\r\n    function functionParse(str) {\r\n        if (str.charAt(0) === 'r') {\r\n            return rgbParse(str);\r\n        }\r\n        return hueParse(str);\r\n    }\r\n\r\n    class Color {\r\n        constructor(input) {\r\n            if (input instanceof Color) {\r\n                return input;\r\n            }\r\n            const type = typeof input;\r\n            let v;\r\n            if (type === 'object') {\r\n                v = fromObject(input);\r\n            } else if (type === 'string') {\r\n                v = hexParse(input) || nameParse(input) || functionParse(input);\r\n            }\r\n            this._rgb = v;\r\n            this._valid = !!v;\r\n        }\r\n\r\n        get valid() {\r\n            return this._valid;\r\n        }\r\n\r\n        get rgb() {\r\n            var v = clone$1(this._rgb);\r\n            if (v) {\r\n                v.a = b2n(v.a);\r\n            }\r\n            return v;\r\n        }\r\n\r\n        set rgb(obj) {\r\n            this._rgb = fromObject(obj);\r\n        }\r\n\r\n        rgbString() {\r\n            return this._valid ? rgbString(this._rgb) : this._rgb;\r\n        }\r\n\r\n        hexString() {\r\n            return this._valid ? hexString(this._rgb) : this._rgb;\r\n        }\r\n\r\n        hslString() {\r\n            return this._valid ? hslString(this._rgb) : this._rgb;\r\n        }\r\n\r\n        mix(color, weight) {\r\n            const me = this;\r\n            if (color) {\r\n                const c1 = me.rgb;\r\n                const c2 = color.rgb;\r\n                let w2;\r\n                const p = weight === w2 ? 0.5 : weight;\r\n                const w = 2 * p - 1;\r\n                const a = c1.a - c2.a;\r\n                const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n                w2 = 1 - w1;\r\n                c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\r\n                c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\r\n                c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\r\n                c1.a = p * c1.a + (1 - p) * c2.a;\r\n                me.rgb = c1;\r\n            }\r\n            return me;\r\n        }\r\n\r\n        clone() {\r\n            return new Color(this.rgb);\r\n        }\r\n\r\n        alpha(a) {\r\n            this._rgb.a = n2b(a);\r\n            return this;\r\n        }\r\n\r\n        clearer(ratio) {\r\n            const rgb = this._rgb;\r\n            rgb.a *= 1 - ratio;\r\n            return this;\r\n        }\r\n\r\n        greyscale() {\r\n            const rgb = this._rgb;\r\n            const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\r\n            rgb.r = rgb.g = rgb.b = val;\r\n            return this;\r\n        }\r\n\r\n        opaquer(ratio) {\r\n            const rgb = this._rgb;\r\n            rgb.a *= 1 + ratio;\r\n            return this;\r\n        }\r\n\r\n        negate() {\r\n            const v = this._rgb;\r\n            v.r = 255 - v.r;\r\n            v.g = 255 - v.g;\r\n            v.b = 255 - v.b;\r\n            return this;\r\n        }\r\n\r\n        lighten(ratio) {\r\n            modHSL(this._rgb, 2, ratio);\r\n            return this;\r\n        }\r\n\r\n        darken(ratio) {\r\n            modHSL(this._rgb, 2, -ratio);\r\n            return this;\r\n        }\r\n\r\n        saturate(ratio) {\r\n            modHSL(this._rgb, 1, ratio);\r\n            return this;\r\n        }\r\n\r\n        desaturate(ratio) {\r\n            modHSL(this._rgb, 1, -ratio);\r\n            return this;\r\n        }\r\n\r\n        rotate(deg) {\r\n            rotate(this._rgb, deg);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function index_esm(input) {\r\n        return new Color(input);\r\n    }\r\n\r\n    const isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\r\n\r\n    function color(value) {\r\n        return isPatternOrGradient(value) ? value : index_esm(value);\r\n    }\r\n\r\n    function getHoverColor(value) {\r\n        return isPatternOrGradient(value)\r\n            ? value\r\n            : index_esm(value).saturate(0.5).darken(0.1).hexString();\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    const uid = (function () {\r\n        let id = 0;\r\n        return function () {\r\n            return id++;\r\n        };\r\n    }());\r\n\r\n    function isNullOrUndef(value) {\r\n        return value === null || typeof value === 'undefined';\r\n    }\r\n\r\n    function isArray(value) {\r\n        if (Array.isArray && Array.isArray(value)) {\r\n            return true;\r\n        }\r\n        const type = Object.prototype.toString.call(value);\r\n        if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function isObject(value) {\r\n        return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n    }\r\n\r\n    const isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\r\n\r\n    function finiteOrDefault(value, defaultValue) {\r\n        return isNumberFinite(value) ? value : defaultValue;\r\n    }\r\n\r\n    function valueOrDefault(value, defaultValue) {\r\n        return typeof value === 'undefined' ? defaultValue : value;\r\n    }\r\n\r\n    const toPercentage = (value, dimension) =>\r\n        typeof value === 'string' && value.endsWith('%') ?\r\n            parseFloat(value) / 100\r\n            : value / dimension;\r\n    const toDimension = (value, dimension) =>\r\n        typeof value === 'string' && value.endsWith('%') ?\r\n            parseFloat(value) / 100 * dimension\r\n            : +value;\r\n\r\n    function callback(fn, args, thisArg) {\r\n        if (fn && typeof fn.call === 'function') {\r\n            return fn.apply(thisArg, args);\r\n        }\r\n    }\r\n\r\n    function each(loopable, fn, thisArg, reverse) {\r\n        let i, len, keys;\r\n        if (isArray(loopable)) {\r\n            len = loopable.length;\r\n            if (reverse) {\r\n                for (i = len - 1; i >= 0; i--) {\r\n                    fn.call(thisArg, loopable[i], i);\r\n                }\r\n            } else {\r\n                for (i = 0; i < len; i++) {\r\n                    fn.call(thisArg, loopable[i], i);\r\n                }\r\n            }\r\n        } else if (isObject(loopable)) {\r\n            keys = Object.keys(loopable);\r\n            len = keys.length;\r\n            for (i = 0; i < len; i++) {\r\n                fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function _elementsEqual(a0, a1) {\r\n        let i, ilen, v0, v1;\r\n        if (!a0 || !a1 || a0.length !== a1.length) {\r\n            return false;\r\n        }\r\n        for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n            v0 = a0[i];\r\n            v1 = a1[i];\r\n            if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(source) {\r\n        if (isArray(source)) {\r\n            return source.map(clone);\r\n        }\r\n        if (isObject(source)) {\r\n            const target = Object.create(null);\r\n            const keys = Object.keys(source);\r\n            const klen = keys.length;\r\n            let k = 0;\r\n            for (; k < klen; ++k) {\r\n                target[keys[k]] = clone(source[keys[k]]);\r\n            }\r\n            return target;\r\n        }\r\n        return source;\r\n    }\r\n\r\n    function isValidKey(key) {\r\n        return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\r\n    }\r\n\r\n    function _merger(key, target, source, options) {\r\n        if (!isValidKey(key)) {\r\n            return;\r\n        }\r\n        const tval = target[key];\r\n        const sval = source[key];\r\n        if (isObject(tval) && isObject(sval)) {\r\n            merge(tval, sval, options);\r\n        } else {\r\n            target[key] = clone(sval);\r\n        }\r\n    }\r\n\r\n    function merge(target, source, options) {\r\n        const sources = isArray(source) ? source : [source];\r\n        const ilen = sources.length;\r\n        if (!isObject(target)) {\r\n            return target;\r\n        }\r\n        options = options || {};\r\n        const merger = options.merger || _merger;\r\n        for (let i = 0; i < ilen; ++i) {\r\n            source = sources[i];\r\n            if (!isObject(source)) {\r\n                continue;\r\n            }\r\n            const keys = Object.keys(source);\r\n            for (let k = 0, klen = keys.length; k < klen; ++k) {\r\n                merger(keys[k], target, source, options);\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function mergeIf(target, source) {\r\n        return merge(target, source, {merger: _mergerIf});\r\n    }\r\n\r\n    function _mergerIf(key, target, source) {\r\n        if (!isValidKey(key)) {\r\n            return;\r\n        }\r\n        const tval = target[key];\r\n        const sval = source[key];\r\n        if (isObject(tval) && isObject(sval)) {\r\n            mergeIf(tval, sval);\r\n        } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\r\n            target[key] = clone(sval);\r\n        }\r\n    }\r\n\r\n    function _deprecated(scope, value, previous, current) {\r\n        if (value !== undefined) {\r\n            console.warn(scope + ': \"' + previous +\r\n                '\" is deprecated. Please use \"' + current + '\" instead');\r\n        }\r\n    }\r\n\r\n    const emptyString = '';\r\n    const dot = '.';\r\n\r\n    function indexOfDotOrLength(key, start) {\r\n        const idx = key.indexOf(dot, start);\r\n        return idx === -1 ? key.length : idx;\r\n    }\r\n\r\n    function resolveObjectKey(obj, key) {\r\n        if (key === emptyString) {\r\n            return obj;\r\n        }\r\n        let pos = 0;\r\n        let idx = indexOfDotOrLength(key, pos);\r\n        while (obj && idx > pos) {\r\n            obj = obj[key.substr(pos, idx - pos)];\r\n            pos = idx + 1;\r\n            idx = indexOfDotOrLength(key, pos);\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    function _capitalize(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n\r\n    const defined = (value) => typeof value !== 'undefined';\r\n    const isFunction = (value) => typeof value === 'function';\r\n\r\n    const overrides = Object.create(null);\r\n    const descriptors = Object.create(null);\r\n\r\n    function getScope$1(node, key) {\r\n        if (!key) {\r\n            return node;\r\n        }\r\n        const keys = key.split('.');\r\n        for (let i = 0, n = keys.length; i < n; ++i) {\r\n            const k = keys[i];\r\n            node = node[k] || (node[k] = Object.create(null));\r\n        }\r\n        return node;\r\n    }\r\n\r\n    function set(root, scope, values) {\r\n        if (typeof scope === 'string') {\r\n            return merge(getScope$1(root, scope), values);\r\n        }\r\n        return merge(getScope$1(root, ''), scope);\r\n    }\r\n\r\n    class Defaults {\r\n        constructor(_descriptors) {\r\n            this.animation = undefined;\r\n            this.backgroundColor = 'rgba(0,0,0,0.1)';\r\n            this.borderColor = 'rgba(0,0,0,0.1)';\r\n            this.color = '#666';\r\n            this.datasets = {};\r\n            this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\r\n            this.elements = {};\r\n            this.events = [\r\n                'mousemove',\r\n                'mouseout',\r\n                'click',\r\n                'touchstart',\r\n                'touchmove'\r\n            ];\r\n            this.font = {\r\n                family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n                size: 12,\r\n                style: 'normal',\r\n                lineHeight: 1.2,\r\n                weight: null\r\n            };\r\n            this.hover = {};\r\n            this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\r\n            this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\r\n            this.hoverColor = (ctx, options) => getHoverColor(options.color);\r\n            this.indexAxis = 'x';\r\n            this.interaction = {\r\n                mode: 'nearest',\r\n                intersect: true\r\n            };\r\n            this.maintainAspectRatio = true;\r\n            this.onHover = null;\r\n            this.onClick = null;\r\n            this.parsing = true;\r\n            this.plugins = {};\r\n            this.responsive = true;\r\n            this.scale = undefined;\r\n            this.scales = {};\r\n            this.showLine = true;\r\n            this.describe(_descriptors);\r\n        }\r\n\r\n        set(scope, values) {\r\n            return set(this, scope, values);\r\n        }\r\n\r\n        get(scope) {\r\n            return getScope$1(this, scope);\r\n        }\r\n\r\n        describe(scope, values) {\r\n            return set(descriptors, scope, values);\r\n        }\r\n\r\n        override(scope, values) {\r\n            return set(overrides, scope, values);\r\n        }\r\n\r\n        route(scope, name, targetScope, targetName) {\r\n            const scopeObject = getScope$1(this, scope);\r\n            const targetScopeObject = getScope$1(this, targetScope);\r\n            const privateName = '_' + name;\r\n            Object.defineProperties(scopeObject, {\r\n                [privateName]: {\r\n                    value: scopeObject[name],\r\n                    writable: true\r\n                },\r\n                [name]: {\r\n                    enumerable: true,\r\n                    get() {\r\n                        const local = this[privateName];\r\n                        const target = targetScopeObject[targetName];\r\n                        if (isObject(local)) {\r\n                            return Object.assign({}, target, local);\r\n                        }\r\n                        return valueOrDefault(local, target);\r\n                    },\r\n                    set(value) {\r\n                        this[privateName] = value;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    var defaults = new Defaults({\r\n        _scriptable: (name) => !name.startsWith('on'),\r\n        _indexable: (name) => name !== 'events',\r\n        hover: {\r\n            _fallback: 'interaction'\r\n        },\r\n        interaction: {\r\n            _scriptable: false,\r\n            _indexable: false,\r\n        }\r\n    });\r\n\r\n    const PI = Math.PI;\r\n    const TAU = 2 * PI;\r\n    const PITAU = TAU + PI;\r\n    const INFINITY = Number.POSITIVE_INFINITY;\r\n    const RAD_PER_DEG = PI / 180;\r\n    const HALF_PI = PI / 2;\r\n    const QUARTER_PI = PI / 4;\r\n    const TWO_THIRDS_PI = PI * 2 / 3;\r\n    const log10 = Math.log10;\r\n    const sign = Math.sign;\r\n\r\n    function niceNum(range) {\r\n        const niceRange = Math.pow(10, Math.floor(log10(range)));\r\n        const fraction = range / niceRange;\r\n        const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\r\n        return niceFraction * niceRange;\r\n    }\r\n\r\n    function _factorize(value) {\r\n        const result = [];\r\n        const sqrt = Math.sqrt(value);\r\n        let i;\r\n        for (i = 1; i < sqrt; i++) {\r\n            if (value % i === 0) {\r\n                result.push(i);\r\n                result.push(value / i);\r\n            }\r\n        }\r\n        if (sqrt === (sqrt | 0)) {\r\n            result.push(sqrt);\r\n        }\r\n        result.sort((a, b) => a - b).pop();\r\n        return result;\r\n    }\r\n\r\n    function isNumber(n) {\r\n        return !isNaN(parseFloat(n)) && isFinite(n);\r\n    }\r\n\r\n    function almostEquals(x, y, epsilon) {\r\n        return Math.abs(x - y) < epsilon;\r\n    }\r\n\r\n    function almostWhole(x, epsilon) {\r\n        const rounded = Math.round(x);\r\n        return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\r\n    }\r\n\r\n    function _setMinAndMaxByKey(array, target, property) {\r\n        let i, ilen, value;\r\n        for (i = 0, ilen = array.length; i < ilen; i++) {\r\n            value = array[i][property];\r\n            if (!isNaN(value)) {\r\n                target.min = Math.min(target.min, value);\r\n                target.max = Math.max(target.max, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    function toRadians(degrees) {\r\n        return degrees * (PI / 180);\r\n    }\r\n\r\n    function toDegrees(radians) {\r\n        return radians * (180 / PI);\r\n    }\r\n\r\n    function _decimalPlaces(x) {\r\n        if (!isNumberFinite(x)) {\r\n            return;\r\n        }\r\n        let e = 1;\r\n        let p = 0;\r\n        while (Math.round(x * e) / e !== x) {\r\n            e *= 10;\r\n            p++;\r\n        }\r\n        return p;\r\n    }\r\n\r\n    function getAngleFromPoint(centrePoint, anglePoint) {\r\n        const distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n        const distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n        const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n        let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n        if (angle < (-0.5 * PI)) {\r\n            angle += TAU;\r\n        }\r\n        return {\r\n            angle,\r\n            distance: radialDistanceFromCenter\r\n        };\r\n    }\r\n\r\n    function distanceBetweenPoints(pt1, pt2) {\r\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n    }\r\n\r\n    function _angleDiff(a, b) {\r\n        return (a - b + PITAU) % TAU - PI;\r\n    }\r\n\r\n    function _normalizeAngle(a) {\r\n        return (a % TAU + TAU) % TAU;\r\n    }\r\n\r\n    function _angleBetween(angle, start, end) {\r\n        const a = _normalizeAngle(angle);\r\n        const s = _normalizeAngle(start);\r\n        const e = _normalizeAngle(end);\r\n        const angleToStart = _normalizeAngle(s - a);\r\n        const angleToEnd = _normalizeAngle(e - a);\r\n        const startToAngle = _normalizeAngle(a - s);\r\n        const endToAngle = _normalizeAngle(a - e);\r\n        return a === s || a === e || (angleToStart > angleToEnd && startToAngle < endToAngle);\r\n    }\r\n\r\n    function _limitValue(value, min, max) {\r\n        return Math.max(min, Math.min(max, value));\r\n    }\r\n\r\n    function _int16Range(value) {\r\n        return _limitValue(value, -32768, 32767);\r\n    }\r\n\r\n    function toFontString(font) {\r\n        if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\r\n            return null;\r\n        }\r\n        return (font.style ? font.style + ' ' : '')\r\n            + (font.weight ? font.weight + ' ' : '')\r\n            + font.size + 'px '\r\n            + font.family;\r\n    }\r\n\r\n    function _measureText(ctx, data, gc, longest, string) {\r\n        let textWidth = data[string];\r\n        if (!textWidth) {\r\n            textWidth = data[string] = ctx.measureText(string).width;\r\n            gc.push(string);\r\n        }\r\n        if (textWidth > longest) {\r\n            longest = textWidth;\r\n        }\r\n        return longest;\r\n    }\r\n\r\n    function _longestText(ctx, font, arrayOfThings, cache) {\r\n        cache = cache || {};\r\n        let data = cache.data = cache.data || {};\r\n        let gc = cache.garbageCollect = cache.garbageCollect || [];\r\n        if (cache.font !== font) {\r\n            data = cache.data = {};\r\n            gc = cache.garbageCollect = [];\r\n            cache.font = font;\r\n        }\r\n        ctx.save();\r\n        ctx.font = font;\r\n        let longest = 0;\r\n        const ilen = arrayOfThings.length;\r\n        let i, j, jlen, thing, nestedThing;\r\n        for (i = 0; i < ilen; i++) {\r\n            thing = arrayOfThings[i];\r\n            if (thing !== undefined && thing !== null && isArray(thing) !== true) {\r\n                longest = _measureText(ctx, data, gc, longest, thing);\r\n            } else if (isArray(thing)) {\r\n                for (j = 0, jlen = thing.length; j < jlen; j++) {\r\n                    nestedThing = thing[j];\r\n                    if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\r\n                        longest = _measureText(ctx, data, gc, longest, nestedThing);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        ctx.restore();\r\n        const gcLen = gc.length / 2;\r\n        if (gcLen > arrayOfThings.length) {\r\n            for (i = 0; i < gcLen; i++) {\r\n                delete data[gc[i]];\r\n            }\r\n            gc.splice(0, gcLen);\r\n        }\r\n        return longest;\r\n    }\r\n\r\n    function _alignPixel(chart, pixel, width) {\r\n        const devicePixelRatio = chart.currentDevicePixelRatio;\r\n        const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\r\n        return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\r\n    }\r\n\r\n    function clearCanvas(canvas, ctx) {\r\n        ctx = ctx || canvas.getContext('2d');\r\n        ctx.save();\r\n        ctx.resetTransform();\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.restore();\r\n    }\r\n\r\n    function drawPoint(ctx, options, x, y) {\r\n        let type, xOffset, yOffset, size, cornerRadius;\r\n        const style = options.pointStyle;\r\n        const rotation = options.rotation;\r\n        const radius = options.radius;\r\n        let rad = (rotation || 0) * RAD_PER_DEG;\r\n        if (style && typeof style === 'object') {\r\n            type = style.toString();\r\n            if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n                ctx.save();\r\n                ctx.translate(x, y);\r\n                ctx.rotate(rad);\r\n                ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\r\n                ctx.restore();\r\n                return;\r\n            }\r\n        }\r\n        if (isNaN(radius) || radius <= 0) {\r\n            return;\r\n        }\r\n        ctx.beginPath();\r\n        switch (style) {\r\n            default:\r\n                ctx.arc(x, y, radius, 0, TAU);\r\n                ctx.closePath();\r\n                break;\r\n            case 'triangle':\r\n                ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\r\n                rad += TWO_THIRDS_PI;\r\n                ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\r\n                rad += TWO_THIRDS_PI;\r\n                ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\r\n                ctx.closePath();\r\n                break;\r\n            case 'rectRounded':\r\n                cornerRadius = radius * 0.516;\r\n                size = radius - cornerRadius;\r\n                xOffset = Math.cos(rad + QUARTER_PI) * size;\r\n                yOffset = Math.sin(rad + QUARTER_PI) * size;\r\n                ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\r\n                ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\r\n                ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\r\n                ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\r\n                ctx.closePath();\r\n                break;\r\n            case 'rect':\r\n                if (!rotation) {\r\n                    size = Math.SQRT1_2 * radius;\r\n                    ctx.rect(x - size, y - size, 2 * size, 2 * size);\r\n                    break;\r\n                }\r\n                rad += QUARTER_PI;\r\n            case 'rectRot':\r\n                xOffset = Math.cos(rad) * radius;\r\n                yOffset = Math.sin(rad) * radius;\r\n                ctx.moveTo(x - xOffset, y - yOffset);\r\n                ctx.lineTo(x + yOffset, y - xOffset);\r\n                ctx.lineTo(x + xOffset, y + yOffset);\r\n                ctx.lineTo(x - yOffset, y + xOffset);\r\n                ctx.closePath();\r\n                break;\r\n            case 'crossRot':\r\n                rad += QUARTER_PI;\r\n            case 'cross':\r\n                xOffset = Math.cos(rad) * radius;\r\n                yOffset = Math.sin(rad) * radius;\r\n                ctx.moveTo(x - xOffset, y - yOffset);\r\n                ctx.lineTo(x + xOffset, y + yOffset);\r\n                ctx.moveTo(x + yOffset, y - xOffset);\r\n                ctx.lineTo(x - yOffset, y + xOffset);\r\n                break;\r\n            case 'star':\r\n                xOffset = Math.cos(rad) * radius;\r\n                yOffset = Math.sin(rad) * radius;\r\n                ctx.moveTo(x - xOffset, y - yOffset);\r\n                ctx.lineTo(x + xOffset, y + yOffset);\r\n                ctx.moveTo(x + yOffset, y - xOffset);\r\n                ctx.lineTo(x - yOffset, y + xOffset);\r\n                rad += QUARTER_PI;\r\n                xOffset = Math.cos(rad) * radius;\r\n                yOffset = Math.sin(rad) * radius;\r\n                ctx.moveTo(x - xOffset, y - yOffset);\r\n                ctx.lineTo(x + xOffset, y + yOffset);\r\n                ctx.moveTo(x + yOffset, y - xOffset);\r\n                ctx.lineTo(x - yOffset, y + xOffset);\r\n                break;\r\n            case 'line':\r\n                xOffset = Math.cos(rad) * radius;\r\n                yOffset = Math.sin(rad) * radius;\r\n                ctx.moveTo(x - xOffset, y - yOffset);\r\n                ctx.lineTo(x + xOffset, y + yOffset);\r\n                break;\r\n            case 'dash':\r\n                ctx.moveTo(x, y);\r\n                ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\r\n                break;\r\n        }\r\n        ctx.fill();\r\n        if (options.borderWidth > 0) {\r\n            ctx.stroke();\r\n        }\r\n    }\r\n\r\n    function _isPointInArea(point, area, margin) {\r\n        margin = margin || 0.5;\r\n        return point && point.x > area.left - margin && point.x < area.right + margin &&\r\n            point.y > area.top - margin && point.y < area.bottom + margin;\r\n    }\r\n\r\n    function clipArea(ctx, area) {\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n        ctx.clip();\r\n    }\r\n\r\n    function unclipArea(ctx) {\r\n        ctx.restore();\r\n    }\r\n\r\n    function _steppedLineTo(ctx, previous, target, flip, mode) {\r\n        if (!previous) {\r\n            return ctx.lineTo(target.x, target.y);\r\n        }\r\n        if (mode === 'middle') {\r\n            const midpoint = (previous.x + target.x) / 2.0;\r\n            ctx.lineTo(midpoint, previous.y);\r\n            ctx.lineTo(midpoint, target.y);\r\n        } else if (mode === 'after' !== !!flip) {\r\n            ctx.lineTo(previous.x, target.y);\r\n        } else {\r\n            ctx.lineTo(target.x, previous.y);\r\n        }\r\n        ctx.lineTo(target.x, target.y);\r\n    }\r\n\r\n    function _bezierCurveTo(ctx, previous, target, flip) {\r\n        if (!previous) {\r\n            return ctx.lineTo(target.x, target.y);\r\n        }\r\n        ctx.bezierCurveTo(\r\n            flip ? previous.cp1x : previous.cp2x,\r\n            flip ? previous.cp1y : previous.cp2y,\r\n            flip ? target.cp2x : target.cp1x,\r\n            flip ? target.cp2y : target.cp1y,\r\n            target.x,\r\n            target.y);\r\n    }\r\n\r\n    function renderText(ctx, text, x, y, font, opts = {}) {\r\n        const lines = isArray(text) ? text : [text];\r\n        const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\r\n        let i, line;\r\n        ctx.save();\r\n        if (opts.translation) {\r\n            ctx.translate(opts.translation[0], opts.translation[1]);\r\n        }\r\n        if (!isNullOrUndef(opts.rotation)) {\r\n            ctx.rotate(opts.rotation);\r\n        }\r\n        ctx.font = font.string;\r\n        if (opts.color) {\r\n            ctx.fillStyle = opts.color;\r\n        }\r\n        if (opts.textAlign) {\r\n            ctx.textAlign = opts.textAlign;\r\n        }\r\n        if (opts.textBaseline) {\r\n            ctx.textBaseline = opts.textBaseline;\r\n        }\r\n        for (i = 0; i < lines.length; ++i) {\r\n            line = lines[i];\r\n            if (stroke) {\r\n                if (opts.strokeColor) {\r\n                    ctx.strokeStyle = opts.strokeColor;\r\n                }\r\n                if (!isNullOrUndef(opts.strokeWidth)) {\r\n                    ctx.lineWidth = opts.strokeWidth;\r\n                }\r\n                ctx.strokeText(line, x, y, opts.maxWidth);\r\n            }\r\n            ctx.fillText(line, x, y, opts.maxWidth);\r\n            if (opts.strikethrough || opts.underline) {\r\n                const metrics = ctx.measureText(line);\r\n                const left = x - metrics.actualBoundingBoxLeft;\r\n                const right = x + metrics.actualBoundingBoxRight;\r\n                const top = y - metrics.actualBoundingBoxAscent;\r\n                const bottom = y + metrics.actualBoundingBoxDescent;\r\n                const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\r\n                ctx.strokeStyle = ctx.fillStyle;\r\n                ctx.beginPath();\r\n                ctx.lineWidth = opts.decorationWidth || 2;\r\n                ctx.moveTo(left, yDecoration);\r\n                ctx.lineTo(right, yDecoration);\r\n                ctx.stroke();\r\n            }\r\n            y += font.lineHeight;\r\n        }\r\n        ctx.restore();\r\n    }\r\n\r\n    function _lookup(table, value, cmp) {\r\n        cmp = cmp || ((index) => table[index] < value);\r\n        let hi = table.length - 1;\r\n        let lo = 0;\r\n        let mid;\r\n        while (hi - lo > 1) {\r\n            mid = (lo + hi) >> 1;\r\n            if (cmp(mid)) {\r\n                lo = mid;\r\n            } else {\r\n                hi = mid;\r\n            }\r\n        }\r\n        return {lo, hi};\r\n    }\r\n\r\n    const _lookupByKey = (table, key, value) =>\r\n        _lookup(table, value, index => table[index][key] < value);\r\n    const _rlookupByKey = (table, key, value) =>\r\n        _lookup(table, value, index => table[index][key] >= value);\r\n\r\n    function _filterBetween(values, min, max) {\r\n        let start = 0;\r\n        let end = values.length;\r\n        while (start < end && values[start] < min) {\r\n            start++;\r\n        }\r\n        while (end > start && values[end - 1] > max) {\r\n            end--;\r\n        }\r\n        return start > 0 || end < values.length\r\n            ? values.slice(start, end)\r\n            : values;\r\n    }\r\n\r\n    const arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\n\r\n    function listenArrayEvents(array, listener) {\r\n        if (array._chartjs) {\r\n            array._chartjs.listeners.push(listener);\r\n            return;\r\n        }\r\n        Object.defineProperty(array, '_chartjs', {\r\n            configurable: true,\r\n            enumerable: false,\r\n            value: {\r\n                listeners: [listener]\r\n            }\r\n        });\r\n        arrayEvents.forEach((key) => {\r\n            const method = '_onData' + _capitalize(key);\r\n            const base = array[key];\r\n            Object.defineProperty(array, key, {\r\n                configurable: true,\r\n                enumerable: false,\r\n                value(...args) {\r\n                    const res = base.apply(this, args);\r\n                    array._chartjs.listeners.forEach((object) => {\r\n                        if (typeof object[method] === 'function') {\r\n                            object[method](...args);\r\n                        }\r\n                    });\r\n                    return res;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    function unlistenArrayEvents(array, listener) {\r\n        const stub = array._chartjs;\r\n        if (!stub) {\r\n            return;\r\n        }\r\n        const listeners = stub.listeners;\r\n        const index = listeners.indexOf(listener);\r\n        if (index !== -1) {\r\n            listeners.splice(index, 1);\r\n        }\r\n        if (listeners.length > 0) {\r\n            return;\r\n        }\r\n        arrayEvents.forEach((key) => {\r\n            delete array[key];\r\n        });\r\n        delete array._chartjs;\r\n    }\r\n\r\n    function _arrayUnique(items) {\r\n        const set = new Set();\r\n        let i, ilen;\r\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n            set.add(items[i]);\r\n        }\r\n        if (set.size === ilen) {\r\n            return items;\r\n        }\r\n        const result = [];\r\n        set.forEach(item => {\r\n            result.push(item);\r\n        });\r\n        return result;\r\n    }\r\n\r\n    function _getParentNode(domNode) {\r\n        let parent = domNode.parentNode;\r\n        if (parent && parent.toString() === '[object ShadowRoot]') {\r\n            parent = parent.host;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    function parseMaxStyle(styleValue, node, parentProperty) {\r\n        let valueInPixels;\r\n        if (typeof styleValue === 'string') {\r\n            valueInPixels = parseInt(styleValue, 10);\r\n            if (styleValue.indexOf('%') !== -1) {\r\n                valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n            }\r\n        } else {\r\n            valueInPixels = styleValue;\r\n        }\r\n        return valueInPixels;\r\n    }\r\n\r\n    const getComputedStyle = (element) => window.getComputedStyle(element, null);\r\n\r\n    function getStyle(el, property) {\r\n        return getComputedStyle(el).getPropertyValue(property);\r\n    }\r\n\r\n    const positions = ['top', 'right', 'bottom', 'left'];\r\n\r\n    function getPositionedStyle(styles, style, suffix) {\r\n        const result = {};\r\n        suffix = suffix ? '-' + suffix : '';\r\n        for (let i = 0; i < 4; i++) {\r\n            const pos = positions[i];\r\n            result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\r\n        }\r\n        result.width = result.left + result.right;\r\n        result.height = result.top + result.bottom;\r\n        return result;\r\n    }\r\n\r\n    const useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\r\n\r\n    function getCanvasPosition(evt, canvas) {\r\n        const e = evt.native || evt;\r\n        const touches = e.touches;\r\n        const source = touches && touches.length ? touches[0] : e;\r\n        const {offsetX, offsetY} = source;\r\n        let box = false;\r\n        let x, y;\r\n        if (useOffsetPos(offsetX, offsetY, e.target)) {\r\n            x = offsetX;\r\n            y = offsetY;\r\n        } else {\r\n            const rect = canvas.getBoundingClientRect();\r\n            x = source.clientX - rect.left;\r\n            y = source.clientY - rect.top;\r\n            box = true;\r\n        }\r\n        return {x, y, box};\r\n    }\r\n\r\n    function getRelativePosition$1(evt, chart) {\r\n        const {canvas, currentDevicePixelRatio} = chart;\r\n        const style = getComputedStyle(canvas);\r\n        const borderBox = style.boxSizing === 'border-box';\r\n        const paddings = getPositionedStyle(style, 'padding');\r\n        const borders = getPositionedStyle(style, 'border', 'width');\r\n        const {x, y, box} = getCanvasPosition(evt, canvas);\r\n        const xOffset = paddings.left + (box && borders.left);\r\n        const yOffset = paddings.top + (box && borders.top);\r\n        let {width, height} = chart;\r\n        if (borderBox) {\r\n            width -= paddings.width + borders.width;\r\n            height -= paddings.height + borders.height;\r\n        }\r\n        return {\r\n            x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\r\n            y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\r\n        };\r\n    }\r\n\r\n    function getContainerSize(canvas, width, height) {\r\n        let maxWidth, maxHeight;\r\n        if (width === undefined || height === undefined) {\r\n            const container = _getParentNode(canvas);\r\n            if (!container) {\r\n                width = canvas.clientWidth;\r\n                height = canvas.clientHeight;\r\n            } else {\r\n                const rect = container.getBoundingClientRect();\r\n                const containerStyle = getComputedStyle(container);\r\n                const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\r\n                const containerPadding = getPositionedStyle(containerStyle, 'padding');\r\n                width = rect.width - containerPadding.width - containerBorder.width;\r\n                height = rect.height - containerPadding.height - containerBorder.height;\r\n                maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\r\n                maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\r\n            }\r\n        }\r\n        return {\r\n            width,\r\n            height,\r\n            maxWidth: maxWidth || INFINITY,\r\n            maxHeight: maxHeight || INFINITY\r\n        };\r\n    }\r\n\r\n    const round1 = v => Math.round(v * 10) / 10;\r\n\r\n    function getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\r\n        const style = getComputedStyle(canvas);\r\n        const margins = getPositionedStyle(style, 'margin');\r\n        const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\r\n        const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\r\n        const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\r\n        let {width, height} = containerSize;\r\n        if (style.boxSizing === 'content-box') {\r\n            const borders = getPositionedStyle(style, 'border', 'width');\r\n            const paddings = getPositionedStyle(style, 'padding');\r\n            width -= paddings.width + borders.width;\r\n            height -= paddings.height + borders.height;\r\n        }\r\n        width = Math.max(0, width - margins.width);\r\n        height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\r\n        width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\r\n        height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\r\n        if (width && !height) {\r\n            height = round1(width / 2);\r\n        }\r\n        return {\r\n            width,\r\n            height\r\n        };\r\n    }\r\n\r\n    function retinaScale(chart, forceRatio, forceStyle) {\r\n        const pixelRatio = chart.currentDevicePixelRatio = forceRatio || 1;\r\n        const {canvas, width, height} = chart;\r\n        canvas.height = height * pixelRatio;\r\n        canvas.width = width * pixelRatio;\r\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\r\n            canvas.style.height = height + 'px';\r\n            canvas.style.width = width + 'px';\r\n        }\r\n    }\r\n\r\n    const supportsEventListenerOptions = (function () {\r\n        let passiveSupported = false;\r\n        try {\r\n            const options = {\r\n                get passive() {\r\n                    passiveSupported = true;\r\n                    return false;\r\n                }\r\n            };\r\n            window.addEventListener('test', null, options);\r\n            window.removeEventListener('test', null, options);\r\n        } catch (e) {\r\n        }\r\n        return passiveSupported;\r\n    }());\r\n\r\n    function readUsedSize(element, property) {\r\n        const value = getStyle(element, property);\r\n        const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n        return matches ? +matches[1] : undefined;\r\n    }\r\n\r\n    function getRelativePosition(e, chart) {\r\n        if ('native' in e) {\r\n            return {\r\n                x: e.x,\r\n                y: e.y\r\n            };\r\n        }\r\n        return getRelativePosition$1(e, chart);\r\n    }\r\n\r\n    function evaluateAllVisibleItems(chart, handler) {\r\n        const metasets = chart.getSortedVisibleDatasetMetas();\r\n        let index, data, element;\r\n        for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n            ({index, data} = metasets[i]);\r\n            for (let j = 0, jlen = data.length; j < jlen; ++j) {\r\n                element = data[j];\r\n                if (!element.skip) {\r\n                    handler(element, index, j);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function binarySearch(metaset, axis, value, intersect) {\r\n        const {controller, data, _sorted} = metaset;\r\n        const iScale = controller._cachedMeta.iScale;\r\n        if (iScale && axis === iScale.axis && _sorted && data.length) {\r\n            const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\r\n            if (!intersect) {\r\n                return lookupMethod(data, axis, value);\r\n            } else if (controller._sharedOptions) {\r\n                const el = data[0];\r\n                const range = typeof el.getRange === 'function' && el.getRange(axis);\r\n                if (range) {\r\n                    const start = lookupMethod(data, axis, value - range);\r\n                    const end = lookupMethod(data, axis, value + range);\r\n                    return {lo: start.lo, hi: end.hi};\r\n                }\r\n            }\r\n        }\r\n        return {lo: 0, hi: data.length - 1};\r\n    }\r\n\r\n    function optimizedEvaluateItems(chart, axis, position, handler, intersect) {\r\n        const metasets = chart.getSortedVisibleDatasetMetas();\r\n        const value = position[axis];\r\n        for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n            const {index, data} = metasets[i];\r\n            const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\r\n            for (let j = lo; j <= hi; ++j) {\r\n                const element = data[j];\r\n                if (!element.skip) {\r\n                    handler(element, index, j);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getDistanceMetricForAxis(axis) {\r\n        const useX = axis.indexOf('x') !== -1;\r\n        const useY = axis.indexOf('y') !== -1;\r\n        return function (pt1, pt2) {\r\n            const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n            const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n            return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n        };\r\n    }\r\n\r\n    function getIntersectItems(chart, position, axis, useFinalPosition) {\r\n        const items = [];\r\n        if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n            return items;\r\n        }\r\n        const evaluationFunc = function (element, datasetIndex, index) {\r\n            if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n                items.push({element, datasetIndex, index});\r\n            }\r\n        };\r\n        optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\r\n        return items;\r\n    }\r\n\r\n    function getNearestItems(chart, position, axis, intersect, useFinalPosition) {\r\n        const distanceMetric = getDistanceMetricForAxis(axis);\r\n        let minDistance = Number.POSITIVE_INFINITY;\r\n        let items = [];\r\n        if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n            return items;\r\n        }\r\n        const evaluationFunc = function (element, datasetIndex, index) {\r\n            if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\r\n                return;\r\n            }\r\n            const center = element.getCenterPoint(useFinalPosition);\r\n            const distance = distanceMetric(position, center);\r\n            if (distance < minDistance) {\r\n                items = [{element, datasetIndex, index}];\r\n                minDistance = distance;\r\n            } else if (distance === minDistance) {\r\n                items.push({element, datasetIndex, index});\r\n            }\r\n        };\r\n        optimizedEvaluateItems(chart, axis, position, evaluationFunc);\r\n        return items;\r\n    }\r\n\r\n    function getAxisItems(chart, e, options, useFinalPosition) {\r\n        const position = getRelativePosition(e, chart);\r\n        const items = [];\r\n        const axis = options.axis;\r\n        const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\r\n        let intersectsItem = false;\r\n        evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\r\n            if (element[rangeMethod](position[axis], useFinalPosition)) {\r\n                items.push({element, datasetIndex, index});\r\n            }\r\n            if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n                intersectsItem = true;\r\n            }\r\n        });\r\n        if (options.intersect && !intersectsItem) {\r\n            return [];\r\n        }\r\n        return items;\r\n    }\r\n\r\n    var Interaction = {\r\n        modes: {\r\n            index(chart, e, options, useFinalPosition) {\r\n                const position = getRelativePosition(e, chart);\r\n                const axis = options.axis || 'x';\r\n                const items = options.intersect\r\n                    ? getIntersectItems(chart, position, axis, useFinalPosition)\r\n                    : getNearestItems(chart, position, axis, false, useFinalPosition);\r\n                const elements = [];\r\n                if (!items.length) {\r\n                    return [];\r\n                }\r\n                chart.getSortedVisibleDatasetMetas().forEach((meta) => {\r\n                    const index = items[0].index;\r\n                    const element = meta.data[index];\r\n                    if (element && !element.skip) {\r\n                        elements.push({element, datasetIndex: meta.index, index});\r\n                    }\r\n                });\r\n                return elements;\r\n            },\r\n            dataset(chart, e, options, useFinalPosition) {\r\n                const position = getRelativePosition(e, chart);\r\n                const axis = options.axis || 'xy';\r\n                let items = options.intersect\r\n                    ? getIntersectItems(chart, position, axis, useFinalPosition) :\r\n                    getNearestItems(chart, position, axis, false, useFinalPosition);\r\n                if (items.length > 0) {\r\n                    const datasetIndex = items[0].datasetIndex;\r\n                    const data = chart.getDatasetMeta(datasetIndex).data;\r\n                    items = [];\r\n                    for (let i = 0; i < data.length; ++i) {\r\n                        items.push({element: data[i], datasetIndex, index: i});\r\n                    }\r\n                }\r\n                return items;\r\n            },\r\n            point(chart, e, options, useFinalPosition) {\r\n                const position = getRelativePosition(e, chart);\r\n                const axis = options.axis || 'xy';\r\n                return getIntersectItems(chart, position, axis, useFinalPosition);\r\n            },\r\n            nearest(chart, e, options, useFinalPosition) {\r\n                const position = getRelativePosition(e, chart);\r\n                const axis = options.axis || 'xy';\r\n                return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\r\n            },\r\n            x(chart, e, options, useFinalPosition) {\r\n                options.axis = 'x';\r\n                return getAxisItems(chart, e, options, useFinalPosition);\r\n            },\r\n            y(chart, e, options, useFinalPosition) {\r\n                options.axis = 'y';\r\n                return getAxisItems(chart, e, options, useFinalPosition);\r\n            }\r\n        }\r\n    };\r\n\r\n    const LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\r\n\r\n    function toLineHeight(value, size) {\r\n        const matches = ('' + value).match(LINE_HEIGHT);\r\n        if (!matches || matches[1] === 'normal') {\r\n            return size * 1.2;\r\n        }\r\n        value = +matches[2];\r\n        switch (matches[3]) {\r\n            case 'px':\r\n                return value;\r\n            case '%':\r\n                value /= 100;\r\n                break;\r\n        }\r\n        return size * value;\r\n    }\r\n\r\n    const numberOrZero$1 = v => +v || 0;\r\n\r\n    function readValueToProps(value, props) {\r\n        const ret = {};\r\n        const objProps = isObject(props);\r\n        const keys = objProps ? Object.keys(props) : props;\r\n        const read = isObject(value)\r\n            ? objProps\r\n                ? prop => valueOrDefault(value[prop], value[props[prop]])\r\n                : prop => value[prop]\r\n            : () => value;\r\n        for (const prop of keys) {\r\n            ret[prop] = numberOrZero$1(read(prop));\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function toTRBL(value) {\r\n        return readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\r\n    }\r\n\r\n    function toTRBLCorners(value) {\r\n        return readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\r\n    }\r\n\r\n    function toPadding(value) {\r\n        const obj = toTRBL(value);\r\n        obj.width = obj.left + obj.right;\r\n        obj.height = obj.top + obj.bottom;\r\n        return obj;\r\n    }\r\n\r\n    function toFont(options, fallback) {\r\n        options = options || {};\r\n        fallback = fallback || defaults.font;\r\n        let size = valueOrDefault(options.size, fallback.size);\r\n        if (typeof size === 'string') {\r\n            size = parseInt(size, 10);\r\n        }\r\n        const font = {\r\n            family: valueOrDefault(options.family, fallback.family),\r\n            lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\r\n            size,\r\n            style: valueOrDefault(options.style, fallback.style),\r\n            weight: valueOrDefault(options.weight, fallback.weight),\r\n            string: ''\r\n        };\r\n        font.string = toFontString(font);\r\n        return font;\r\n    }\r\n\r\n    function resolve(inputs, context, index, info) {\r\n        let cacheable = true;\r\n        let i, ilen, value;\r\n        for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n            value = inputs[i];\r\n            if (value === undefined) {\r\n                continue;\r\n            }\r\n            if (context !== undefined && typeof value === 'function') {\r\n                value = value(context);\r\n                cacheable = false;\r\n            }\r\n            if (index !== undefined && isArray(value)) {\r\n                value = value[index % value.length];\r\n                cacheable = false;\r\n            }\r\n            if (value !== undefined) {\r\n                if (info && !cacheable) {\r\n                    info.cacheable = false;\r\n                }\r\n                return value;\r\n            }\r\n        }\r\n    }\r\n\r\n    function _addGrace(minmax, grace) {\r\n        const {min, max} = minmax;\r\n        return {\r\n            min: min - Math.abs(toDimension(grace, min)),\r\n            max: max + toDimension(grace, max)\r\n        };\r\n    }\r\n\r\n    const STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\r\n\r\n    function filterByPosition(array, position) {\r\n        return array.filter(v => v.pos === position);\r\n    }\r\n\r\n    function filterDynamicPositionByAxis(array, axis) {\r\n        return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\r\n    }\r\n\r\n    function sortByWeight(array, reverse) {\r\n        return array.sort((a, b) => {\r\n            const v0 = reverse ? b : a;\r\n            const v1 = reverse ? a : b;\r\n            return v0.weight === v1.weight ?\r\n                v0.index - v1.index :\r\n                v0.weight - v1.weight;\r\n        });\r\n    }\r\n\r\n    function wrapBoxes(boxes) {\r\n        const layoutBoxes = [];\r\n        let i, ilen, box;\r\n        for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\r\n            box = boxes[i];\r\n            layoutBoxes.push({\r\n                index: i,\r\n                box,\r\n                pos: box.position,\r\n                horizontal: box.isHorizontal(),\r\n                weight: box.weight\r\n            });\r\n        }\r\n        return layoutBoxes;\r\n    }\r\n\r\n    function setLayoutDims(layouts, params) {\r\n        let i, ilen, layout;\r\n        for (i = 0, ilen = layouts.length; i < ilen; ++i) {\r\n            layout = layouts[i];\r\n            if (layout.horizontal) {\r\n                layout.width = layout.box.fullSize && params.availableWidth;\r\n                layout.height = params.hBoxMaxHeight;\r\n            } else {\r\n                layout.width = params.vBoxMaxWidth;\r\n                layout.height = layout.box.fullSize && params.availableHeight;\r\n            }\r\n        }\r\n    }\r\n\r\n    function buildLayoutBoxes(boxes) {\r\n        const layoutBoxes = wrapBoxes(boxes);\r\n        const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\r\n        const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\r\n        const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\r\n        const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\r\n        const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\r\n        const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\r\n        const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\r\n        return {\r\n            fullSize,\r\n            leftAndTop: left.concat(top),\r\n            rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\r\n            chartArea: filterByPosition(layoutBoxes, 'chartArea'),\r\n            vertical: left.concat(right).concat(centerVertical),\r\n            horizontal: top.concat(bottom).concat(centerHorizontal)\r\n        };\r\n    }\r\n\r\n    function getCombinedMax(maxPadding, chartArea, a, b) {\r\n        return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\r\n    }\r\n\r\n    function updateMaxPadding(maxPadding, boxPadding) {\r\n        maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\r\n        maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\r\n        maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\r\n        maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\r\n    }\r\n\r\n    function updateDims(chartArea, params, layout) {\r\n        const box = layout.box;\r\n        const maxPadding = chartArea.maxPadding;\r\n        if (isObject(layout.pos)) {\r\n            return {same: false, other: false};\r\n        }\r\n        if (layout.size) {\r\n            chartArea[layout.pos] -= layout.size;\r\n        }\r\n        layout.size = layout.horizontal ? box.height : box.width;\r\n        chartArea[layout.pos] += layout.size;\r\n        if (box.getPadding) {\r\n            updateMaxPadding(maxPadding, box.getPadding());\r\n        }\r\n        const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\r\n        const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\r\n        const widthChanged = newWidth !== chartArea.w;\r\n        const heightChanged = newHeight !== chartArea.h;\r\n        chartArea.w = newWidth;\r\n        chartArea.h = newHeight;\r\n        return layout.horizontal\r\n            ? {same: widthChanged, other: heightChanged}\r\n            : {same: heightChanged, other: widthChanged};\r\n    }\r\n\r\n    function handleMaxPadding(chartArea) {\r\n        const maxPadding = chartArea.maxPadding;\r\n\r\n        function updatePos(pos) {\r\n            const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\r\n            chartArea[pos] += change;\r\n            return change;\r\n        }\r\n\r\n        chartArea.y += updatePos('top');\r\n        chartArea.x += updatePos('left');\r\n        updatePos('right');\r\n        updatePos('bottom');\r\n    }\r\n\r\n    function getMargins(horizontal, chartArea) {\r\n        const maxPadding = chartArea.maxPadding;\r\n\r\n        function marginForPositions(positions) {\r\n            const margin = {left: 0, top: 0, right: 0, bottom: 0};\r\n            positions.forEach((pos) => {\r\n                margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\r\n            });\r\n            return margin;\r\n        }\r\n\r\n        return horizontal\r\n            ? marginForPositions(['left', 'right'])\r\n            : marginForPositions(['top', 'bottom']);\r\n    }\r\n\r\n    function fitBoxes(boxes, chartArea, params) {\r\n        const refitBoxes = [];\r\n        let i, ilen, layout, box, refit, changed;\r\n        for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\r\n            layout = boxes[i];\r\n            box = layout.box;\r\n            box.update(\r\n                layout.width || chartArea.w,\r\n                layout.height || chartArea.h,\r\n                getMargins(layout.horizontal, chartArea)\r\n            );\r\n            const {same, other} = updateDims(chartArea, params, layout);\r\n            refit |= same && refitBoxes.length;\r\n            changed = changed || other;\r\n            if (!box.fullSize) {\r\n                refitBoxes.push(layout);\r\n            }\r\n        }\r\n        return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\r\n    }\r\n\r\n    function placeBoxes(boxes, chartArea, params) {\r\n        const userPadding = params.padding;\r\n        let x = chartArea.x;\r\n        let y = chartArea.y;\r\n        let i, ilen, layout, box;\r\n        for (i = 0, ilen = boxes.length; i < ilen; ++i) {\r\n            layout = boxes[i];\r\n            box = layout.box;\r\n            if (layout.horizontal) {\r\n                box.left = box.fullSize ? userPadding.left : chartArea.left;\r\n                box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\r\n                box.top = y;\r\n                box.bottom = y + box.height;\r\n                box.width = box.right - box.left;\r\n                y = box.bottom;\r\n            } else {\r\n                box.left = x;\r\n                box.right = x + box.width;\r\n                box.top = box.fullSize ? userPadding.top : chartArea.top;\r\n                box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\r\n                box.height = box.bottom - box.top;\r\n                x = box.right;\r\n            }\r\n        }\r\n        chartArea.x = x;\r\n        chartArea.y = y;\r\n    }\r\n\r\n    defaults.set('layout', {\r\n        padding: {\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0\r\n        }\r\n    });\r\n    var layouts = {\r\n        addBox(chart, item) {\r\n            if (!chart.boxes) {\r\n                chart.boxes = [];\r\n            }\r\n            item.fullSize = item.fullSize || false;\r\n            item.position = item.position || 'top';\r\n            item.weight = item.weight || 0;\r\n            item._layers = item._layers || function () {\r\n                return [{\r\n                    z: 0,\r\n                    draw(chartArea) {\r\n                        item.draw(chartArea);\r\n                    }\r\n                }];\r\n            };\r\n            chart.boxes.push(item);\r\n        },\r\n        removeBox(chart, layoutItem) {\r\n            const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n            if (index !== -1) {\r\n                chart.boxes.splice(index, 1);\r\n            }\r\n        },\r\n        configure(chart, item, options) {\r\n            item.fullSize = options.fullSize;\r\n            item.position = options.position;\r\n            item.weight = options.weight;\r\n        },\r\n        update(chart, width, height, minPadding) {\r\n            if (!chart) {\r\n                return;\r\n            }\r\n            const padding = toPadding(chart.options.layout.padding);\r\n            const availableWidth = width - padding.width;\r\n            const availableHeight = height - padding.height;\r\n            const boxes = buildLayoutBoxes(chart.boxes);\r\n            const verticalBoxes = boxes.vertical;\r\n            const horizontalBoxes = boxes.horizontal;\r\n            each(chart.boxes, box => {\r\n                if (typeof box.beforeLayout === 'function') {\r\n                    box.beforeLayout();\r\n                }\r\n            });\r\n            const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\r\n                wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\r\n            const params = Object.freeze({\r\n                outerWidth: width,\r\n                outerHeight: height,\r\n                padding,\r\n                availableWidth,\r\n                availableHeight,\r\n                vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\r\n                hBoxMaxHeight: availableHeight / 2\r\n            });\r\n            const maxPadding = Object.assign({}, padding);\r\n            updateMaxPadding(maxPadding, toPadding(minPadding));\r\n            const chartArea = Object.assign({\r\n                maxPadding,\r\n                w: availableWidth,\r\n                h: availableHeight,\r\n                x: padding.left,\r\n                y: padding.top\r\n            }, padding);\r\n            setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\r\n            fitBoxes(boxes.fullSize, chartArea, params);\r\n            fitBoxes(verticalBoxes, chartArea, params);\r\n            if (fitBoxes(horizontalBoxes, chartArea, params)) {\r\n                fitBoxes(verticalBoxes, chartArea, params);\r\n            }\r\n            handleMaxPadding(chartArea);\r\n            placeBoxes(boxes.leftAndTop, chartArea, params);\r\n            chartArea.x += chartArea.w;\r\n            chartArea.y += chartArea.h;\r\n            placeBoxes(boxes.rightAndBottom, chartArea, params);\r\n            chart.chartArea = {\r\n                left: chartArea.left,\r\n                top: chartArea.top,\r\n                right: chartArea.left + chartArea.w,\r\n                bottom: chartArea.top + chartArea.h,\r\n                height: chartArea.h,\r\n                width: chartArea.w,\r\n            };\r\n            each(boxes.chartArea, (layout) => {\r\n                const box = layout.box;\r\n                Object.assign(box, chart.chartArea);\r\n                box.update(chartArea.w, chartArea.h);\r\n            });\r\n        }\r\n    };\r\n\r\n    class BasePlatform {\r\n        acquireContext(canvas, aspectRatio) {\r\n        }\r\n\r\n        releaseContext(context) {\r\n            return false;\r\n        }\r\n\r\n        addEventListener(chart, type, listener) {\r\n        }\r\n\r\n        removeEventListener(chart, type, listener) {\r\n        }\r\n\r\n        getDevicePixelRatio() {\r\n            return 1;\r\n        }\r\n\r\n        getMaximumSize(element, width, height, aspectRatio) {\r\n            width = Math.max(0, width || element.width);\r\n            height = height || element.height;\r\n            return {\r\n                width,\r\n                height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\r\n            };\r\n        }\r\n\r\n        isAttached(canvas) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    class BasicPlatform extends BasePlatform {\r\n        acquireContext(item) {\r\n            return item && item.getContext && item.getContext('2d') || null;\r\n        }\r\n    }\r\n\r\n    const EXPANDO_KEY = '$chartjs';\r\n    const EVENT_TYPES = {\r\n        touchstart: 'mousedown',\r\n        touchmove: 'mousemove',\r\n        touchend: 'mouseup',\r\n        pointerenter: 'mouseenter',\r\n        pointerdown: 'mousedown',\r\n        pointermove: 'mousemove',\r\n        pointerup: 'mouseup',\r\n        pointerleave: 'mouseout',\r\n        pointerout: 'mouseout'\r\n    };\r\n    const isNullOrEmpty = value => value === null || value === '';\r\n\r\n    function initCanvas(canvas, aspectRatio) {\r\n        const style = canvas.style;\r\n        const renderHeight = canvas.getAttribute('height');\r\n        const renderWidth = canvas.getAttribute('width');\r\n        canvas[EXPANDO_KEY] = {\r\n            initial: {\r\n                height: renderHeight,\r\n                width: renderWidth,\r\n                style: {\r\n                    display: style.display,\r\n                    height: style.height,\r\n                    width: style.width\r\n                }\r\n            }\r\n        };\r\n        style.display = style.display || 'block';\r\n        style.boxSizing = style.boxSizing || 'border-box';\r\n        if (isNullOrEmpty(renderWidth)) {\r\n            const displayWidth = readUsedSize(canvas, 'width');\r\n            if (displayWidth !== undefined) {\r\n                canvas.width = displayWidth;\r\n            }\r\n        }\r\n        if (isNullOrEmpty(renderHeight)) {\r\n            if (canvas.style.height === '') {\r\n                canvas.height = canvas.width / (aspectRatio || 2);\r\n            } else {\r\n                const displayHeight = readUsedSize(canvas, 'height');\r\n                if (displayHeight !== undefined) {\r\n                    canvas.height = displayHeight;\r\n                }\r\n            }\r\n        }\r\n        return canvas;\r\n    }\r\n\r\n    const eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\r\n\r\n    function addListener(node, type, listener) {\r\n        node.addEventListener(type, listener, eventListenerOptions);\r\n    }\r\n\r\n    function removeListener(chart, type, listener) {\r\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\r\n    }\r\n\r\n    function fromNativeEvent(event, chart) {\r\n        const type = EVENT_TYPES[event.type] || event.type;\r\n        const {x, y} = getRelativePosition$1(event, chart);\r\n        return {\r\n            type,\r\n            chart,\r\n            native: event,\r\n            x: x !== undefined ? x : null,\r\n            y: y !== undefined ? y : null,\r\n        };\r\n    }\r\n\r\n    function createAttachObserver(chart, type, listener) {\r\n        const canvas = chart.canvas;\r\n        const container = canvas && _getParentNode(canvas);\r\n        const element = container || canvas;\r\n        const observer = new MutationObserver(entries => {\r\n            const parent = _getParentNode(element);\r\n            entries.forEach(entry => {\r\n                for (let i = 0; i < entry.addedNodes.length; i++) {\r\n                    const added = entry.addedNodes[i];\r\n                    if (added === element || added === parent) {\r\n                        listener(entry.target);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        observer.observe(document, {childList: true, subtree: true});\r\n        return observer;\r\n    }\r\n\r\n    function createDetachObserver(chart, type, listener) {\r\n        const canvas = chart.canvas;\r\n        const container = canvas && _getParentNode(canvas);\r\n        if (!container) {\r\n            return;\r\n        }\r\n        const observer = new MutationObserver(entries => {\r\n            entries.forEach(entry => {\r\n                for (let i = 0; i < entry.removedNodes.length; i++) {\r\n                    if (entry.removedNodes[i] === canvas) {\r\n                        listener();\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        observer.observe(container, {childList: true});\r\n        return observer;\r\n    }\r\n\r\n    const drpListeningCharts = new Map();\r\n    let oldDevicePixelRatio = 0;\r\n\r\n    function onWindowResize() {\r\n        const dpr = window.devicePixelRatio;\r\n        if (dpr === oldDevicePixelRatio) {\r\n            return;\r\n        }\r\n        oldDevicePixelRatio = dpr;\r\n        drpListeningCharts.forEach((resize, chart) => {\r\n            if (chart.currentDevicePixelRatio !== dpr) {\r\n                resize();\r\n            }\r\n        });\r\n    }\r\n\r\n    function listenDevicePixelRatioChanges(chart, resize) {\r\n        if (!drpListeningCharts.size) {\r\n            window.addEventListener('resize', onWindowResize);\r\n        }\r\n        drpListeningCharts.set(chart, resize);\r\n    }\r\n\r\n    function unlistenDevicePixelRatioChanges(chart) {\r\n        drpListeningCharts.delete(chart);\r\n        if (!drpListeningCharts.size) {\r\n            window.removeEventListener('resize', onWindowResize);\r\n        }\r\n    }\r\n\r\n    function createResizeObserver(chart, type, listener) {\r\n        const canvas = chart.canvas;\r\n        const container = canvas && _getParentNode(canvas);\r\n        if (!container) {\r\n            return;\r\n        }\r\n        const resize = throttled((width, height) => {\r\n            const w = container.clientWidth;\r\n            listener(width, height);\r\n            if (w < container.clientWidth) {\r\n                listener();\r\n            }\r\n        }, window);\r\n        const observer = new ResizeObserver(entries => {\r\n            const entry = entries[0];\r\n            const width = entry.contentRect.width;\r\n            const height = entry.contentRect.height;\r\n            if (width === 0 && height === 0) {\r\n                return;\r\n            }\r\n            resize(width, height);\r\n        });\r\n        observer.observe(container);\r\n        listenDevicePixelRatioChanges(chart, resize);\r\n        return observer;\r\n    }\r\n\r\n    function releaseObserver(chart, type, observer) {\r\n        if (observer) {\r\n            observer.disconnect();\r\n        }\r\n        if (type === 'resize') {\r\n            unlistenDevicePixelRatioChanges(chart);\r\n        }\r\n    }\r\n\r\n    function createProxyAndListen(chart, type, listener) {\r\n        const canvas = chart.canvas;\r\n        const proxy = throttled((event) => {\r\n            if (chart.ctx !== null) {\r\n                listener(fromNativeEvent(event, chart));\r\n            }\r\n        }, chart, (args) => {\r\n            const event = args[0];\r\n            return [event, event.offsetX, event.offsetY];\r\n        });\r\n        addListener(canvas, type, proxy);\r\n        return proxy;\r\n    }\r\n\r\n    class DomPlatform extends BasePlatform {\r\n        acquireContext(canvas, aspectRatio) {\r\n            const context = canvas && canvas.getContext && canvas.getContext('2d');\r\n            if (context && context.canvas === canvas) {\r\n                initCanvas(canvas, aspectRatio);\r\n                return context;\r\n            }\r\n            return null;\r\n        }\r\n\r\n        releaseContext(context) {\r\n            const canvas = context.canvas;\r\n            if (!canvas[EXPANDO_KEY]) {\r\n                return false;\r\n            }\r\n            const initial = canvas[EXPANDO_KEY].initial;\r\n            ['height', 'width'].forEach((prop) => {\r\n                const value = initial[prop];\r\n                if (isNullOrUndef(value)) {\r\n                    canvas.removeAttribute(prop);\r\n                } else {\r\n                    canvas.setAttribute(prop, value);\r\n                }\r\n            });\r\n            const style = initial.style || {};\r\n            Object.keys(style).forEach((key) => {\r\n                canvas.style[key] = style[key];\r\n            });\r\n            canvas.width = canvas.width;\r\n            delete canvas[EXPANDO_KEY];\r\n            return true;\r\n        }\r\n\r\n        addEventListener(chart, type, listener) {\r\n            this.removeEventListener(chart, type);\r\n            const proxies = chart.$proxies || (chart.$proxies = {});\r\n            const handlers = {\r\n                attach: createAttachObserver,\r\n                detach: createDetachObserver,\r\n                resize: createResizeObserver\r\n            };\r\n            const handler = handlers[type] || createProxyAndListen;\r\n            proxies[type] = handler(chart, type, listener);\r\n        }\r\n\r\n        removeEventListener(chart, type) {\r\n            const proxies = chart.$proxies || (chart.$proxies = {});\r\n            const proxy = proxies[type];\r\n            if (!proxy) {\r\n                return;\r\n            }\r\n            const handlers = {\r\n                attach: releaseObserver,\r\n                detach: releaseObserver,\r\n                resize: releaseObserver\r\n            };\r\n            const handler = handlers[type] || removeListener;\r\n            handler(chart, type, proxy);\r\n            proxies[type] = undefined;\r\n        }\r\n\r\n        getDevicePixelRatio() {\r\n            return window.devicePixelRatio;\r\n        }\r\n\r\n        getMaximumSize(canvas, width, height, aspectRatio) {\r\n            return getMaximumSize(canvas, width, height, aspectRatio);\r\n        }\r\n\r\n        isAttached(canvas) {\r\n            const container = _getParentNode(canvas);\r\n            return !!(container && _getParentNode(container));\r\n        }\r\n    }\r\n\r\n    var platforms = /*#__PURE__*/Object.freeze({\r\n        __proto__: null,\r\n        BasePlatform: BasePlatform,\r\n        BasicPlatform: BasicPlatform,\r\n        DomPlatform: DomPlatform\r\n    });\r\n\r\n    const atEdge = (t) => t === 0 || t === 1;\r\n    const elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\r\n    const elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\r\n    const effects = {\r\n        linear: t => t,\r\n        easeInQuad: t => t * t,\r\n        easeOutQuad: t => -t * (t - 2),\r\n        easeInOutQuad: t => ((t /= 0.5) < 1)\r\n            ? 0.5 * t * t\r\n            : -0.5 * ((--t) * (t - 2) - 1),\r\n        easeInCubic: t => t * t * t,\r\n        easeOutCubic: t => (t -= 1) * t * t + 1,\r\n        easeInOutCubic: t => ((t /= 0.5) < 1)\r\n            ? 0.5 * t * t * t\r\n            : 0.5 * ((t -= 2) * t * t + 2),\r\n        easeInQuart: t => t * t * t * t,\r\n        easeOutQuart: t => -((t -= 1) * t * t * t - 1),\r\n        easeInOutQuart: t => ((t /= 0.5) < 1)\r\n            ? 0.5 * t * t * t * t\r\n            : -0.5 * ((t -= 2) * t * t * t - 2),\r\n        easeInQuint: t => t * t * t * t * t,\r\n        easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\r\n        easeInOutQuint: t => ((t /= 0.5) < 1)\r\n            ? 0.5 * t * t * t * t * t\r\n            : 0.5 * ((t -= 2) * t * t * t * t + 2),\r\n        easeInSine: t => -Math.cos(t * HALF_PI) + 1,\r\n        easeOutSine: t => Math.sin(t * HALF_PI),\r\n        easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\r\n        easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\r\n        easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\r\n        easeInOutExpo: t => atEdge(t) ? t : t < 0.5\r\n            ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\r\n            : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\r\n        easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\r\n        easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\r\n        easeInOutCirc: t => ((t /= 0.5) < 1)\r\n            ? -0.5 * (Math.sqrt(1 - t * t) - 1)\r\n            : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\r\n        easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\r\n        easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\r\n        easeInOutElastic(t) {\r\n            const s = 0.1125;\r\n            const p = 0.45;\r\n            return atEdge(t) ? t :\r\n                t < 0.5\r\n                    ? 0.5 * elasticIn(t * 2, s, p)\r\n                    : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\r\n        },\r\n        easeInBack(t) {\r\n            const s = 1.70158;\r\n            return t * t * ((s + 1) * t - s);\r\n        },\r\n        easeOutBack(t) {\r\n            const s = 1.70158;\r\n            return (t -= 1) * t * ((s + 1) * t + s) + 1;\r\n        },\r\n        easeInOutBack(t) {\r\n            let s = 1.70158;\r\n            if ((t /= 0.5) < 1) {\r\n                return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n            }\r\n            return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n        },\r\n        easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\r\n        easeOutBounce(t) {\r\n            const m = 7.5625;\r\n            const d = 2.75;\r\n            if (t < (1 / d)) {\r\n                return m * t * t;\r\n            }\r\n            if (t < (2 / d)) {\r\n                return m * (t -= (1.5 / d)) * t + 0.75;\r\n            }\r\n            if (t < (2.5 / d)) {\r\n                return m * (t -= (2.25 / d)) * t + 0.9375;\r\n            }\r\n            return m * (t -= (2.625 / d)) * t + 0.984375;\r\n        },\r\n        easeInOutBounce: t => (t < 0.5)\r\n            ? effects.easeInBounce(t * 2) * 0.5\r\n            : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\r\n    };\r\n\r\n    const transparent = 'transparent';\r\n    const interpolators = {\r\n        boolean(from, to, factor) {\r\n            return factor > 0.5 ? to : from;\r\n        },\r\n        color(from, to, factor) {\r\n            const c0 = color(from || transparent);\r\n            const c1 = c0.valid && color(to || transparent);\r\n            return c1 && c1.valid\r\n                ? c1.mix(c0, factor).hexString()\r\n                : to;\r\n        },\r\n        number(from, to, factor) {\r\n            return from + (to - from) * factor;\r\n        }\r\n    };\r\n\r\n    class Animation {\r\n        constructor(cfg, target, prop, to) {\r\n            const currentValue = target[prop];\r\n            to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n            const from = resolve([cfg.from, currentValue, to]);\r\n            this._active = true;\r\n            this._fn = cfg.fn || interpolators[cfg.type || typeof from];\r\n            this._easing = effects[cfg.easing] || effects.linear;\r\n            this._start = Math.floor(Date.now() + (cfg.delay || 0));\r\n            this._duration = this._total = Math.floor(cfg.duration);\r\n            this._loop = !!cfg.loop;\r\n            this._target = target;\r\n            this._prop = prop;\r\n            this._from = from;\r\n            this._to = to;\r\n            this._promises = undefined;\r\n        }\r\n\r\n        active() {\r\n            return this._active;\r\n        }\r\n\r\n        update(cfg, to, date) {\r\n            const me = this;\r\n            if (me._active) {\r\n                me._notify(false);\r\n                const currentValue = me._target[me._prop];\r\n                const elapsed = date - me._start;\r\n                const remain = me._duration - elapsed;\r\n                me._start = date;\r\n                me._duration = Math.floor(Math.max(remain, cfg.duration));\r\n                me._total += elapsed;\r\n                me._loop = !!cfg.loop;\r\n                me._to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n                me._from = resolve([cfg.from, currentValue, to]);\r\n            }\r\n        }\r\n\r\n        cancel() {\r\n            const me = this;\r\n            if (me._active) {\r\n                me.tick(Date.now());\r\n                me._active = false;\r\n                me._notify(false);\r\n            }\r\n        }\r\n\r\n        tick(date) {\r\n            const me = this;\r\n            const elapsed = date - me._start;\r\n            const duration = me._duration;\r\n            const prop = me._prop;\r\n            const from = me._from;\r\n            const loop = me._loop;\r\n            const to = me._to;\r\n            let factor;\r\n            me._active = from !== to && (loop || (elapsed < duration));\r\n            if (!me._active) {\r\n                me._target[prop] = to;\r\n                me._notify(true);\r\n                return;\r\n            }\r\n            if (elapsed < 0) {\r\n                me._target[prop] = from;\r\n                return;\r\n            }\r\n            factor = (elapsed / duration) % 2;\r\n            factor = loop && factor > 1 ? 2 - factor : factor;\r\n            factor = me._easing(Math.min(1, Math.max(0, factor)));\r\n            me._target[prop] = me._fn(from, to, factor);\r\n        }\r\n\r\n        wait() {\r\n            const promises = this._promises || (this._promises = []);\r\n            return new Promise((res, rej) => {\r\n                promises.push({res, rej});\r\n            });\r\n        }\r\n\r\n        _notify(resolved) {\r\n            const method = resolved ? 'res' : 'rej';\r\n            const promises = this._promises || [];\r\n            for (let i = 0; i < promises.length; i++) {\r\n                promises[i][method]();\r\n            }\r\n        }\r\n    }\r\n\r\n    const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\r\n    const colors = ['color', 'borderColor', 'backgroundColor'];\r\n    defaults.set('animation', {\r\n        delay: undefined,\r\n        duration: 1000,\r\n        easing: 'easeOutQuart',\r\n        fn: undefined,\r\n        from: undefined,\r\n        loop: undefined,\r\n        to: undefined,\r\n        type: undefined,\r\n    });\r\n    const animationOptions = Object.keys(defaults.animation);\r\n    defaults.describe('animation', {\r\n        _fallback: false,\r\n        _indexable: false,\r\n        _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\r\n    });\r\n    defaults.set('animations', {\r\n        colors: {\r\n            type: 'color',\r\n            properties: colors\r\n        },\r\n        numbers: {\r\n            type: 'number',\r\n            properties: numbers\r\n        },\r\n    });\r\n    defaults.describe('animations', {\r\n        _fallback: 'animation',\r\n    });\r\n    defaults.set('transitions', {\r\n        active: {\r\n            animation: {\r\n                duration: 400\r\n            }\r\n        },\r\n        resize: {\r\n            animation: {\r\n                duration: 0\r\n            }\r\n        },\r\n        show: {\r\n            animations: {\r\n                colors: {\r\n                    from: 'transparent'\r\n                },\r\n                visible: {\r\n                    type: 'boolean',\r\n                    duration: 0\r\n                },\r\n            }\r\n        },\r\n        hide: {\r\n            animations: {\r\n                colors: {\r\n                    to: 'transparent'\r\n                },\r\n                visible: {\r\n                    type: 'boolean',\r\n                    easing: 'linear',\r\n                    fn: v => v | 0\r\n                },\r\n            }\r\n        }\r\n    });\r\n\r\n    class Animations {\r\n        constructor(chart, config) {\r\n            this._chart = chart;\r\n            this._properties = new Map();\r\n            this.configure(config);\r\n        }\r\n\r\n        configure(config) {\r\n            if (!isObject(config)) {\r\n                return;\r\n            }\r\n            const animatedProps = this._properties;\r\n            Object.getOwnPropertyNames(config).forEach(key => {\r\n                const cfg = config[key];\r\n                if (!isObject(cfg)) {\r\n                    return;\r\n                }\r\n                const resolved = {};\r\n                for (const option of animationOptions) {\r\n                    resolved[option] = cfg[option];\r\n                }\r\n                (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\r\n                    if (prop === key || !animatedProps.has(prop)) {\r\n                        animatedProps.set(prop, resolved);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        _animateOptions(target, values) {\r\n            const newOptions = values.options;\r\n            const options = resolveTargetOptions(target, newOptions);\r\n            if (!options) {\r\n                return [];\r\n            }\r\n            const animations = this._createAnimations(options, newOptions);\r\n            if (newOptions.$shared) {\r\n                awaitAll(target.options.$animations, newOptions).then(() => {\r\n                    target.options = newOptions;\r\n                }, () => {\r\n                });\r\n            }\r\n            return animations;\r\n        }\r\n\r\n        _createAnimations(target, values) {\r\n            const animatedProps = this._properties;\r\n            const animations = [];\r\n            const running = target.$animations || (target.$animations = {});\r\n            const props = Object.keys(values);\r\n            const date = Date.now();\r\n            let i;\r\n            for (i = props.length - 1; i >= 0; --i) {\r\n                const prop = props[i];\r\n                if (prop.charAt(0) === '$') {\r\n                    continue;\r\n                }\r\n                if (prop === 'options') {\r\n                    animations.push(...this._animateOptions(target, values));\r\n                    continue;\r\n                }\r\n                const value = values[prop];\r\n                let animation = running[prop];\r\n                const cfg = animatedProps.get(prop);\r\n                if (animation) {\r\n                    if (cfg && animation.active()) {\r\n                        animation.update(cfg, value, date);\r\n                        continue;\r\n                    } else {\r\n                        animation.cancel();\r\n                    }\r\n                }\r\n                if (!cfg || !cfg.duration) {\r\n                    target[prop] = value;\r\n                    continue;\r\n                }\r\n                running[prop] = animation = new Animation(cfg, target, prop, value);\r\n                animations.push(animation);\r\n            }\r\n            return animations;\r\n        }\r\n\r\n        update(target, values) {\r\n            if (this._properties.size === 0) {\r\n                Object.assign(target, values);\r\n                return;\r\n            }\r\n            const animations = this._createAnimations(target, values);\r\n            if (animations.length) {\r\n                animator.add(this._chart, animations);\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    function awaitAll(animations, properties) {\r\n        const running = [];\r\n        const keys = Object.keys(properties);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const anim = animations[keys[i]];\r\n            if (anim && anim.active()) {\r\n                running.push(anim.wait());\r\n            }\r\n        }\r\n        return Promise.all(running);\r\n    }\r\n\r\n    function resolveTargetOptions(target, newOptions) {\r\n        if (!newOptions) {\r\n            return;\r\n        }\r\n        let options = target.options;\r\n        if (!options) {\r\n            target.options = newOptions;\r\n            return;\r\n        }\r\n        if (options.$shared) {\r\n            target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\r\n        }\r\n        return options;\r\n    }\r\n\r\n    function scaleClip(scale, allowedOverflow) {\r\n        const opts = scale && scale.options || {};\r\n        const reverse = opts.reverse;\r\n        const min = opts.min === undefined ? allowedOverflow : 0;\r\n        const max = opts.max === undefined ? allowedOverflow : 0;\r\n        return {\r\n            start: reverse ? max : min,\r\n            end: reverse ? min : max\r\n        };\r\n    }\r\n\r\n    function defaultClip(xScale, yScale, allowedOverflow) {\r\n        if (allowedOverflow === false) {\r\n            return false;\r\n        }\r\n        const x = scaleClip(xScale, allowedOverflow);\r\n        const y = scaleClip(yScale, allowedOverflow);\r\n        return {\r\n            top: y.end,\r\n            right: x.end,\r\n            bottom: y.start,\r\n            left: x.start\r\n        };\r\n    }\r\n\r\n    function toClip(value) {\r\n        let t, r, b, l;\r\n        if (isObject(value)) {\r\n            t = value.top;\r\n            r = value.right;\r\n            b = value.bottom;\r\n            l = value.left;\r\n        } else {\r\n            t = r = b = l = value;\r\n        }\r\n        return {\r\n            top: t,\r\n            right: r,\r\n            bottom: b,\r\n            left: l\r\n        };\r\n    }\r\n\r\n    function getSortedDatasetIndices(chart, filterVisible) {\r\n        const keys = [];\r\n        const metasets = chart._getSortedDatasetMetas(filterVisible);\r\n        let i, ilen;\r\n        for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n            keys.push(metasets[i].index);\r\n        }\r\n        return keys;\r\n    }\r\n\r\n    function applyStack(stack, value, dsIndex, options) {\r\n        const keys = stack.keys;\r\n        const singleMode = options.mode === 'single';\r\n        let i, ilen, datasetIndex, otherValue;\r\n        if (value === null) {\r\n            return;\r\n        }\r\n        for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n            datasetIndex = +keys[i];\r\n            if (datasetIndex === dsIndex) {\r\n                if (options.all) {\r\n                    continue;\r\n                }\r\n                break;\r\n            }\r\n            otherValue = stack.values[datasetIndex];\r\n            if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\r\n                value += otherValue;\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function convertObjectDataToArray(data) {\r\n        const keys = Object.keys(data);\r\n        const adata = new Array(keys.length);\r\n        let i, ilen, key;\r\n        for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n            key = keys[i];\r\n            adata[i] = {\r\n                x: key,\r\n                y: data[key]\r\n            };\r\n        }\r\n        return adata;\r\n    }\r\n\r\n    function isStacked(scale, meta) {\r\n        const stacked = scale && scale.options.stacked;\r\n        return stacked || (stacked === undefined && meta.stack !== undefined);\r\n    }\r\n\r\n    function getStackKey(indexScale, valueScale, meta) {\r\n        return indexScale.id + '.' + valueScale.id + '.' + meta.stack + '.' + meta.type;\r\n    }\r\n\r\n    function getUserBounds(scale) {\r\n        const {min, max, minDefined, maxDefined} = scale.getUserBounds();\r\n        return {\r\n            min: minDefined ? min : Number.NEGATIVE_INFINITY,\r\n            max: maxDefined ? max : Number.POSITIVE_INFINITY\r\n        };\r\n    }\r\n\r\n    function getOrCreateStack(stacks, stackKey, indexValue) {\r\n        const subStack = stacks[stackKey] || (stacks[stackKey] = {});\r\n        return subStack[indexValue] || (subStack[indexValue] = {});\r\n    }\r\n\r\n    function updateStacks(controller, parsed) {\r\n        const {chart, _cachedMeta: meta} = controller;\r\n        const stacks = chart._stacks || (chart._stacks = {});\r\n        const {iScale, vScale, index: datasetIndex} = meta;\r\n        const iAxis = iScale.axis;\r\n        const vAxis = vScale.axis;\r\n        const key = getStackKey(iScale, vScale, meta);\r\n        const ilen = parsed.length;\r\n        let stack;\r\n        for (let i = 0; i < ilen; ++i) {\r\n            const item = parsed[i];\r\n            const {[iAxis]: index, [vAxis]: value} = item;\r\n            const itemStacks = item._stacks || (item._stacks = {});\r\n            stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\r\n            stack[datasetIndex] = value;\r\n        }\r\n    }\r\n\r\n    function getFirstScaleId(chart, axis) {\r\n        const scales = chart.scales;\r\n        return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\r\n    }\r\n\r\n    function createDatasetContext(parent, index) {\r\n        return Object.assign(Object.create(parent),\r\n            {\r\n                active: false,\r\n                dataset: undefined,\r\n                datasetIndex: index,\r\n                index,\r\n                mode: 'default',\r\n                type: 'dataset'\r\n            }\r\n        );\r\n    }\r\n\r\n    function createDataContext(parent, index, element) {\r\n        return Object.assign(Object.create(parent), {\r\n            active: false,\r\n            dataIndex: index,\r\n            parsed: undefined,\r\n            raw: undefined,\r\n            element,\r\n            index,\r\n            mode: 'default',\r\n            type: 'data'\r\n        });\r\n    }\r\n\r\n    function clearStacks(meta, items) {\r\n        items = items || meta._parsed;\r\n        for (const parsed of items) {\r\n            const stacks = parsed._stacks;\r\n            if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\r\n                return;\r\n            }\r\n            delete stacks[meta.vScale.id][meta.index];\r\n        }\r\n    }\r\n\r\n    const isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\r\n    const cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\r\n\r\n    class DatasetController {\r\n        constructor(chart, datasetIndex) {\r\n            this.chart = chart;\r\n            this._ctx = chart.ctx;\r\n            this.index = datasetIndex;\r\n            this._cachedDataOpts = {};\r\n            this._cachedMeta = this.getMeta();\r\n            this._type = this._cachedMeta.type;\r\n            this.options = undefined;\r\n            this._parsing = false;\r\n            this._data = undefined;\r\n            this._objectData = undefined;\r\n            this._sharedOptions = undefined;\r\n            this._drawStart = undefined;\r\n            this._drawCount = undefined;\r\n            this.enableOptionSharing = false;\r\n            this.$context = undefined;\r\n            this.initialize();\r\n        }\r\n\r\n        initialize() {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            me.configure();\r\n            me.linkScales();\r\n            meta._stacked = isStacked(meta.vScale, meta);\r\n            me.addElements();\r\n        }\r\n\r\n        updateIndex(datasetIndex) {\r\n            this.index = datasetIndex;\r\n        }\r\n\r\n        linkScales() {\r\n            const me = this;\r\n            const chart = me.chart;\r\n            const meta = me._cachedMeta;\r\n            const dataset = me.getDataset();\r\n            const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\r\n            const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\r\n            const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\r\n            const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\r\n            const indexAxis = meta.indexAxis;\r\n            const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\r\n            const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\r\n            meta.xScale = me.getScaleForId(xid);\r\n            meta.yScale = me.getScaleForId(yid);\r\n            meta.rScale = me.getScaleForId(rid);\r\n            meta.iScale = me.getScaleForId(iid);\r\n            meta.vScale = me.getScaleForId(vid);\r\n        }\r\n\r\n        getDataset() {\r\n            return this.chart.data.datasets[this.index];\r\n        }\r\n\r\n        getMeta() {\r\n            return this.chart.getDatasetMeta(this.index);\r\n        }\r\n\r\n        getScaleForId(scaleID) {\r\n            return this.chart.scales[scaleID];\r\n        }\r\n\r\n        _getOtherScale(scale) {\r\n            const meta = this._cachedMeta;\r\n            return scale === meta.iScale\r\n                ? meta.vScale\r\n                : meta.iScale;\r\n        }\r\n\r\n        reset() {\r\n            this._update('reset');\r\n        }\r\n\r\n        _destroy() {\r\n            const meta = this._cachedMeta;\r\n            if (this._data) {\r\n                unlistenArrayEvents(this._data, this);\r\n            }\r\n            if (meta._stacked) {\r\n                clearStacks(meta);\r\n            }\r\n        }\r\n\r\n        _dataCheck() {\r\n            const me = this;\r\n            const dataset = me.getDataset();\r\n            const data = dataset.data || (dataset.data = []);\r\n            if (isObject(data)) {\r\n                me._data = convertObjectDataToArray(data);\r\n            } else if (me._data !== data) {\r\n                if (me._data) {\r\n                    unlistenArrayEvents(me._data, me);\r\n                    clearStacks(me._cachedMeta);\r\n                }\r\n                if (data && Object.isExtensible(data)) {\r\n                    listenArrayEvents(data, me);\r\n                }\r\n                me._data = data;\r\n            }\r\n        }\r\n\r\n        addElements() {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            me._dataCheck();\r\n            if (me.datasetElementType) {\r\n                meta.dataset = new me.datasetElementType();\r\n            }\r\n        }\r\n\r\n        buildOrUpdateElements(resetNewElements) {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            const dataset = me.getDataset();\r\n            let stackChanged = false;\r\n            me._dataCheck();\r\n            meta._stacked = isStacked(meta.vScale, meta);\r\n            if (meta.stack !== dataset.stack) {\r\n                stackChanged = true;\r\n                clearStacks(meta);\r\n                meta.stack = dataset.stack;\r\n            }\r\n            me._resyncElements(resetNewElements);\r\n            if (stackChanged) {\r\n                updateStacks(me, meta._parsed);\r\n            }\r\n        }\r\n\r\n        configure() {\r\n            const me = this;\r\n            const config = me.chart.config;\r\n            const scopeKeys = config.datasetScopeKeys(me._type);\r\n            const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\r\n            me.options = config.createResolver(scopes, me.getContext());\r\n            me._parsing = me.options.parsing;\r\n        }\r\n\r\n        parse(start, count) {\r\n            const me = this;\r\n            const {_cachedMeta: meta, _data: data} = me;\r\n            const {iScale, _stacked} = meta;\r\n            const iAxis = iScale.axis;\r\n            let sorted = start === 0 && count === data.length ? true : meta._sorted;\r\n            let prev = start > 0 && meta._parsed[start - 1];\r\n            let i, cur, parsed;\r\n            if (me._parsing === false) {\r\n                meta._parsed = data;\r\n                meta._sorted = true;\r\n            } else {\r\n                if (isArray(data[start])) {\r\n                    parsed = me.parseArrayData(meta, data, start, count);\r\n                } else if (isObject(data[start])) {\r\n                    parsed = me.parseObjectData(meta, data, start, count);\r\n                } else {\r\n                    parsed = me.parsePrimitiveData(meta, data, start, count);\r\n                }\r\n                const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\r\n                for (i = 0; i < count; ++i) {\r\n                    meta._parsed[i + start] = cur = parsed[i];\r\n                    if (sorted) {\r\n                        if (isNotInOrderComparedToPrev()) {\r\n                            sorted = false;\r\n                        }\r\n                        prev = cur;\r\n                    }\r\n                }\r\n                meta._sorted = sorted;\r\n            }\r\n            if (_stacked) {\r\n                updateStacks(me, parsed);\r\n            }\r\n        }\r\n\r\n        parsePrimitiveData(meta, data, start, count) {\r\n            const {iScale, vScale} = meta;\r\n            const iAxis = iScale.axis;\r\n            const vAxis = vScale.axis;\r\n            const labels = iScale.getLabels();\r\n            const singleScale = iScale === vScale;\r\n            const parsed = new Array(count);\r\n            let i, ilen, index;\r\n            for (i = 0, ilen = count; i < ilen; ++i) {\r\n                index = i + start;\r\n                parsed[i] = {\r\n                    [iAxis]: singleScale || iScale.parse(labels[index], index),\r\n                    [vAxis]: vScale.parse(data[index], index)\r\n                };\r\n            }\r\n            return parsed;\r\n        }\r\n\r\n        parseArrayData(meta, data, start, count) {\r\n            const {xScale, yScale} = meta;\r\n            const parsed = new Array(count);\r\n            let i, ilen, index, item;\r\n            for (i = 0, ilen = count; i < ilen; ++i) {\r\n                index = i + start;\r\n                item = data[index];\r\n                parsed[i] = {\r\n                    x: xScale.parse(item[0], index),\r\n                    y: yScale.parse(item[1], index)\r\n                };\r\n            }\r\n            return parsed;\r\n        }\r\n\r\n        parseObjectData(meta, data, start, count) {\r\n            const {xScale, yScale} = meta;\r\n            const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n            const parsed = new Array(count);\r\n            let i, ilen, index, item;\r\n            for (i = 0, ilen = count; i < ilen; ++i) {\r\n                index = i + start;\r\n                item = data[index];\r\n                parsed[i] = {\r\n                    x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\r\n                    y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\r\n                };\r\n            }\r\n            return parsed;\r\n        }\r\n\r\n        getParsed(index) {\r\n            return this._cachedMeta._parsed[index];\r\n        }\r\n\r\n        getDataElement(index) {\r\n            return this._cachedMeta.data[index];\r\n        }\r\n\r\n        applyStack(scale, parsed, mode) {\r\n            const chart = this.chart;\r\n            const meta = this._cachedMeta;\r\n            const value = parsed[scale.axis];\r\n            const stack = {\r\n                keys: getSortedDatasetIndices(chart, true),\r\n                values: parsed._stacks[scale.axis]\r\n            };\r\n            return applyStack(stack, value, meta.index, {mode});\r\n        }\r\n\r\n        updateRangeFromParsed(range, scale, parsed, stack) {\r\n            const parsedValue = parsed[scale.axis];\r\n            let value = parsedValue === null ? NaN : parsedValue;\r\n            const values = stack && parsed._stacks[scale.axis];\r\n            if (stack && values) {\r\n                stack.values = values;\r\n                range.min = Math.min(range.min, value);\r\n                range.max = Math.max(range.max, value);\r\n                value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\r\n            }\r\n            range.min = Math.min(range.min, value);\r\n            range.max = Math.max(range.max, value);\r\n        }\r\n\r\n        getMinMax(scale, canStack) {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            const _parsed = meta._parsed;\r\n            const sorted = meta._sorted && scale === meta.iScale;\r\n            const ilen = _parsed.length;\r\n            const otherScale = me._getOtherScale(scale);\r\n            const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\r\n            const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n            const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\r\n            let i, value, parsed, otherValue;\r\n\r\n            function _skip() {\r\n                parsed = _parsed[i];\r\n                value = parsed[scale.axis];\r\n                otherValue = parsed[otherScale.axis];\r\n                return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\r\n            }\r\n\r\n            for (i = 0; i < ilen; ++i) {\r\n                if (_skip()) {\r\n                    continue;\r\n                }\r\n                me.updateRangeFromParsed(range, scale, parsed, stack);\r\n                if (sorted) {\r\n                    break;\r\n                }\r\n            }\r\n            if (sorted) {\r\n                for (i = ilen - 1; i >= 0; --i) {\r\n                    if (_skip()) {\r\n                        continue;\r\n                    }\r\n                    me.updateRangeFromParsed(range, scale, parsed, stack);\r\n                    break;\r\n                }\r\n            }\r\n            return range;\r\n        }\r\n\r\n        getAllParsedValues(scale) {\r\n            const parsed = this._cachedMeta._parsed;\r\n            const values = [];\r\n            let i, ilen, value;\r\n            for (i = 0, ilen = parsed.length; i < ilen; ++i) {\r\n                value = parsed[i][scale.axis];\r\n                if (isNumberFinite(value)) {\r\n                    values.push(value);\r\n                }\r\n            }\r\n            return values;\r\n        }\r\n\r\n        getMaxOverflow() {\r\n            return false;\r\n        }\r\n\r\n        getLabelAndValue(index) {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            const iScale = meta.iScale;\r\n            const vScale = meta.vScale;\r\n            const parsed = me.getParsed(index);\r\n            return {\r\n                label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\r\n                value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\r\n            };\r\n        }\r\n\r\n        _update(mode) {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            me.configure();\r\n            me._cachedDataOpts = {};\r\n            me.update(mode || 'default');\r\n            meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\r\n        }\r\n\r\n        update(mode) {\r\n        }\r\n\r\n        draw() {\r\n            const me = this;\r\n            const ctx = me._ctx;\r\n            const chart = me.chart;\r\n            const meta = me._cachedMeta;\r\n            const elements = meta.data || [];\r\n            const area = chart.chartArea;\r\n            const active = [];\r\n            const start = me._drawStart || 0;\r\n            const count = me._drawCount || (elements.length - start);\r\n            let i;\r\n            if (meta.dataset) {\r\n                meta.dataset.draw(ctx, area, start, count);\r\n            }\r\n            for (i = start; i < start + count; ++i) {\r\n                const element = elements[i];\r\n                if (element.active) {\r\n                    active.push(element);\r\n                } else {\r\n                    element.draw(ctx, area);\r\n                }\r\n            }\r\n            for (i = 0; i < active.length; ++i) {\r\n                active[i].draw(ctx, area);\r\n            }\r\n        }\r\n\r\n        getStyle(index, active) {\r\n            const mode = active ? 'active' : 'default';\r\n            return index === undefined && this._cachedMeta.dataset\r\n                ? this.resolveDatasetElementOptions(mode)\r\n                : this.resolveDataElementOptions(index || 0, mode);\r\n        }\r\n\r\n        getContext(index, active, mode) {\r\n            const me = this;\r\n            const dataset = me.getDataset();\r\n            let context;\r\n            if (index >= 0 && index < me._cachedMeta.data.length) {\r\n                const element = me._cachedMeta.data[index];\r\n                context = element.$context ||\r\n                    (element.$context = createDataContext(me.getContext(), index, element));\r\n                context.parsed = me.getParsed(index);\r\n                context.raw = dataset.data[index];\r\n            } else {\r\n                context = me.$context ||\r\n                    (me.$context = createDatasetContext(me.chart.getContext(), me.index));\r\n                context.dataset = dataset;\r\n            }\r\n            context.active = !!active;\r\n            context.mode = mode;\r\n            return context;\r\n        }\r\n\r\n        resolveDatasetElementOptions(mode) {\r\n            return this._resolveElementOptions(this.datasetElementType.id, mode);\r\n        }\r\n\r\n        resolveDataElementOptions(index, mode) {\r\n            return this._resolveElementOptions(this.dataElementType.id, mode, index);\r\n        }\r\n\r\n        _resolveElementOptions(elementType, mode = 'default', index) {\r\n            const me = this;\r\n            const active = mode === 'active';\r\n            const cache = me._cachedDataOpts;\r\n            const cacheKey = elementType + '-' + mode;\r\n            const cached = cache[cacheKey];\r\n            const sharing = me.enableOptionSharing && defined(index);\r\n            if (cached) {\r\n                return cloneIfNotShared(cached, sharing);\r\n            }\r\n            const config = me.chart.config;\r\n            const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\r\n            const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\r\n            const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\r\n            const names = Object.keys(defaults.elements[elementType]);\r\n            const context = () => me.getContext(index, active);\r\n            const values = config.resolveNamedOptions(scopes, names, context, prefixes);\r\n            if (values.$shared) {\r\n                values.$shared = sharing;\r\n                cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\r\n            }\r\n            return values;\r\n        }\r\n\r\n        _resolveAnimations(index, transition, active) {\r\n            const me = this;\r\n            const chart = me.chart;\r\n            const cache = me._cachedDataOpts;\r\n            const cacheKey = `animation-${transition}`;\r\n            const cached = cache[cacheKey];\r\n            if (cached) {\r\n                return cached;\r\n            }\r\n            let options;\r\n            if (chart.options.animation !== false) {\r\n                const config = me.chart.config;\r\n                const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\r\n                const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\r\n                options = config.createResolver(scopes, me.getContext(index, active, transition));\r\n            }\r\n            const animations = new Animations(chart, options && options.animations);\r\n            if (options && options._cacheable) {\r\n                cache[cacheKey] = Object.freeze(animations);\r\n            }\r\n            return animations;\r\n        }\r\n\r\n        getSharedOptions(options) {\r\n            if (!options.$shared) {\r\n                return;\r\n            }\r\n            return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\r\n        }\r\n\r\n        includeOptions(mode, sharedOptions) {\r\n            return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\r\n        }\r\n\r\n        updateElement(element, index, properties, mode) {\r\n            if (isDirectUpdateMode(mode)) {\r\n                Object.assign(element, properties);\r\n            } else {\r\n                this._resolveAnimations(index, mode).update(element, properties);\r\n            }\r\n        }\r\n\r\n        updateSharedOptions(sharedOptions, mode, newOptions) {\r\n            if (sharedOptions && !isDirectUpdateMode(mode)) {\r\n                this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\r\n            }\r\n        }\r\n\r\n        _setStyle(element, index, mode, active) {\r\n            element.active = active;\r\n            const options = this.getStyle(index, active);\r\n            this._resolveAnimations(index, mode, active).update(element, {\r\n                options: (!active && this.getSharedOptions(options)) || options\r\n            });\r\n        }\r\n\r\n        removeHoverStyle(element, datasetIndex, index) {\r\n            this._setStyle(element, index, 'active', false);\r\n        }\r\n\r\n        setHoverStyle(element, datasetIndex, index) {\r\n            this._setStyle(element, index, 'active', true);\r\n        }\r\n\r\n        _removeDatasetHoverStyle() {\r\n            const element = this._cachedMeta.dataset;\r\n            if (element) {\r\n                this._setStyle(element, undefined, 'active', false);\r\n            }\r\n        }\r\n\r\n        _setDatasetHoverStyle() {\r\n            const element = this._cachedMeta.dataset;\r\n            if (element) {\r\n                this._setStyle(element, undefined, 'active', true);\r\n            }\r\n        }\r\n\r\n        _resyncElements(resetNewElements) {\r\n            const me = this;\r\n            const numMeta = me._cachedMeta.data.length;\r\n            const numData = me._data.length;\r\n            if (numData > numMeta) {\r\n                me._insertElements(numMeta, numData - numMeta, resetNewElements);\r\n            } else if (numData < numMeta) {\r\n                me._removeElements(numData, numMeta - numData);\r\n            }\r\n            const count = Math.min(numData, numMeta);\r\n            if (count) {\r\n                me.parse(0, count);\r\n            }\r\n        }\r\n\r\n        _insertElements(start, count, resetNewElements = true) {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            const data = meta.data;\r\n            const end = start + count;\r\n            let i;\r\n            const move = (arr) => {\r\n                arr.length += count;\r\n                for (i = arr.length - 1; i >= end; i--) {\r\n                    arr[i] = arr[i - count];\r\n                }\r\n            };\r\n            move(data);\r\n            for (i = start; i < end; ++i) {\r\n                data[i] = new me.dataElementType();\r\n            }\r\n            if (me._parsing) {\r\n                move(meta._parsed);\r\n            }\r\n            me.parse(start, count);\r\n            if (resetNewElements) {\r\n                me.updateElements(data, start, count, 'reset');\r\n            }\r\n        }\r\n\r\n        updateElements(element, start, count, mode) {\r\n        }\r\n\r\n        _removeElements(start, count) {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            if (me._parsing) {\r\n                const removed = meta._parsed.splice(start, count);\r\n                if (meta._stacked) {\r\n                    clearStacks(meta, removed);\r\n                }\r\n            }\r\n            meta.data.splice(start, count);\r\n        }\r\n\r\n        _onDataPush() {\r\n            const count = arguments.length;\r\n            this._insertElements(this.getDataset().data.length - count, count);\r\n        }\r\n\r\n        _onDataPop() {\r\n            this._removeElements(this._cachedMeta.data.length - 1, 1);\r\n        }\r\n\r\n        _onDataShift() {\r\n            this._removeElements(0, 1);\r\n        }\r\n\r\n        _onDataSplice(start, count) {\r\n            this._removeElements(start, count);\r\n            this._insertElements(start, arguments.length - 2);\r\n        }\r\n\r\n        _onDataUnshift() {\r\n            this._insertElements(0, arguments.length);\r\n        }\r\n    }\r\n\r\n    DatasetController.defaults = {};\r\n    DatasetController.prototype.datasetElementType = null;\r\n    DatasetController.prototype.dataElementType = null;\r\n\r\n    class Element {\r\n        constructor() {\r\n            this.x = undefined;\r\n            this.y = undefined;\r\n            this.active = false;\r\n            this.options = undefined;\r\n            this.$animations = undefined;\r\n        }\r\n\r\n        tooltipPosition(useFinalPosition) {\r\n            const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n            return {x, y};\r\n        }\r\n\r\n        hasValue() {\r\n            return isNumber(this.x) && isNumber(this.y);\r\n        }\r\n\r\n        getProps(props, final) {\r\n            const me = this;\r\n            const anims = this.$animations;\r\n            if (!final || !anims) {\r\n                return me;\r\n            }\r\n            const ret = {};\r\n            props.forEach(prop => {\r\n                ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\r\n            });\r\n            return ret;\r\n        }\r\n    }\r\n\r\n    Element.defaults = {};\r\n    Element.defaultRoutes = undefined;\r\n\r\n    const intlCache = new Map();\r\n\r\n    function getNumberFormat(locale, options) {\r\n        options = options || {};\r\n        const cacheKey = locale + JSON.stringify(options);\r\n        let formatter = intlCache.get(cacheKey);\r\n        if (!formatter) {\r\n            formatter = new Intl.NumberFormat(locale, options);\r\n            intlCache.set(cacheKey, formatter);\r\n        }\r\n        return formatter;\r\n    }\r\n\r\n    function formatNumber(num, locale, options) {\r\n        return getNumberFormat(locale, options).format(num);\r\n    }\r\n\r\n    const formatters = {\r\n        values(value) {\r\n            return isArray(value) ? value : '' + value;\r\n        },\r\n        numeric(tickValue, index, ticks) {\r\n            if (tickValue === 0) {\r\n                return '0';\r\n            }\r\n            const locale = this.chart.options.locale;\r\n            let notation;\r\n            let delta = tickValue;\r\n            if (ticks.length > 1) {\r\n                const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n                if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n                    notation = 'scientific';\r\n                }\r\n                delta = calculateDelta(tickValue, ticks);\r\n            }\r\n            const logDelta = log10(Math.abs(delta));\r\n            const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\r\n            const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\r\n            Object.assign(options, this.options.ticks.format);\r\n            return formatNumber(tickValue, locale, options);\r\n        },\r\n        logarithmic(tickValue, index, ticks) {\r\n            if (tickValue === 0) {\r\n                return '0';\r\n            }\r\n            const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\r\n            if (remain === 1 || remain === 2 || remain === 5) {\r\n                return formatters.numeric.call(this, tickValue, index, ticks);\r\n            }\r\n            return '';\r\n        }\r\n    };\r\n\r\n    function calculateDelta(tickValue, ticks) {\r\n        let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n        if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\r\n            delta = tickValue - Math.floor(tickValue);\r\n        }\r\n        return delta;\r\n    }\r\n\r\n    var Ticks = {formatters};\r\n\r\n    defaults.set('scale', {\r\n        display: true,\r\n        offset: false,\r\n        reverse: false,\r\n        beginAtZero: false,\r\n        bounds: 'ticks',\r\n        grace: 0,\r\n        grid: {\r\n            display: true,\r\n            lineWidth: 1,\r\n            drawBorder: true,\r\n            drawOnChartArea: true,\r\n            drawTicks: true,\r\n            tickLength: 8,\r\n            tickWidth: (_ctx, options) => options.lineWidth,\r\n            tickColor: (_ctx, options) => options.color,\r\n            offset: false,\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderColor: (_ctx, options) => options.color,\r\n            borderWidth: (_ctx, options) => options.lineWidth\r\n        },\r\n        title: {\r\n            display: false,\r\n            text: '',\r\n            padding: {\r\n                top: 4,\r\n                bottom: 4\r\n            }\r\n        },\r\n        ticks: {\r\n            minRotation: 0,\r\n            maxRotation: 50,\r\n            mirror: false,\r\n            textStrokeWidth: 0,\r\n            textStrokeColor: '',\r\n            padding: 3,\r\n            display: true,\r\n            autoSkip: true,\r\n            autoSkipPadding: 3,\r\n            labelOffset: 0,\r\n            callback: Ticks.formatters.values,\r\n            minor: {},\r\n            major: {},\r\n            align: 'center',\r\n            crossAlign: 'near',\r\n        }\r\n    });\r\n    defaults.route('scale.ticks', 'color', '', 'color');\r\n    defaults.route('scale.grid', 'color', '', 'borderColor');\r\n    defaults.route('scale.title', 'color', '', 'color');\r\n    defaults.describe('scale', {\r\n        _fallback: false,\r\n        _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n        _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\r\n    });\r\n    defaults.describe('scales', {\r\n        _fallback: 'scale',\r\n    });\r\n\r\n    function autoSkip(scale, ticks) {\r\n        const tickOpts = scale.options.ticks;\r\n        const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\r\n        const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\r\n        const numMajorIndices = majorIndices.length;\r\n        const first = majorIndices[0];\r\n        const last = majorIndices[numMajorIndices - 1];\r\n        const newTicks = [];\r\n        if (numMajorIndices > ticksLimit) {\r\n            skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\r\n            return newTicks;\r\n        }\r\n        const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\r\n        if (numMajorIndices > 0) {\r\n            let i, ilen;\r\n            const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\r\n            skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\r\n            for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\r\n                skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\r\n            }\r\n            skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\r\n            return newTicks;\r\n        }\r\n        skip(ticks, newTicks, spacing);\r\n        return newTicks;\r\n    }\r\n\r\n    function determineMaxTicks(scale) {\r\n        const offset = scale.options.offset;\r\n        const tickLength = scale._tickSize();\r\n        const maxScale = scale._length / tickLength + (offset ? 0 : 1);\r\n        const maxChart = scale._maxLength / tickLength;\r\n        return Math.floor(Math.min(maxScale, maxChart));\r\n    }\r\n\r\n    function calculateSpacing(majorIndices, ticks, ticksLimit) {\r\n        const evenMajorSpacing = getEvenSpacing(majorIndices);\r\n        const spacing = ticks.length / ticksLimit;\r\n        if (!evenMajorSpacing) {\r\n            return Math.max(spacing, 1);\r\n        }\r\n        const factors = _factorize(evenMajorSpacing);\r\n        for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\r\n            const factor = factors[i];\r\n            if (factor > spacing) {\r\n                return factor;\r\n            }\r\n        }\r\n        return Math.max(spacing, 1);\r\n    }\r\n\r\n    function getMajorIndices(ticks) {\r\n        const result = [];\r\n        let i, ilen;\r\n        for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n            if (ticks[i].major) {\r\n                result.push(i);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function skipMajors(ticks, newTicks, majorIndices, spacing) {\r\n        let count = 0;\r\n        let next = majorIndices[0];\r\n        let i;\r\n        spacing = Math.ceil(spacing);\r\n        for (i = 0; i < ticks.length; i++) {\r\n            if (i === next) {\r\n                newTicks.push(ticks[i]);\r\n                count++;\r\n                next = majorIndices[count * spacing];\r\n            }\r\n        }\r\n    }\r\n\r\n    function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\r\n        const start = valueOrDefault(majorStart, 0);\r\n        const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\r\n        let count = 0;\r\n        let length, i, next;\r\n        spacing = Math.ceil(spacing);\r\n        if (majorEnd) {\r\n            length = majorEnd - majorStart;\r\n            spacing = length / Math.floor(length / spacing);\r\n        }\r\n        next = start;\r\n        while (next < 0) {\r\n            count++;\r\n            next = Math.round(start + count * spacing);\r\n        }\r\n        for (i = Math.max(start, 0); i < end; i++) {\r\n            if (i === next) {\r\n                newTicks.push(ticks[i]);\r\n                count++;\r\n                next = Math.round(start + count * spacing);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getEvenSpacing(arr) {\r\n        const len = arr.length;\r\n        let i, diff;\r\n        if (len < 2) {\r\n            return false;\r\n        }\r\n        for (diff = arr[0], i = 1; i < len; ++i) {\r\n            if (arr[i] - arr[i - 1] !== diff) {\r\n                return false;\r\n            }\r\n        }\r\n        return diff;\r\n    }\r\n\r\n    const reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\r\n    const offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\r\n\r\n    function sample(arr, numItems) {\r\n        const result = [];\r\n        const increment = arr.length / numItems;\r\n        const len = arr.length;\r\n        let i = 0;\r\n        for (; i < len; i += increment) {\r\n            result.push(arr[Math.floor(i)]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getPixelForGridLine(scale, index, offsetGridLines) {\r\n        const length = scale.ticks.length;\r\n        const validIndex = Math.min(index, length - 1);\r\n        const start = scale._startPixel;\r\n        const end = scale._endPixel;\r\n        const epsilon = 1e-6;\r\n        let lineValue = scale.getPixelForTick(validIndex);\r\n        let offset;\r\n        if (offsetGridLines) {\r\n            if (length === 1) {\r\n                offset = Math.max(lineValue - start, end - lineValue);\r\n            } else if (index === 0) {\r\n                offset = (scale.getPixelForTick(1) - lineValue) / 2;\r\n            } else {\r\n                offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\r\n            }\r\n            lineValue += validIndex < index ? offset : -offset;\r\n            if (lineValue < start - epsilon || lineValue > end + epsilon) {\r\n                return;\r\n            }\r\n        }\r\n        return lineValue;\r\n    }\r\n\r\n    function garbageCollect(caches, length) {\r\n        each(caches, (cache) => {\r\n            const gc = cache.gc;\r\n            const gcLen = gc.length / 2;\r\n            let i;\r\n            if (gcLen > length) {\r\n                for (i = 0; i < gcLen; ++i) {\r\n                    delete cache.data[gc[i]];\r\n                }\r\n                gc.splice(0, gcLen);\r\n            }\r\n        });\r\n    }\r\n\r\n    function getTickMarkLength(options) {\r\n        return options.drawTicks ? options.tickLength : 0;\r\n    }\r\n\r\n    function getTitleHeight(options, fallback) {\r\n        if (!options.display) {\r\n            return 0;\r\n        }\r\n        const font = toFont(options.font, fallback);\r\n        const padding = toPadding(options.padding);\r\n        const lines = isArray(options.text) ? options.text.length : 1;\r\n        return (lines * font.lineHeight) + padding.height;\r\n    }\r\n\r\n    function createScaleContext(parent, scale) {\r\n        return Object.assign(Object.create(parent), {\r\n            scale,\r\n            type: 'scale'\r\n        });\r\n    }\r\n\r\n    function createTickContext(parent, index, tick) {\r\n        return Object.assign(Object.create(parent), {\r\n            tick,\r\n            index,\r\n            type: 'tick'\r\n        });\r\n    }\r\n\r\n    function titleAlign(align, position, reverse) {\r\n        let ret = _toLeftRightCenter(align);\r\n        if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\r\n            ret = reverseAlign(ret);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function titleArgs(scale, offset, position, align) {\r\n        const {top, left, bottom, right} = scale;\r\n        let rotation = 0;\r\n        let maxWidth, titleX, titleY;\r\n        if (scale.isHorizontal()) {\r\n            titleX = _alignStartEnd(align, left, right);\r\n            titleY = offsetFromEdge(scale, position, offset);\r\n            maxWidth = right - left;\r\n        } else {\r\n            titleX = offsetFromEdge(scale, position, offset);\r\n            titleY = _alignStartEnd(align, bottom, top);\r\n            rotation = position === 'left' ? -HALF_PI : HALF_PI;\r\n        }\r\n        return {titleX, titleY, maxWidth, rotation};\r\n    }\r\n\r\n    class Scale extends Element {\r\n        constructor(cfg) {\r\n            super();\r\n            this.id = cfg.id;\r\n            this.type = cfg.type;\r\n            this.options = undefined;\r\n            this.ctx = cfg.ctx;\r\n            this.chart = cfg.chart;\r\n            this.top = undefined;\r\n            this.bottom = undefined;\r\n            this.left = undefined;\r\n            this.right = undefined;\r\n            this.width = undefined;\r\n            this.height = undefined;\r\n            this._margins = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            };\r\n            this.maxWidth = undefined;\r\n            this.maxHeight = undefined;\r\n            this.paddingTop = undefined;\r\n            this.paddingBottom = undefined;\r\n            this.paddingLeft = undefined;\r\n            this.paddingRight = undefined;\r\n            this.axis = undefined;\r\n            this.labelRotation = undefined;\r\n            this.min = undefined;\r\n            this.max = undefined;\r\n            this.ticks = [];\r\n            this._gridLineItems = null;\r\n            this._labelItems = null;\r\n            this._labelSizes = null;\r\n            this._length = 0;\r\n            this._maxLength = 0;\r\n            this._longestTextCache = {};\r\n            this._startPixel = undefined;\r\n            this._endPixel = undefined;\r\n            this._reversePixels = false;\r\n            this._userMax = undefined;\r\n            this._userMin = undefined;\r\n            this._suggestedMax = undefined;\r\n            this._suggestedMin = undefined;\r\n            this._ticksLength = 0;\r\n            this._borderValue = 0;\r\n            this._cache = {};\r\n            this._dataLimitsCached = false;\r\n            this.$context = undefined;\r\n        }\r\n\r\n        init(options) {\r\n            const me = this;\r\n            me.options = options;\r\n            me.axis = options.axis;\r\n            me._userMin = me.parse(options.min);\r\n            me._userMax = me.parse(options.max);\r\n            me._suggestedMin = me.parse(options.suggestedMin);\r\n            me._suggestedMax = me.parse(options.suggestedMax);\r\n        }\r\n\r\n        parse(raw, index) {\r\n            return raw;\r\n        }\r\n\r\n        getUserBounds() {\r\n            let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\r\n            _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\r\n            _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\r\n            _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\r\n            _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\r\n            return {\r\n                min: finiteOrDefault(_userMin, _suggestedMin),\r\n                max: finiteOrDefault(_userMax, _suggestedMax),\r\n                minDefined: isNumberFinite(_userMin),\r\n                maxDefined: isNumberFinite(_userMax)\r\n            };\r\n        }\r\n\r\n        getMinMax(canStack) {\r\n            const me = this;\r\n            let {min, max, minDefined, maxDefined} = me.getUserBounds();\r\n            let range;\r\n            if (minDefined && maxDefined) {\r\n                return {min, max};\r\n            }\r\n            const metas = me.getMatchingVisibleMetas();\r\n            for (let i = 0, ilen = metas.length; i < ilen; ++i) {\r\n                range = metas[i].controller.getMinMax(me, canStack);\r\n                if (!minDefined) {\r\n                    min = Math.min(min, range.min);\r\n                }\r\n                if (!maxDefined) {\r\n                    max = Math.max(max, range.max);\r\n                }\r\n            }\r\n            return {\r\n                min: finiteOrDefault(min, finiteOrDefault(max, min)),\r\n                max: finiteOrDefault(max, finiteOrDefault(min, max))\r\n            };\r\n        }\r\n\r\n        getPadding() {\r\n            const me = this;\r\n            return {\r\n                left: me.paddingLeft || 0,\r\n                top: me.paddingTop || 0,\r\n                right: me.paddingRight || 0,\r\n                bottom: me.paddingBottom || 0\r\n            };\r\n        }\r\n\r\n        getTicks() {\r\n            return this.ticks;\r\n        }\r\n\r\n        getLabels() {\r\n            const data = this.chart.data;\r\n            return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\r\n        }\r\n\r\n        beforeLayout() {\r\n            this._cache = {};\r\n            this._dataLimitsCached = false;\r\n        }\r\n\r\n        beforeUpdate() {\r\n            callback(this.options.beforeUpdate, [this]);\r\n        }\r\n\r\n        update(maxWidth, maxHeight, margins) {\r\n            const me = this;\r\n            const tickOpts = me.options.ticks;\r\n            const sampleSize = tickOpts.sampleSize;\r\n            me.beforeUpdate();\r\n            me.maxWidth = maxWidth;\r\n            me.maxHeight = maxHeight;\r\n            me._margins = margins = Object.assign({\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            }, margins);\r\n            me.ticks = null;\r\n            me._labelSizes = null;\r\n            me._gridLineItems = null;\r\n            me._labelItems = null;\r\n            me.beforeSetDimensions();\r\n            me.setDimensions();\r\n            me.afterSetDimensions();\r\n            me._maxLength = me.isHorizontal()\r\n                ? me.width + margins.left + margins.right\r\n                : me.height + margins.top + margins.bottom;\r\n            if (!me._dataLimitsCached) {\r\n                me.beforeDataLimits();\r\n                me.determineDataLimits();\r\n                me.afterDataLimits();\r\n                me._dataLimitsCached = true;\r\n            }\r\n            me.beforeBuildTicks();\r\n            me.ticks = me.buildTicks() || [];\r\n            me.afterBuildTicks();\r\n            const samplingEnabled = sampleSize < me.ticks.length;\r\n            me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\r\n            me.configure();\r\n            me.beforeCalculateLabelRotation();\r\n            me.calculateLabelRotation();\r\n            me.afterCalculateLabelRotation();\r\n            if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\r\n                me.ticks = autoSkip(me, me.ticks);\r\n                me._labelSizes = null;\r\n            }\r\n            if (samplingEnabled) {\r\n                me._convertTicksToLabels(me.ticks);\r\n            }\r\n            me.beforeFit();\r\n            me.fit();\r\n            me.afterFit();\r\n            me.afterUpdate();\r\n        }\r\n\r\n        configure() {\r\n            const me = this;\r\n            let reversePixels = me.options.reverse;\r\n            let startPixel, endPixel;\r\n            if (me.isHorizontal()) {\r\n                startPixel = me.left;\r\n                endPixel = me.right;\r\n            } else {\r\n                startPixel = me.top;\r\n                endPixel = me.bottom;\r\n                reversePixels = !reversePixels;\r\n            }\r\n            me._startPixel = startPixel;\r\n            me._endPixel = endPixel;\r\n            me._reversePixels = reversePixels;\r\n            me._length = endPixel - startPixel;\r\n            me._alignToPixels = me.options.alignToPixels;\r\n        }\r\n\r\n        afterUpdate() {\r\n            callback(this.options.afterUpdate, [this]);\r\n        }\r\n\r\n        beforeSetDimensions() {\r\n            callback(this.options.beforeSetDimensions, [this]);\r\n        }\r\n\r\n        setDimensions() {\r\n            const me = this;\r\n            if (me.isHorizontal()) {\r\n                me.width = me.maxWidth;\r\n                me.left = 0;\r\n                me.right = me.width;\r\n            } else {\r\n                me.height = me.maxHeight;\r\n                me.top = 0;\r\n                me.bottom = me.height;\r\n            }\r\n            me.paddingLeft = 0;\r\n            me.paddingTop = 0;\r\n            me.paddingRight = 0;\r\n            me.paddingBottom = 0;\r\n        }\r\n\r\n        afterSetDimensions() {\r\n            callback(this.options.afterSetDimensions, [this]);\r\n        }\r\n\r\n        _callHooks(name) {\r\n            const me = this;\r\n            me.chart.notifyPlugins(name, me.getContext());\r\n            callback(me.options[name], [me]);\r\n        }\r\n\r\n        beforeDataLimits() {\r\n            this._callHooks('beforeDataLimits');\r\n        }\r\n\r\n        determineDataLimits() {\r\n        }\r\n\r\n        afterDataLimits() {\r\n            this._callHooks('afterDataLimits');\r\n        }\r\n\r\n        beforeBuildTicks() {\r\n            this._callHooks('beforeBuildTicks');\r\n        }\r\n\r\n        buildTicks() {\r\n            return [];\r\n        }\r\n\r\n        afterBuildTicks() {\r\n            this._callHooks('afterBuildTicks');\r\n        }\r\n\r\n        beforeTickToLabelConversion() {\r\n            callback(this.options.beforeTickToLabelConversion, [this]);\r\n        }\r\n\r\n        generateTickLabels(ticks) {\r\n            const me = this;\r\n            const tickOpts = me.options.ticks;\r\n            let i, ilen, tick;\r\n            for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n                tick = ticks[i];\r\n                tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\r\n            }\r\n        }\r\n\r\n        afterTickToLabelConversion() {\r\n            callback(this.options.afterTickToLabelConversion, [this]);\r\n        }\r\n\r\n        beforeCalculateLabelRotation() {\r\n            callback(this.options.beforeCalculateLabelRotation, [this]);\r\n        }\r\n\r\n        calculateLabelRotation() {\r\n            const me = this;\r\n            const options = me.options;\r\n            const tickOpts = options.ticks;\r\n            const numTicks = me.ticks.length;\r\n            const minRotation = tickOpts.minRotation || 0;\r\n            const maxRotation = tickOpts.maxRotation;\r\n            let labelRotation = minRotation;\r\n            let tickWidth, maxHeight, maxLabelDiagonal;\r\n            if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\r\n                me.labelRotation = minRotation;\r\n                return;\r\n            }\r\n            const labelSizes = me._getLabelSizes();\r\n            const maxLabelWidth = labelSizes.widest.width;\r\n            const maxLabelHeight = labelSizes.highest.height;\r\n            const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\r\n            tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\r\n            if (maxLabelWidth + 6 > tickWidth) {\r\n                tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\r\n                maxHeight = me.maxHeight - getTickMarkLength(options.grid)\r\n                    - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\r\n                maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\r\n                labelRotation = toDegrees(Math.min(\r\n                    Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\r\n                    Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\r\n                ));\r\n                labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\r\n            }\r\n            me.labelRotation = labelRotation;\r\n        }\r\n\r\n        afterCalculateLabelRotation() {\r\n            callback(this.options.afterCalculateLabelRotation, [this]);\r\n        }\r\n\r\n        beforeFit() {\r\n            callback(this.options.beforeFit, [this]);\r\n        }\r\n\r\n        fit() {\r\n            const me = this;\r\n            const minSize = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n            const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\r\n            const display = me._isVisible();\r\n            const isHorizontal = me.isHorizontal();\r\n            if (display) {\r\n                const titleHeight = getTitleHeight(titleOpts, chart.options.font);\r\n                if (isHorizontal) {\r\n                    minSize.width = me.maxWidth;\r\n                    minSize.height = getTickMarkLength(gridOpts) + titleHeight;\r\n                } else {\r\n                    minSize.height = me.maxHeight;\r\n                    minSize.width = getTickMarkLength(gridOpts) + titleHeight;\r\n                }\r\n                if (tickOpts.display && me.ticks.length) {\r\n                    const {first, last, widest, highest} = me._getLabelSizes();\r\n                    const tickPadding = tickOpts.padding * 2;\r\n                    const angleRadians = toRadians(me.labelRotation);\r\n                    const cos = Math.cos(angleRadians);\r\n                    const sin = Math.sin(angleRadians);\r\n                    if (isHorizontal) {\r\n                        const labelHeight = sin * widest.width + cos * highest.height;\r\n                        minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\r\n                    } else {\r\n                        const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\r\n                        minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\r\n                    }\r\n                    me._calculatePadding(first, last, sin, cos);\r\n                }\r\n            }\r\n            me._handleMargins();\r\n            if (isHorizontal) {\r\n                me.width = me._length = chart.width - me._margins.left - me._margins.right;\r\n                me.height = minSize.height;\r\n            } else {\r\n                me.width = minSize.width;\r\n                me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\r\n            }\r\n        }\r\n\r\n        _calculatePadding(first, last, sin, cos) {\r\n            const me = this;\r\n            const {ticks: {align, padding}, position} = me.options;\r\n            const isRotated = me.labelRotation !== 0;\r\n            const labelsBelowTicks = position !== 'top' && me.axis === 'x';\r\n            if (me.isHorizontal()) {\r\n                const offsetLeft = me.getPixelForTick(0) - me.left;\r\n                const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\r\n                let paddingLeft = 0;\r\n                let paddingRight = 0;\r\n                if (isRotated) {\r\n                    if (labelsBelowTicks) {\r\n                        paddingLeft = cos * first.width;\r\n                        paddingRight = sin * last.height;\r\n                    } else {\r\n                        paddingLeft = sin * first.height;\r\n                        paddingRight = cos * last.width;\r\n                    }\r\n                } else if (align === 'start') {\r\n                    paddingRight = last.width;\r\n                } else if (align === 'end') {\r\n                    paddingLeft = first.width;\r\n                } else {\r\n                    paddingLeft = first.width / 2;\r\n                    paddingRight = last.width / 2;\r\n                }\r\n                me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\r\n                me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\r\n            } else {\r\n                let paddingTop = last.height / 2;\r\n                let paddingBottom = first.height / 2;\r\n                if (align === 'start') {\r\n                    paddingTop = 0;\r\n                    paddingBottom = first.height;\r\n                } else if (align === 'end') {\r\n                    paddingTop = last.height;\r\n                    paddingBottom = 0;\r\n                }\r\n                me.paddingTop = paddingTop + padding;\r\n                me.paddingBottom = paddingBottom + padding;\r\n            }\r\n        }\r\n\r\n        _handleMargins() {\r\n            const me = this;\r\n            if (me._margins) {\r\n                me._margins.left = Math.max(me.paddingLeft, me._margins.left);\r\n                me._margins.top = Math.max(me.paddingTop, me._margins.top);\r\n                me._margins.right = Math.max(me.paddingRight, me._margins.right);\r\n                me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\r\n            }\r\n        }\r\n\r\n        afterFit() {\r\n            callback(this.options.afterFit, [this]);\r\n        }\r\n\r\n        isHorizontal() {\r\n            const {axis, position} = this.options;\r\n            return position === 'top' || position === 'bottom' || axis === 'x';\r\n        }\r\n\r\n        isFullSize() {\r\n            return this.options.fullSize;\r\n        }\r\n\r\n        _convertTicksToLabels(ticks) {\r\n            const me = this;\r\n            me.beforeTickToLabelConversion();\r\n            me.generateTickLabels(ticks);\r\n            me.afterTickToLabelConversion();\r\n        }\r\n\r\n        _getLabelSizes() {\r\n            const me = this;\r\n            let labelSizes = me._labelSizes;\r\n            if (!labelSizes) {\r\n                const sampleSize = me.options.ticks.sampleSize;\r\n                let ticks = me.ticks;\r\n                if (sampleSize < ticks.length) {\r\n                    ticks = sample(ticks, sampleSize);\r\n                }\r\n                me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\r\n            }\r\n            return labelSizes;\r\n        }\r\n\r\n        _computeLabelSizes(ticks, length) {\r\n            const {ctx, _longestTextCache: caches} = this;\r\n            const widths = [];\r\n            const heights = [];\r\n            let widestLabelSize = 0;\r\n            let highestLabelSize = 0;\r\n            let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\r\n            for (i = 0; i < length; ++i) {\r\n                label = ticks[i].label;\r\n                tickFont = this._resolveTickFontOptions(i);\r\n                ctx.font = fontString = tickFont.string;\r\n                cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\r\n                lineHeight = tickFont.lineHeight;\r\n                width = height = 0;\r\n                if (!isNullOrUndef(label) && !isArray(label)) {\r\n                    width = _measureText(ctx, cache.data, cache.gc, width, label);\r\n                    height = lineHeight;\r\n                } else if (isArray(label)) {\r\n                    for (j = 0, jlen = label.length; j < jlen; ++j) {\r\n                        nestedLabel = label[j];\r\n                        if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\r\n                            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\r\n                            height += lineHeight;\r\n                        }\r\n                    }\r\n                }\r\n                widths.push(width);\r\n                heights.push(height);\r\n                widestLabelSize = Math.max(width, widestLabelSize);\r\n                highestLabelSize = Math.max(height, highestLabelSize);\r\n            }\r\n            garbageCollect(caches, length);\r\n            const widest = widths.indexOf(widestLabelSize);\r\n            const highest = heights.indexOf(highestLabelSize);\r\n            const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\r\n            return {\r\n                first: valueAt(0),\r\n                last: valueAt(length - 1),\r\n                widest: valueAt(widest),\r\n                highest: valueAt(highest)\r\n            };\r\n        }\r\n\r\n        getLabelForValue(value) {\r\n            return value;\r\n        }\r\n\r\n        getPixelForValue(value, index) {\r\n            return NaN;\r\n        }\r\n\r\n        getValueForPixel(pixel) {\r\n        }\r\n\r\n        getPixelForTick(index) {\r\n            const ticks = this.ticks;\r\n            if (index < 0 || index > ticks.length - 1) {\r\n                return null;\r\n            }\r\n            return this.getPixelForValue(ticks[index].value);\r\n        }\r\n\r\n        getPixelForDecimal(decimal) {\r\n            const me = this;\r\n            if (me._reversePixels) {\r\n                decimal = 1 - decimal;\r\n            }\r\n            const pixel = me._startPixel + decimal * me._length;\r\n            return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\r\n        }\r\n\r\n        getDecimalForPixel(pixel) {\r\n            const decimal = (pixel - this._startPixel) / this._length;\r\n            return this._reversePixels ? 1 - decimal : decimal;\r\n        }\r\n\r\n        getBasePixel() {\r\n            return this.getPixelForValue(this.getBaseValue());\r\n        }\r\n\r\n        getBaseValue() {\r\n            const {min, max} = this;\r\n            return min < 0 && max < 0 ? max :\r\n                min > 0 && max > 0 ? min :\r\n                    0;\r\n        }\r\n\r\n        getContext(index) {\r\n            const me = this;\r\n            const ticks = me.ticks || [];\r\n            if (index >= 0 && index < ticks.length) {\r\n                const tick = ticks[index];\r\n                return tick.$context ||\r\n                    (tick.$context = createTickContext(me.getContext(), index, tick));\r\n            }\r\n            return me.$context ||\r\n                (me.$context = createScaleContext(me.chart.getContext(), me));\r\n        }\r\n\r\n        _tickSize() {\r\n            const me = this;\r\n            const optionTicks = me.options.ticks;\r\n            const rot = toRadians(me.labelRotation);\r\n            const cos = Math.abs(Math.cos(rot));\r\n            const sin = Math.abs(Math.sin(rot));\r\n            const labelSizes = me._getLabelSizes();\r\n            const padding = optionTicks.autoSkipPadding || 0;\r\n            const w = labelSizes ? labelSizes.widest.width + padding : 0;\r\n            const h = labelSizes ? labelSizes.highest.height + padding : 0;\r\n            return me.isHorizontal()\r\n                ? h * cos > w * sin ? w / cos : h / sin\r\n                : h * sin < w * cos ? h / cos : w / sin;\r\n        }\r\n\r\n        _isVisible() {\r\n            const display = this.options.display;\r\n            if (display !== 'auto') {\r\n                return !!display;\r\n            }\r\n            return this.getMatchingVisibleMetas().length > 0;\r\n        }\r\n\r\n        _computeGridLineItems(chartArea) {\r\n            const me = this;\r\n            const axis = me.axis;\r\n            const chart = me.chart;\r\n            const options = me.options;\r\n            const {grid, position} = options;\r\n            const offset = grid.offset;\r\n            const isHorizontal = me.isHorizontal();\r\n            const ticks = me.ticks;\r\n            const ticksLength = ticks.length + (offset ? 1 : 0);\r\n            const tl = getTickMarkLength(grid);\r\n            const items = [];\r\n            const borderOpts = grid.setContext(me.getContext(0));\r\n            const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\r\n            const axisHalfWidth = axisWidth / 2;\r\n            const alignBorderValue = function (pixel) {\r\n                return _alignPixel(chart, pixel, axisWidth);\r\n            };\r\n            let borderValue, i, lineValue, alignedLineValue;\r\n            let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\r\n            if (position === 'top') {\r\n                borderValue = alignBorderValue(me.bottom);\r\n                ty1 = me.bottom - tl;\r\n                ty2 = borderValue - axisHalfWidth;\r\n                y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\r\n                y2 = chartArea.bottom;\r\n            } else if (position === 'bottom') {\r\n                borderValue = alignBorderValue(me.top);\r\n                y1 = chartArea.top;\r\n                y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\r\n                ty1 = borderValue + axisHalfWidth;\r\n                ty2 = me.top + tl;\r\n            } else if (position === 'left') {\r\n                borderValue = alignBorderValue(me.right);\r\n                tx1 = me.right - tl;\r\n                tx2 = borderValue - axisHalfWidth;\r\n                x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\r\n                x2 = chartArea.right;\r\n            } else if (position === 'right') {\r\n                borderValue = alignBorderValue(me.left);\r\n                x1 = chartArea.left;\r\n                x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\r\n                tx1 = borderValue + axisHalfWidth;\r\n                tx2 = me.left + tl;\r\n            } else if (axis === 'x') {\r\n                if (position === 'center') {\r\n                    borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\r\n                } else if (isObject(position)) {\r\n                    const positionAxisID = Object.keys(position)[0];\r\n                    const value = position[positionAxisID];\r\n                    borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\r\n                }\r\n                y1 = chartArea.top;\r\n                y2 = chartArea.bottom;\r\n                ty1 = borderValue + axisHalfWidth;\r\n                ty2 = ty1 + tl;\r\n            } else if (axis === 'y') {\r\n                if (position === 'center') {\r\n                    borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\r\n                } else if (isObject(position)) {\r\n                    const positionAxisID = Object.keys(position)[0];\r\n                    const value = position[positionAxisID];\r\n                    borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\r\n                }\r\n                tx1 = borderValue - axisHalfWidth;\r\n                tx2 = tx1 - tl;\r\n                x1 = chartArea.left;\r\n                x2 = chartArea.right;\r\n            }\r\n            for (i = 0; i < ticksLength; ++i) {\r\n                const optsAtIndex = grid.setContext(me.getContext(i));\r\n                const lineWidth = optsAtIndex.lineWidth;\r\n                const lineColor = optsAtIndex.color;\r\n                const borderDash = grid.borderDash || [];\r\n                const borderDashOffset = optsAtIndex.borderDashOffset;\r\n                const tickWidth = optsAtIndex.tickWidth;\r\n                const tickColor = optsAtIndex.tickColor;\r\n                const tickBorderDash = optsAtIndex.tickBorderDash || [];\r\n                const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\r\n                lineValue = getPixelForGridLine(me, i, offset);\r\n                if (lineValue === undefined) {\r\n                    continue;\r\n                }\r\n                alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\r\n                if (isHorizontal) {\r\n                    tx1 = tx2 = x1 = x2 = alignedLineValue;\r\n                } else {\r\n                    ty1 = ty2 = y1 = y2 = alignedLineValue;\r\n                }\r\n                items.push({\r\n                    tx1,\r\n                    ty1,\r\n                    tx2,\r\n                    ty2,\r\n                    x1,\r\n                    y1,\r\n                    x2,\r\n                    y2,\r\n                    width: lineWidth,\r\n                    color: lineColor,\r\n                    borderDash,\r\n                    borderDashOffset,\r\n                    tickWidth,\r\n                    tickColor,\r\n                    tickBorderDash,\r\n                    tickBorderDashOffset,\r\n                });\r\n            }\r\n            me._ticksLength = ticksLength;\r\n            me._borderValue = borderValue;\r\n            return items;\r\n        }\r\n\r\n        _computeLabelItems(chartArea) {\r\n            const me = this;\r\n            const axis = me.axis;\r\n            const options = me.options;\r\n            const {position, ticks: optionTicks} = options;\r\n            const isHorizontal = me.isHorizontal();\r\n            const ticks = me.ticks;\r\n            const {align, crossAlign, padding} = optionTicks;\r\n            const tl = getTickMarkLength(options.grid);\r\n            const tickAndPadding = tl + padding;\r\n            const rotation = -toRadians(me.labelRotation);\r\n            const items = [];\r\n            let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\r\n            let textBaseline = 'middle';\r\n            if (position === 'top') {\r\n                y = me.bottom - tickAndPadding;\r\n                textAlign = me._getXAxisLabelAlignment();\r\n            } else if (position === 'bottom') {\r\n                y = me.top + tickAndPadding;\r\n                textAlign = me._getXAxisLabelAlignment();\r\n            } else if (position === 'left') {\r\n                const ret = this._getYAxisLabelAlignment(tl);\r\n                textAlign = ret.textAlign;\r\n                x = ret.x;\r\n            } else if (position === 'right') {\r\n                const ret = this._getYAxisLabelAlignment(tl);\r\n                textAlign = ret.textAlign;\r\n                x = ret.x;\r\n            } else if (axis === 'x') {\r\n                if (position === 'center') {\r\n                    y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\r\n                } else if (isObject(position)) {\r\n                    const positionAxisID = Object.keys(position)[0];\r\n                    const value = position[positionAxisID];\r\n                    y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\r\n                }\r\n                textAlign = me._getXAxisLabelAlignment();\r\n            } else if (axis === 'y') {\r\n                if (position === 'center') {\r\n                    x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\r\n                } else if (isObject(position)) {\r\n                    const positionAxisID = Object.keys(position)[0];\r\n                    const value = position[positionAxisID];\r\n                    x = me.chart.scales[positionAxisID].getPixelForValue(value);\r\n                }\r\n                textAlign = this._getYAxisLabelAlignment(tl).textAlign;\r\n            }\r\n            if (axis === 'y') {\r\n                if (align === 'start') {\r\n                    textBaseline = 'top';\r\n                } else if (align === 'end') {\r\n                    textBaseline = 'bottom';\r\n                }\r\n            }\r\n            const labelSizes = me._getLabelSizes();\r\n            for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                tick = ticks[i];\r\n                label = tick.label;\r\n                const optsAtIndex = optionTicks.setContext(me.getContext(i));\r\n                pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\r\n                font = me._resolveTickFontOptions(i);\r\n                lineHeight = font.lineHeight;\r\n                lineCount = isArray(label) ? label.length : 1;\r\n                const halfCount = lineCount / 2;\r\n                const color = optsAtIndex.color;\r\n                const strokeColor = optsAtIndex.textStrokeColor;\r\n                const strokeWidth = optsAtIndex.textStrokeWidth;\r\n                if (isHorizontal) {\r\n                    x = pixel;\r\n                    if (position === 'top') {\r\n                        if (crossAlign === 'near' || rotation !== 0) {\r\n                            textOffset = -lineCount * lineHeight + lineHeight / 2;\r\n                        } else if (crossAlign === 'center') {\r\n                            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\r\n                        } else {\r\n                            textOffset = -labelSizes.highest.height + lineHeight / 2;\r\n                        }\r\n                    } else {\r\n                        if (crossAlign === 'near' || rotation !== 0) {\r\n                            textOffset = lineHeight / 2;\r\n                        } else if (crossAlign === 'center') {\r\n                            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\r\n                        } else {\r\n                            textOffset = labelSizes.highest.height - lineCount * lineHeight;\r\n                        }\r\n                    }\r\n                } else {\r\n                    y = pixel;\r\n                    textOffset = (1 - lineCount) * lineHeight / 2;\r\n                }\r\n                items.push({\r\n                    rotation,\r\n                    label,\r\n                    font,\r\n                    color,\r\n                    strokeColor,\r\n                    strokeWidth,\r\n                    textOffset,\r\n                    textAlign,\r\n                    textBaseline,\r\n                    translation: [x, y]\r\n                });\r\n            }\r\n            return items;\r\n        }\r\n\r\n        _getXAxisLabelAlignment() {\r\n            const me = this;\r\n            const {position, ticks} = me.options;\r\n            const rotation = -toRadians(me.labelRotation);\r\n            if (rotation) {\r\n                return position === 'top' ? 'left' : 'right';\r\n            }\r\n            let align = 'center';\r\n            if (ticks.align === 'start') {\r\n                align = 'left';\r\n            } else if (ticks.align === 'end') {\r\n                align = 'right';\r\n            }\r\n            return align;\r\n        }\r\n\r\n        _getYAxisLabelAlignment(tl) {\r\n            const me = this;\r\n            const {position, ticks: {crossAlign, mirror, padding}} = me.options;\r\n            const labelSizes = me._getLabelSizes();\r\n            const tickAndPadding = tl + padding;\r\n            const widest = labelSizes.widest.width;\r\n            let textAlign;\r\n            let x;\r\n            if (position === 'left') {\r\n                if (mirror) {\r\n                    textAlign = 'left';\r\n                    x = me.right - padding;\r\n                } else {\r\n                    x = me.right - tickAndPadding;\r\n                    if (crossAlign === 'near') {\r\n                        textAlign = 'right';\r\n                    } else if (crossAlign === 'center') {\r\n                        textAlign = 'center';\r\n                        x -= (widest / 2);\r\n                    } else {\r\n                        textAlign = 'left';\r\n                        x = me.left;\r\n                    }\r\n                }\r\n            } else if (position === 'right') {\r\n                if (mirror) {\r\n                    textAlign = 'right';\r\n                    x = me.left + padding;\r\n                } else {\r\n                    x = me.left + tickAndPadding;\r\n                    if (crossAlign === 'near') {\r\n                        textAlign = 'left';\r\n                    } else if (crossAlign === 'center') {\r\n                        textAlign = 'center';\r\n                        x += widest / 2;\r\n                    } else {\r\n                        textAlign = 'right';\r\n                        x = me.right;\r\n                    }\r\n                }\r\n            } else {\r\n                textAlign = 'right';\r\n            }\r\n            return {textAlign, x};\r\n        }\r\n\r\n        _computeLabelArea() {\r\n            const me = this;\r\n            if (me.options.ticks.mirror) {\r\n                return;\r\n            }\r\n            const chart = me.chart;\r\n            const position = me.options.position;\r\n            if (position === 'left' || position === 'right') {\r\n                return {top: 0, left: me.left, bottom: chart.height, right: me.right};\r\n            }\r\n            if (position === 'top' || position === 'bottom') {\r\n                return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\r\n            }\r\n        }\r\n\r\n        drawBackground() {\r\n            const {ctx, options: {backgroundColor}, left, top, width, height} = this;\r\n            if (backgroundColor) {\r\n                ctx.save();\r\n                ctx.fillStyle = backgroundColor;\r\n                ctx.fillRect(left, top, width, height);\r\n                ctx.restore();\r\n            }\r\n        }\r\n\r\n        getLineWidthForValue(value) {\r\n            const me = this;\r\n            const grid = me.options.grid;\r\n            if (!me._isVisible() || !grid.display) {\r\n                return 0;\r\n            }\r\n            const ticks = me.ticks;\r\n            const index = ticks.findIndex(t => t.value === value);\r\n            if (index >= 0) {\r\n                const opts = grid.setContext(me.getContext(index));\r\n                return opts.lineWidth;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        drawGrid(chartArea) {\r\n            const me = this;\r\n            const grid = me.options.grid;\r\n            const ctx = me.ctx;\r\n            const chart = me.chart;\r\n            const borderOpts = grid.setContext(me.getContext(0));\r\n            const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\r\n            const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\r\n            let i, ilen;\r\n            const drawLine = (p1, p2, style) => {\r\n                if (!style.width || !style.color) {\r\n                    return;\r\n                }\r\n                ctx.save();\r\n                ctx.lineWidth = style.width;\r\n                ctx.strokeStyle = style.color;\r\n                ctx.setLineDash(style.borderDash || []);\r\n                ctx.lineDashOffset = style.borderDashOffset;\r\n                ctx.beginPath();\r\n                ctx.moveTo(p1.x, p1.y);\r\n                ctx.lineTo(p2.x, p2.y);\r\n                ctx.stroke();\r\n                ctx.restore();\r\n            };\r\n            if (grid.display) {\r\n                for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n                    const item = items[i];\r\n                    if (grid.drawOnChartArea) {\r\n                        drawLine(\r\n                            {x: item.x1, y: item.y1},\r\n                            {x: item.x2, y: item.y2},\r\n                            item\r\n                        );\r\n                    }\r\n                    if (grid.drawTicks) {\r\n                        drawLine(\r\n                            {x: item.tx1, y: item.ty1},\r\n                            {x: item.tx2, y: item.ty2},\r\n                            {\r\n                                color: item.tickColor,\r\n                                width: item.tickWidth,\r\n                                borderDash: item.tickBorderDash,\r\n                                borderDashOffset: item.tickBorderDashOffset\r\n                            }\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            if (axisWidth) {\r\n                const edgeOpts = grid.setContext(me.getContext(me._ticksLength - 1));\r\n                const lastLineWidth = edgeOpts.lineWidth;\r\n                const borderValue = me._borderValue;\r\n                let x1, x2, y1, y2;\r\n                if (me.isHorizontal()) {\r\n                    x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\r\n                    x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\r\n                    y1 = y2 = borderValue;\r\n                } else {\r\n                    y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\r\n                    y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\r\n                    x1 = x2 = borderValue;\r\n                }\r\n                drawLine(\r\n                    {x: x1, y: y1},\r\n                    {x: x2, y: y2},\r\n                    {width: axisWidth, color: edgeOpts.borderColor});\r\n            }\r\n        }\r\n\r\n        drawLabels(chartArea) {\r\n            const me = this;\r\n            const optionTicks = me.options.ticks;\r\n            if (!optionTicks.display) {\r\n                return;\r\n            }\r\n            const ctx = me.ctx;\r\n            const area = me._computeLabelArea();\r\n            if (area) {\r\n                clipArea(ctx, area);\r\n            }\r\n            const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\r\n            let i, ilen;\r\n            for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n                const item = items[i];\r\n                const tickFont = item.font;\r\n                const label = item.label;\r\n                let y = item.textOffset;\r\n                renderText(ctx, label, 0, y, tickFont, item);\r\n            }\r\n            if (area) {\r\n                unclipArea(ctx);\r\n            }\r\n        }\r\n\r\n        drawTitle() {\r\n            const {ctx, options: {position, title, reverse}} = this;\r\n            if (!title.display) {\r\n                return;\r\n            }\r\n            const font = toFont(title.font);\r\n            const padding = toPadding(title.padding);\r\n            const align = title.align;\r\n            let offset = font.lineHeight / 2;\r\n            if (position === 'bottom') {\r\n                offset += padding.bottom;\r\n                if (isArray(title.text)) {\r\n                    offset += font.lineHeight * (title.text.length - 1);\r\n                }\r\n            } else {\r\n                offset += padding.top;\r\n            }\r\n            const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\r\n            renderText(ctx, title.text, 0, 0, font, {\r\n                color: title.color,\r\n                maxWidth,\r\n                rotation,\r\n                textAlign: titleAlign(align, position, reverse),\r\n                textBaseline: 'middle',\r\n                translation: [titleX, titleY],\r\n            });\r\n        }\r\n\r\n        draw(chartArea) {\r\n            const me = this;\r\n            if (!me._isVisible()) {\r\n                return;\r\n            }\r\n            me.drawBackground();\r\n            me.drawGrid(chartArea);\r\n            me.drawTitle();\r\n            me.drawLabels(chartArea);\r\n        }\r\n\r\n        _layers() {\r\n            const me = this;\r\n            const opts = me.options;\r\n            const tz = opts.ticks && opts.ticks.z || 0;\r\n            const gz = opts.grid && opts.grid.z || 0;\r\n            if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\r\n                return [{\r\n                    z: tz,\r\n                    draw(chartArea) {\r\n                        me.draw(chartArea);\r\n                    }\r\n                }];\r\n            }\r\n            return [{\r\n                z: gz,\r\n                draw(chartArea) {\r\n                    me.drawBackground();\r\n                    me.drawGrid(chartArea);\r\n                    me.drawTitle();\r\n                }\r\n            }, {\r\n                z: tz,\r\n                draw(chartArea) {\r\n                    me.drawLabels(chartArea);\r\n                }\r\n            }];\r\n        }\r\n\r\n        getMatchingVisibleMetas(type) {\r\n            const me = this;\r\n            const metas = me.chart.getSortedVisibleDatasetMetas();\r\n            const axisID = me.axis + 'AxisID';\r\n            const result = [];\r\n            let i, ilen;\r\n            for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n                const meta = metas[i];\r\n                if (meta[axisID] === me.id && (!type || meta.type === type)) {\r\n                    result.push(meta);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        _resolveTickFontOptions(index) {\r\n            const opts = this.options.ticks.setContext(this.getContext(index));\r\n            return toFont(opts.font);\r\n        }\r\n    }\r\n\r\n    function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback) {\r\n        if (!defined(fallback)) {\r\n            fallback = _resolve('_fallback', scopes);\r\n        }\r\n        const cache = {\r\n            [Symbol.toStringTag]: 'Object',\r\n            _cacheable: true,\r\n            _scopes: scopes,\r\n            _rootScopes: rootScopes,\r\n            _fallback: fallback,\r\n            override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\r\n        };\r\n        return new Proxy(cache, {\r\n            deleteProperty(target, prop) {\r\n                delete target[prop];\r\n                delete target._keys;\r\n                delete scopes[0][prop];\r\n                return true;\r\n            },\r\n            get(target, prop) {\r\n                return _cached(target, prop,\r\n                    () => _resolveWithPrefixes(prop, prefixes, scopes, target));\r\n            },\r\n            getOwnPropertyDescriptor(target, prop) {\r\n                return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\r\n            },\r\n            getPrototypeOf() {\r\n                return Reflect.getPrototypeOf(scopes[0]);\r\n            },\r\n            has(target, prop) {\r\n                return getKeysFromAllScopes(target).includes(prop);\r\n            },\r\n            ownKeys(target) {\r\n                return getKeysFromAllScopes(target);\r\n            },\r\n            set(target, prop, value) {\r\n                scopes[0][prop] = value;\r\n                delete target[prop];\r\n                delete target._keys;\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    function _attachContext(proxy, context, subProxy, descriptorDefaults) {\r\n        const cache = {\r\n            _cacheable: false,\r\n            _proxy: proxy,\r\n            _context: context,\r\n            _subProxy: subProxy,\r\n            _stack: new Set(),\r\n            _descriptors: _descriptors(proxy, descriptorDefaults),\r\n            setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\r\n            override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\r\n        };\r\n        return new Proxy(cache, {\r\n            deleteProperty(target, prop) {\r\n                delete target[prop];\r\n                delete proxy[prop];\r\n                return true;\r\n            },\r\n            get(target, prop, receiver) {\r\n                return _cached(target, prop,\r\n                    () => _resolveWithContext(target, prop, receiver));\r\n            },\r\n            getOwnPropertyDescriptor(target, prop) {\r\n                return target._descriptors.allKeys\r\n                    ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\r\n                    : Reflect.getOwnPropertyDescriptor(proxy, prop);\r\n            },\r\n            getPrototypeOf() {\r\n                return Reflect.getPrototypeOf(proxy);\r\n            },\r\n            has(target, prop) {\r\n                return Reflect.has(proxy, prop);\r\n            },\r\n            ownKeys() {\r\n                return Reflect.ownKeys(proxy);\r\n            },\r\n            set(target, prop, value) {\r\n                proxy[prop] = value;\r\n                delete target[prop];\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\r\n        const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\r\n        return {\r\n            allKeys: _allKeys,\r\n            scriptable: _scriptable,\r\n            indexable: _indexable,\r\n            isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\r\n            isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\r\n        };\r\n    }\r\n\r\n    const readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\r\n    const needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\r\n\r\n    function _cached(target, prop, resolve) {\r\n        let value = target[prop];\r\n        if (defined(value)) {\r\n            return value;\r\n        }\r\n        value = resolve();\r\n        if (defined(value)) {\r\n            target[prop] = value;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function _resolveWithContext(target, prop, receiver) {\r\n        const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\r\n        let value = _proxy[prop];\r\n        if (isFunction(value) && descriptors.isScriptable(prop)) {\r\n            value = _resolveScriptable(prop, value, target, receiver);\r\n        }\r\n        if (isArray(value) && value.length) {\r\n            value = _resolveArray(prop, value, target, descriptors.isIndexable);\r\n        }\r\n        if (needsSubResolver(prop, value)) {\r\n            value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function _resolveScriptable(prop, value, target, receiver) {\r\n        const {_proxy, _context, _subProxy, _stack} = target;\r\n        if (_stack.has(prop)) {\r\n            throw new Error('Recursion detected: ' + [..._stack].join('->') + '->' + prop);\r\n        }\r\n        _stack.add(prop);\r\n        value = value(_context, _subProxy || receiver);\r\n        _stack.delete(prop);\r\n        if (isObject(value)) {\r\n            value = createSubResolver(_proxy._scopes, _proxy, prop, value);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function _resolveArray(prop, value, target, isIndexable) {\r\n        const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\r\n        if (defined(_context.index) && isIndexable(prop)) {\r\n            value = value[_context.index % value.length];\r\n        } else if (isObject(value[0])) {\r\n            const arr = value;\r\n            const scopes = _proxy._scopes.filter(s => s !== arr);\r\n            value = [];\r\n            for (const item of arr) {\r\n                const resolver = createSubResolver(scopes, _proxy, prop, item);\r\n                value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function resolveFallback(fallback, prop, value) {\r\n        return isFunction(fallback) ? fallback(prop, value) : fallback;\r\n    }\r\n\r\n    const getScope = (key, parent) => key === true ? parent\r\n        : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\r\n\r\n    function addScopes(set, parentScopes, key, parentFallback) {\r\n        for (const parent of parentScopes) {\r\n            const scope = getScope(key, parent);\r\n            if (scope) {\r\n                set.add(scope);\r\n                const fallback = resolveFallback(scope._fallback, key, scope);\r\n                if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\r\n                    return fallback;\r\n                }\r\n            } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\r\n                return null;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function createSubResolver(parentScopes, resolver, prop, value) {\r\n        const rootScopes = resolver._rootScopes;\r\n        const fallback = resolveFallback(resolver._fallback, prop, value);\r\n        const allScopes = [...parentScopes, ...rootScopes];\r\n        const set = new Set();\r\n        const firstParent = parentScopes[0];\r\n        if (isObject(firstParent) && !(prop in firstParent)) {\r\n            set.add(firstParent[prop] = {});\r\n        }\r\n        set.add(value);\r\n        let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\r\n        if (key === null) {\r\n            return false;\r\n        }\r\n        if (defined(fallback) && fallback !== prop) {\r\n            key = addScopesFromKey(set, allScopes, fallback, key);\r\n            if (key === null) {\r\n                return false;\r\n            }\r\n        }\r\n        return _createResolver([...set], [''], rootScopes, fallback);\r\n    }\r\n\r\n    function addScopesFromKey(set, allScopes, key, fallback) {\r\n        while (key) {\r\n            key = addScopes(set, allScopes, key, fallback);\r\n        }\r\n        return key;\r\n    }\r\n\r\n    function _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\r\n        let value;\r\n        for (const prefix of prefixes) {\r\n            value = _resolve(readKey(prefix, prop), scopes);\r\n            if (defined(value)) {\r\n                return needsSubResolver(prop, value)\r\n                    ? createSubResolver(scopes, proxy, prop, value)\r\n                    : value;\r\n            }\r\n        }\r\n    }\r\n\r\n    function _resolve(key, scopes) {\r\n        for (const scope of scopes) {\r\n            if (!scope) {\r\n                continue;\r\n            }\r\n            const value = scope[key];\r\n            if (defined(value)) {\r\n                return value;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getKeysFromAllScopes(target) {\r\n        let keys = target._keys;\r\n        if (!keys) {\r\n            keys = target._keys = resolveKeysFromAllScopes(target._scopes);\r\n        }\r\n        return keys;\r\n    }\r\n\r\n    function resolveKeysFromAllScopes(scopes) {\r\n        const set = new Set();\r\n        for (const scope of scopes) {\r\n            for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\r\n                set.add(key);\r\n            }\r\n        }\r\n        return [...set];\r\n    }\r\n\r\n    const EPSILON = Number.EPSILON || 1e-14;\r\n    const getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\r\n\r\n    function splineCurve(firstPoint, middlePoint, afterPoint, t) {\r\n        const previous = firstPoint.skip ? middlePoint : firstPoint;\r\n        const current = middlePoint;\r\n        const next = afterPoint.skip ? middlePoint : afterPoint;\r\n        const d01 = distanceBetweenPoints(current, previous);\r\n        const d12 = distanceBetweenPoints(next, current);\r\n        let s01 = d01 / (d01 + d12);\r\n        let s12 = d12 / (d01 + d12);\r\n        s01 = isNaN(s01) ? 0 : s01;\r\n        s12 = isNaN(s12) ? 0 : s12;\r\n        const fa = t * s01;\r\n        const fb = t * s12;\r\n        return {\r\n            previous: {\r\n                x: current.x - fa * (next.x - previous.x),\r\n                y: current.y - fa * (next.y - previous.y)\r\n            },\r\n            next: {\r\n                x: current.x + fb * (next.x - previous.x),\r\n                y: current.y + fb * (next.y - previous.y)\r\n            }\r\n        };\r\n    }\r\n\r\n    function monotoneAdjust(points, deltaK, mK) {\r\n        const pointsLen = points.length;\r\n        let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\r\n        let pointAfter = getPoint(points, 0);\r\n        for (let i = 0; i < pointsLen - 1; ++i) {\r\n            pointCurrent = pointAfter;\r\n            pointAfter = getPoint(points, i + 1);\r\n            if (!pointCurrent || !pointAfter) {\r\n                continue;\r\n            }\r\n            if (almostEquals(deltaK[i], 0, EPSILON)) {\r\n                mK[i] = mK[i + 1] = 0;\r\n                continue;\r\n            }\r\n            alphaK = mK[i] / deltaK[i];\r\n            betaK = mK[i + 1] / deltaK[i];\r\n            squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n            if (squaredMagnitude <= 9) {\r\n                continue;\r\n            }\r\n            tauK = 3 / Math.sqrt(squaredMagnitude);\r\n            mK[i] = alphaK * tauK * deltaK[i];\r\n            mK[i + 1] = betaK * tauK * deltaK[i];\r\n        }\r\n    }\r\n\r\n    function monotoneCompute(points, mK) {\r\n        const pointsLen = points.length;\r\n        let deltaX, pointBefore, pointCurrent;\r\n        let pointAfter = getPoint(points, 0);\r\n        for (let i = 0; i < pointsLen; ++i) {\r\n            pointBefore = pointCurrent;\r\n            pointCurrent = pointAfter;\r\n            pointAfter = getPoint(points, i + 1);\r\n            if (!pointCurrent) {\r\n                continue;\r\n            }\r\n            const {x, y} = pointCurrent;\r\n            if (pointBefore) {\r\n                deltaX = (x - pointBefore.x) / 3;\r\n                pointCurrent.cp1x = x - deltaX;\r\n                pointCurrent.cp1y = y - deltaX * mK[i];\r\n            }\r\n            if (pointAfter) {\r\n                deltaX = (pointAfter.x - x) / 3;\r\n                pointCurrent.cp2x = x + deltaX;\r\n                pointCurrent.cp2y = y + deltaX * mK[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    function splineCurveMonotone(points) {\r\n        const pointsLen = points.length;\r\n        const deltaK = Array(pointsLen).fill(0);\r\n        const mK = Array(pointsLen);\r\n        let i, pointBefore, pointCurrent;\r\n        let pointAfter = getPoint(points, 0);\r\n        for (i = 0; i < pointsLen; ++i) {\r\n            pointBefore = pointCurrent;\r\n            pointCurrent = pointAfter;\r\n            pointAfter = getPoint(points, i + 1);\r\n            if (!pointCurrent) {\r\n                continue;\r\n            }\r\n            if (pointAfter) {\r\n                const slopeDeltaX = (pointAfter.x - pointCurrent.x);\r\n                deltaK[i] = slopeDeltaX !== 0 ? (pointAfter.y - pointCurrent.y) / slopeDeltaX : 0;\r\n            }\r\n            mK[i] = !pointBefore ? deltaK[i]\r\n                : !pointAfter ? deltaK[i - 1]\r\n                    : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\r\n                        : (deltaK[i - 1] + deltaK[i]) / 2;\r\n        }\r\n        monotoneAdjust(points, deltaK, mK);\r\n        monotoneCompute(points, mK);\r\n    }\r\n\r\n    function capControlPoint(pt, min, max) {\r\n        return Math.max(Math.min(pt, max), min);\r\n    }\r\n\r\n    function capBezierPoints(points, area) {\r\n        let i, ilen, point, inArea, inAreaPrev;\r\n        let inAreaNext = _isPointInArea(points[0], area);\r\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n            inAreaPrev = inArea;\r\n            inArea = inAreaNext;\r\n            inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\r\n            if (!inArea) {\r\n                continue;\r\n            }\r\n            point = points[i];\r\n            if (inAreaPrev) {\r\n                point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\r\n                point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\r\n            }\r\n            if (inAreaNext) {\r\n                point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\r\n                point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\r\n            }\r\n        }\r\n    }\r\n\r\n    function _updateBezierControlPoints(points, options, area, loop) {\r\n        let i, ilen, point, controlPoints;\r\n        if (options.spanGaps) {\r\n            points = points.filter((pt) => !pt.skip);\r\n        }\r\n        if (options.cubicInterpolationMode === 'monotone') {\r\n            splineCurveMonotone(points);\r\n        } else {\r\n            let prev = loop ? points[points.length - 1] : points[0];\r\n            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                point = points[i];\r\n                controlPoints = splineCurve(\r\n                    prev,\r\n                    point,\r\n                    points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\r\n                    options.tension\r\n                );\r\n                point.cp1x = controlPoints.previous.x;\r\n                point.cp1y = controlPoints.previous.y;\r\n                point.cp2x = controlPoints.next.x;\r\n                point.cp2y = controlPoints.next.y;\r\n                prev = point;\r\n            }\r\n        }\r\n        if (options.capBezierPoints) {\r\n            capBezierPoints(points, area);\r\n        }\r\n    }\r\n\r\n    function _pointInLine(p1, p2, t, mode) {\r\n        return {\r\n            x: p1.x + t * (p2.x - p1.x),\r\n            y: p1.y + t * (p2.y - p1.y)\r\n        };\r\n    }\r\n\r\n    function _steppedInterpolation(p1, p2, t, mode) {\r\n        return {\r\n            x: p1.x + t * (p2.x - p1.x),\r\n            y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\r\n                : mode === 'after' ? t < 1 ? p1.y : p2.y\r\n                    : t > 0 ? p2.y : p1.y\r\n        };\r\n    }\r\n\r\n    function _bezierInterpolation(p1, p2, t, mode) {\r\n        const cp1 = {x: p1.cp2x, y: p1.cp2y};\r\n        const cp2 = {x: p2.cp1x, y: p2.cp1y};\r\n        const a = _pointInLine(p1, cp1, t);\r\n        const b = _pointInLine(cp1, cp2, t);\r\n        const c = _pointInLine(cp2, p2, t);\r\n        const d = _pointInLine(a, b, t);\r\n        const e = _pointInLine(b, c, t);\r\n        return _pointInLine(d, e, t);\r\n    }\r\n\r\n    const getRightToLeftAdapter = function (rectX, width) {\r\n        return {\r\n            x(x) {\r\n                return rectX + rectX + width - x;\r\n            },\r\n            setWidth(w) {\r\n                width = w;\r\n            },\r\n            textAlign(align) {\r\n                if (align === 'center') {\r\n                    return align;\r\n                }\r\n                return align === 'right' ? 'left' : 'right';\r\n            },\r\n            xPlus(x, value) {\r\n                return x - value;\r\n            },\r\n            leftForLtr(x, itemWidth) {\r\n                return x - itemWidth;\r\n            },\r\n        };\r\n    };\r\n    const getLeftToRightAdapter = function () {\r\n        return {\r\n            x(x) {\r\n                return x;\r\n            },\r\n            setWidth(w) {\r\n            },\r\n            textAlign(align) {\r\n                return align;\r\n            },\r\n            xPlus(x, value) {\r\n                return x + value;\r\n            },\r\n            leftForLtr(x, _itemWidth) {\r\n                return x;\r\n            },\r\n        };\r\n    };\r\n\r\n    function getRtlAdapter(rtl, rectX, width) {\r\n        return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\r\n    }\r\n\r\n    function overrideTextDirection(ctx, direction) {\r\n        let style, original;\r\n        if (direction === 'ltr' || direction === 'rtl') {\r\n            style = ctx.canvas.style;\r\n            original = [\r\n                style.getPropertyValue('direction'),\r\n                style.getPropertyPriority('direction'),\r\n            ];\r\n            style.setProperty('direction', direction, 'important');\r\n            ctx.prevTextDirection = original;\r\n        }\r\n    }\r\n\r\n    function restoreTextDirection(ctx, original) {\r\n        if (original !== undefined) {\r\n            delete ctx.prevTextDirection;\r\n            ctx.canvas.style.setProperty('direction', original[0], original[1]);\r\n        }\r\n    }\r\n\r\n    function propertyFn(property) {\r\n        if (property === 'angle') {\r\n            return {\r\n                between: _angleBetween,\r\n                compare: _angleDiff,\r\n                normalize: _normalizeAngle,\r\n            };\r\n        }\r\n        return {\r\n            between: (n, s, e) => n >= s && n <= e,\r\n            compare: (a, b) => a - b,\r\n            normalize: x => x\r\n        };\r\n    }\r\n\r\n    function makeSubSegment(start, end, loop, count) {\r\n        return {\r\n            start: start % count,\r\n            end: end % count,\r\n            loop: loop && (end - start + 1) % count === 0\r\n        };\r\n    }\r\n\r\n    function getSegment(segment, points, bounds) {\r\n        const {property, start: startBound, end: endBound} = bounds;\r\n        const {between, normalize} = propertyFn(property);\r\n        const count = points.length;\r\n        let {start, end, loop} = segment;\r\n        let i, ilen;\r\n        if (loop) {\r\n            start += count;\r\n            end += count;\r\n            for (i = 0, ilen = count; i < ilen; ++i) {\r\n                if (!between(normalize(points[start % count][property]), startBound, endBound)) {\r\n                    break;\r\n                }\r\n                start--;\r\n                end--;\r\n            }\r\n            start %= count;\r\n            end %= count;\r\n        }\r\n        if (end < start) {\r\n            end += count;\r\n        }\r\n        return {start, end, loop};\r\n    }\r\n\r\n    function _boundSegment(segment, points, bounds) {\r\n        if (!bounds) {\r\n            return [segment];\r\n        }\r\n        const {property, start: startBound, end: endBound} = bounds;\r\n        const count = points.length;\r\n        const {compare, between, normalize} = propertyFn(property);\r\n        const {start, end, loop} = getSegment(segment, points, bounds);\r\n        const result = [];\r\n        let inside = false;\r\n        let subStart = null;\r\n        let value, point, prevValue;\r\n        const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\r\n        const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\r\n        const shouldStart = () => inside || startIsBefore();\r\n        const shouldStop = () => !inside || endIsBefore();\r\n        for (let i = start, prev = start; i <= end; ++i) {\r\n            point = points[i % count];\r\n            if (point.skip) {\r\n                continue;\r\n            }\r\n            value = normalize(point[property]);\r\n            inside = between(value, startBound, endBound);\r\n            if (subStart === null && shouldStart()) {\r\n                subStart = compare(value, startBound) === 0 ? i : prev;\r\n            }\r\n            if (subStart !== null && shouldStop()) {\r\n                result.push(makeSubSegment(subStart, i, loop, count));\r\n                subStart = null;\r\n            }\r\n            prev = i;\r\n            prevValue = value;\r\n        }\r\n        if (subStart !== null) {\r\n            result.push(makeSubSegment(subStart, end, loop, count));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function _boundSegments(line, bounds) {\r\n        const result = [];\r\n        const segments = line.segments;\r\n        for (let i = 0; i < segments.length; i++) {\r\n            const sub = _boundSegment(segments[i], line.points, bounds);\r\n            if (sub.length) {\r\n                result.push(...sub);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function findStartAndEnd(points, count, loop, spanGaps) {\r\n        let start = 0;\r\n        let end = count - 1;\r\n        if (loop && !spanGaps) {\r\n            while (start < count && !points[start].skip) {\r\n                start++;\r\n            }\r\n        }\r\n        while (start < count && points[start].skip) {\r\n            start++;\r\n        }\r\n        start %= count;\r\n        if (loop) {\r\n            end += start;\r\n        }\r\n        while (end > start && points[end % count].skip) {\r\n            end--;\r\n        }\r\n        end %= count;\r\n        return {start, end};\r\n    }\r\n\r\n    function solidSegments(points, start, max, loop) {\r\n        const count = points.length;\r\n        const result = [];\r\n        let last = start;\r\n        let prev = points[start];\r\n        let end;\r\n        for (end = start + 1; end <= max; ++end) {\r\n            const cur = points[end % count];\r\n            if (cur.skip || cur.stop) {\r\n                if (!prev.skip) {\r\n                    loop = false;\r\n                    result.push({start: start % count, end: (end - 1) % count, loop});\r\n                    start = last = cur.stop ? end : null;\r\n                }\r\n            } else {\r\n                last = end;\r\n                if (prev.skip) {\r\n                    start = end;\r\n                }\r\n            }\r\n            prev = cur;\r\n        }\r\n        if (last !== null) {\r\n            result.push({start: start % count, end: last % count, loop});\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function _computeSegments(line) {\r\n        const points = line.points;\r\n        const spanGaps = line.options.spanGaps;\r\n        const count = points.length;\r\n        if (!count) {\r\n            return [];\r\n        }\r\n        const loop = !!line._loop;\r\n        const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\r\n        if (spanGaps === true) {\r\n            return [{start, end, loop}];\r\n        }\r\n        const max = end < start ? end + count : end;\r\n        const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\r\n        return solidSegments(points, start, max, completeLoop);\r\n    }\r\n\r\n    var helpers = /*#__PURE__*/Object.freeze({\r\n        __proto__: null,\r\n        easingEffects: effects,\r\n        color: color,\r\n        getHoverColor: getHoverColor,\r\n        noop: noop,\r\n        uid: uid,\r\n        isNullOrUndef: isNullOrUndef,\r\n        isArray: isArray,\r\n        isObject: isObject,\r\n        isFinite: isNumberFinite,\r\n        finiteOrDefault: finiteOrDefault,\r\n        valueOrDefault: valueOrDefault,\r\n        toPercentage: toPercentage,\r\n        toDimension: toDimension,\r\n        callback: callback,\r\n        each: each,\r\n        _elementsEqual: _elementsEqual,\r\n        clone: clone,\r\n        _merger: _merger,\r\n        merge: merge,\r\n        mergeIf: mergeIf,\r\n        _mergerIf: _mergerIf,\r\n        _deprecated: _deprecated,\r\n        resolveObjectKey: resolveObjectKey,\r\n        _capitalize: _capitalize,\r\n        defined: defined,\r\n        isFunction: isFunction,\r\n        toFontString: toFontString,\r\n        _measureText: _measureText,\r\n        _longestText: _longestText,\r\n        _alignPixel: _alignPixel,\r\n        clearCanvas: clearCanvas,\r\n        drawPoint: drawPoint,\r\n        _isPointInArea: _isPointInArea,\r\n        clipArea: clipArea,\r\n        unclipArea: unclipArea,\r\n        _steppedLineTo: _steppedLineTo,\r\n        _bezierCurveTo: _bezierCurveTo,\r\n        renderText: renderText,\r\n        _lookup: _lookup,\r\n        _lookupByKey: _lookupByKey,\r\n        _rlookupByKey: _rlookupByKey,\r\n        _filterBetween: _filterBetween,\r\n        listenArrayEvents: listenArrayEvents,\r\n        unlistenArrayEvents: unlistenArrayEvents,\r\n        _arrayUnique: _arrayUnique,\r\n        _createResolver: _createResolver,\r\n        _attachContext: _attachContext,\r\n        _descriptors: _descriptors,\r\n        splineCurve: splineCurve,\r\n        splineCurveMonotone: splineCurveMonotone,\r\n        _updateBezierControlPoints: _updateBezierControlPoints,\r\n        _getParentNode: _getParentNode,\r\n        getStyle: getStyle,\r\n        getRelativePosition: getRelativePosition$1,\r\n        getMaximumSize: getMaximumSize,\r\n        retinaScale: retinaScale,\r\n        supportsEventListenerOptions: supportsEventListenerOptions,\r\n        readUsedSize: readUsedSize,\r\n        fontString: fontString,\r\n        requestAnimFrame: requestAnimFrame,\r\n        throttled: throttled,\r\n        debounce: debounce,\r\n        _toLeftRightCenter: _toLeftRightCenter,\r\n        _alignStartEnd: _alignStartEnd,\r\n        _textX: _textX,\r\n        _pointInLine: _pointInLine,\r\n        _steppedInterpolation: _steppedInterpolation,\r\n        _bezierInterpolation: _bezierInterpolation,\r\n        formatNumber: formatNumber,\r\n        toLineHeight: toLineHeight,\r\n        toTRBL: toTRBL,\r\n        toTRBLCorners: toTRBLCorners,\r\n        toPadding: toPadding,\r\n        toFont: toFont,\r\n        resolve: resolve,\r\n        _addGrace: _addGrace,\r\n        PI: PI,\r\n        TAU: TAU,\r\n        PITAU: PITAU,\r\n        INFINITY: INFINITY,\r\n        RAD_PER_DEG: RAD_PER_DEG,\r\n        HALF_PI: HALF_PI,\r\n        QUARTER_PI: QUARTER_PI,\r\n        TWO_THIRDS_PI: TWO_THIRDS_PI,\r\n        log10: log10,\r\n        sign: sign,\r\n        niceNum: niceNum,\r\n        _factorize: _factorize,\r\n        isNumber: isNumber,\r\n        almostEquals: almostEquals,\r\n        almostWhole: almostWhole,\r\n        _setMinAndMaxByKey: _setMinAndMaxByKey,\r\n        toRadians: toRadians,\r\n        toDegrees: toDegrees,\r\n        _decimalPlaces: _decimalPlaces,\r\n        getAngleFromPoint: getAngleFromPoint,\r\n        distanceBetweenPoints: distanceBetweenPoints,\r\n        _angleDiff: _angleDiff,\r\n        _normalizeAngle: _normalizeAngle,\r\n        _angleBetween: _angleBetween,\r\n        _limitValue: _limitValue,\r\n        _int16Range: _int16Range,\r\n        getRtlAdapter: getRtlAdapter,\r\n        overrideTextDirection: overrideTextDirection,\r\n        restoreTextDirection: restoreTextDirection,\r\n        _boundSegment: _boundSegment,\r\n        _boundSegments: _boundSegments,\r\n        _computeSegments: _computeSegments\r\n    });\r\n\r\n    class TypedRegistry {\r\n        constructor(type, scope, override) {\r\n            this.type = type;\r\n            this.scope = scope;\r\n            this.override = override;\r\n            this.items = Object.create(null);\r\n        }\r\n\r\n        isForType(type) {\r\n            return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\r\n        }\r\n\r\n        register(item) {\r\n            const me = this;\r\n            const proto = Object.getPrototypeOf(item);\r\n            let parentScope;\r\n            if (isIChartComponent(proto)) {\r\n                parentScope = me.register(proto);\r\n            }\r\n            const items = me.items;\r\n            const id = item.id;\r\n            const scope = me.scope + '.' + id;\r\n            if (!id) {\r\n                throw new Error('class does not have id: ' + item);\r\n            }\r\n            if (id in items) {\r\n                return scope;\r\n            }\r\n            items[id] = item;\r\n            registerDefaults(item, scope, parentScope);\r\n            if (me.override) {\r\n                defaults.override(item.id, item.overrides);\r\n            }\r\n            return scope;\r\n        }\r\n\r\n        get(id) {\r\n            return this.items[id];\r\n        }\r\n\r\n        unregister(item) {\r\n            const items = this.items;\r\n            const id = item.id;\r\n            const scope = this.scope;\r\n            if (id in items) {\r\n                delete items[id];\r\n            }\r\n            if (scope && id in defaults[scope]) {\r\n                delete defaults[scope][id];\r\n                if (this.override) {\r\n                    delete overrides[id];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function registerDefaults(item, scope, parentScope) {\r\n        const itemDefaults = merge(Object.create(null), [\r\n            parentScope ? defaults.get(parentScope) : {},\r\n            defaults.get(scope),\r\n            item.defaults\r\n        ]);\r\n        defaults.set(scope, itemDefaults);\r\n        if (item.defaultRoutes) {\r\n            routeDefaults(scope, item.defaultRoutes);\r\n        }\r\n        if (item.descriptors) {\r\n            defaults.describe(scope, item.descriptors);\r\n        }\r\n    }\r\n\r\n    function routeDefaults(scope, routes) {\r\n        Object.keys(routes).forEach(property => {\r\n            const propertyParts = property.split('.');\r\n            const sourceName = propertyParts.pop();\r\n            const sourceScope = [scope].concat(propertyParts).join('.');\r\n            const parts = routes[property].split('.');\r\n            const targetName = parts.pop();\r\n            const targetScope = parts.join('.');\r\n            defaults.route(sourceScope, sourceName, targetScope, targetName);\r\n        });\r\n    }\r\n\r\n    function isIChartComponent(proto) {\r\n        return 'id' in proto && 'defaults' in proto;\r\n    }\r\n\r\n    class Registry {\r\n        constructor() {\r\n            this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\r\n            this.elements = new TypedRegistry(Element, 'elements');\r\n            this.plugins = new TypedRegistry(Object, 'plugins');\r\n            this.scales = new TypedRegistry(Scale, 'scales');\r\n            this._typedRegistries = [this.controllers, this.scales, this.elements];\r\n        }\r\n\r\n        add(...args) {\r\n            this._each('register', args);\r\n        }\r\n\r\n        remove(...args) {\r\n            this._each('unregister', args);\r\n        }\r\n\r\n        addControllers(...args) {\r\n            this._each('register', args, this.controllers);\r\n        }\r\n\r\n        addElements(...args) {\r\n            this._each('register', args, this.elements);\r\n        }\r\n\r\n        addPlugins(...args) {\r\n            this._each('register', args, this.plugins);\r\n        }\r\n\r\n        addScales(...args) {\r\n            this._each('register', args, this.scales);\r\n        }\r\n\r\n        getController(id) {\r\n            return this._get(id, this.controllers, 'controller');\r\n        }\r\n\r\n        getElement(id) {\r\n            return this._get(id, this.elements, 'element');\r\n        }\r\n\r\n        getPlugin(id) {\r\n            return this._get(id, this.plugins, 'plugin');\r\n        }\r\n\r\n        getScale(id) {\r\n            return this._get(id, this.scales, 'scale');\r\n        }\r\n\r\n        removeControllers(...args) {\r\n            this._each('unregister', args, this.controllers);\r\n        }\r\n\r\n        removeElements(...args) {\r\n            this._each('unregister', args, this.elements);\r\n        }\r\n\r\n        removePlugins(...args) {\r\n            this._each('unregister', args, this.plugins);\r\n        }\r\n\r\n        removeScales(...args) {\r\n            this._each('unregister', args, this.scales);\r\n        }\r\n\r\n        _each(method, args, typedRegistry) {\r\n            const me = this;\r\n            [...args].forEach(arg => {\r\n                const reg = typedRegistry || me._getRegistryForType(arg);\r\n                if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\r\n                    me._exec(method, reg, arg);\r\n                } else {\r\n                    each(arg, item => {\r\n                        const itemReg = typedRegistry || me._getRegistryForType(item);\r\n                        me._exec(method, itemReg, item);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        _exec(method, registry, component) {\r\n            const camelMethod = _capitalize(method);\r\n            callback(component['before' + camelMethod], [], component);\r\n            registry[method](component);\r\n            callback(component['after' + camelMethod], [], component);\r\n        }\r\n\r\n        _getRegistryForType(type) {\r\n            for (let i = 0; i < this._typedRegistries.length; i++) {\r\n                const reg = this._typedRegistries[i];\r\n                if (reg.isForType(type)) {\r\n                    return reg;\r\n                }\r\n            }\r\n            return this.plugins;\r\n        }\r\n\r\n        _get(id, typedRegistry, type) {\r\n            const item = typedRegistry.get(id);\r\n            if (item === undefined) {\r\n                throw new Error('\"' + id + '\" is not a registered ' + type + '.');\r\n            }\r\n            return item;\r\n        }\r\n    }\r\n\r\n    var registry = new Registry();\r\n\r\n    class PluginService {\r\n        constructor() {\r\n            this._init = [];\r\n        }\r\n\r\n        notify(chart, hook, args) {\r\n            const me = this;\r\n            if (hook === 'beforeInit') {\r\n                me._init = me._createDescriptors(chart, true);\r\n                me._notify(me._init, chart, 'install');\r\n            }\r\n            const descriptors = me._descriptors(chart);\r\n            const result = me._notify(descriptors, chart, hook, args);\r\n            if (hook === 'destroy') {\r\n                me._notify(descriptors, chart, 'stop');\r\n                me._notify(me._init, chart, 'uninstall');\r\n            }\r\n            return result;\r\n        }\r\n\r\n        _notify(descriptors, chart, hook, args) {\r\n            args = args || {};\r\n            for (const descriptor of descriptors) {\r\n                const plugin = descriptor.plugin;\r\n                const method = plugin[hook];\r\n                const params = [chart, args, descriptor.options];\r\n                if (callback(method, params, plugin) === false && args.cancelable) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        invalidate() {\r\n            if (!isNullOrUndef(this._cache)) {\r\n                this._oldCache = this._cache;\r\n                this._cache = undefined;\r\n            }\r\n        }\r\n\r\n        _descriptors(chart) {\r\n            if (this._cache) {\r\n                return this._cache;\r\n            }\r\n            const descriptors = this._cache = this._createDescriptors(chart);\r\n            this._notifyStateChanges(chart);\r\n            return descriptors;\r\n        }\r\n\r\n        _createDescriptors(chart, all) {\r\n            const config = chart && chart.config;\r\n            const options = valueOrDefault(config.options && config.options.plugins, {});\r\n            const plugins = allPlugins(config);\r\n            return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\r\n        }\r\n\r\n        _notifyStateChanges(chart) {\r\n            const previousDescriptors = this._oldCache || [];\r\n            const descriptors = this._cache;\r\n            const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\r\n            this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\r\n            this._notify(diff(descriptors, previousDescriptors), chart, 'start');\r\n        }\r\n    }\r\n\r\n    function allPlugins(config) {\r\n        const plugins = [];\r\n        const keys = Object.keys(registry.plugins.items);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            plugins.push(registry.getPlugin(keys[i]));\r\n        }\r\n        const local = config.plugins || [];\r\n        for (let i = 0; i < local.length; i++) {\r\n            const plugin = local[i];\r\n            if (plugins.indexOf(plugin) === -1) {\r\n                plugins.push(plugin);\r\n            }\r\n        }\r\n        return plugins;\r\n    }\r\n\r\n    function getOpts(options, all) {\r\n        if (!all && options === false) {\r\n            return null;\r\n        }\r\n        if (options === true) {\r\n            return {};\r\n        }\r\n        return options;\r\n    }\r\n\r\n    function createDescriptors(chart, plugins, options, all) {\r\n        const result = [];\r\n        const context = chart.getContext();\r\n        for (let i = 0; i < plugins.length; i++) {\r\n            const plugin = plugins[i];\r\n            const id = plugin.id;\r\n            const opts = getOpts(options[id], all);\r\n            if (opts === null) {\r\n                continue;\r\n            }\r\n            result.push({\r\n                plugin,\r\n                options: pluginOpts(chart.config, plugin, opts, context)\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function pluginOpts(config, plugin, opts, context) {\r\n        const keys = config.pluginScopeKeys(plugin);\r\n        const scopes = config.getOptionScopes(opts, keys);\r\n        return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\r\n    }\r\n\r\n    function getIndexAxis(type, options) {\r\n        const datasetDefaults = defaults.datasets[type] || {};\r\n        const datasetOptions = (options.datasets || {})[type] || {};\r\n        return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\r\n    }\r\n\r\n    function getAxisFromDefaultScaleID(id, indexAxis) {\r\n        let axis = id;\r\n        if (id === '_index_') {\r\n            axis = indexAxis;\r\n        } else if (id === '_value_') {\r\n            axis = indexAxis === 'x' ? 'y' : 'x';\r\n        }\r\n        return axis;\r\n    }\r\n\r\n    function getDefaultScaleIDFromAxis(axis, indexAxis) {\r\n        return axis === indexAxis ? '_index_' : '_value_';\r\n    }\r\n\r\n    function axisFromPosition(position) {\r\n        if (position === 'top' || position === 'bottom') {\r\n            return 'x';\r\n        }\r\n        if (position === 'left' || position === 'right') {\r\n            return 'y';\r\n        }\r\n    }\r\n\r\n    function determineAxis(id, scaleOptions) {\r\n        if (id === 'x' || id === 'y') {\r\n            return id;\r\n        }\r\n        return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\r\n    }\r\n\r\n    function mergeScaleConfig(config, options) {\r\n        const chartDefaults = overrides[config.type] || {scales: {}};\r\n        const configScales = options.scales || {};\r\n        const chartIndexAxis = getIndexAxis(config.type, options);\r\n        const firstIDs = Object.create(null);\r\n        const scales = Object.create(null);\r\n        Object.keys(configScales).forEach(id => {\r\n            const scaleConf = configScales[id];\r\n            const axis = determineAxis(id, scaleConf);\r\n            const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\r\n            const defaultScaleOptions = chartDefaults.scales || {};\r\n            firstIDs[axis] = firstIDs[axis] || id;\r\n            scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\r\n        });\r\n        config.data.datasets.forEach(dataset => {\r\n            const type = dataset.type || config.type;\r\n            const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\r\n            const datasetDefaults = overrides[type] || {};\r\n            const defaultScaleOptions = datasetDefaults.scales || {};\r\n            Object.keys(defaultScaleOptions).forEach(defaultID => {\r\n                const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\r\n                const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\r\n                scales[id] = scales[id] || Object.create(null);\r\n                mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\r\n            });\r\n        });\r\n        Object.keys(scales).forEach(key => {\r\n            const scale = scales[key];\r\n            mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\r\n        });\r\n        return scales;\r\n    }\r\n\r\n    function initOptions(config) {\r\n        const options = config.options || (config.options = {});\r\n        options.plugins = valueOrDefault(options.plugins, {});\r\n        options.scales = mergeScaleConfig(config, options);\r\n    }\r\n\r\n    function initConfig(config) {\r\n        config = config || {};\r\n        const data = config.data = config.data || {datasets: [], labels: []};\r\n        data.datasets = data.datasets || [];\r\n        data.labels = data.labels || [];\r\n        initOptions(config);\r\n        return config;\r\n    }\r\n\r\n    const keyCache = new Map();\r\n    const keysCached = new Set();\r\n\r\n    function cachedKeys(cacheKey, generate) {\r\n        let keys = keyCache.get(cacheKey);\r\n        if (!keys) {\r\n            keys = generate();\r\n            keyCache.set(cacheKey, keys);\r\n            keysCached.add(keys);\r\n        }\r\n        return keys;\r\n    }\r\n\r\n    const addIfFound = (set, obj, key) => {\r\n        const opts = resolveObjectKey(obj, key);\r\n        if (opts !== undefined) {\r\n            set.add(opts);\r\n        }\r\n    };\r\n\r\n    class Config {\r\n        constructor(config) {\r\n            this._config = initConfig(config);\r\n            this._scopeCache = new Map();\r\n            this._resolverCache = new Map();\r\n        }\r\n\r\n        get type() {\r\n            return this._config.type;\r\n        }\r\n\r\n        set type(type) {\r\n            this._config.type = type;\r\n        }\r\n\r\n        get data() {\r\n            return this._config.data;\r\n        }\r\n\r\n        set data(data) {\r\n            this._config.data = data;\r\n        }\r\n\r\n        get options() {\r\n            return this._config.options;\r\n        }\r\n\r\n        set options(options) {\r\n            this._config.options = options;\r\n        }\r\n\r\n        get plugins() {\r\n            return this._config.plugins;\r\n        }\r\n\r\n        update() {\r\n            const config = this._config;\r\n            this.clearCache();\r\n            initOptions(config);\r\n        }\r\n\r\n        clearCache() {\r\n            this._scopeCache.clear();\r\n            this._resolverCache.clear();\r\n        }\r\n\r\n        datasetScopeKeys(datasetType) {\r\n            return cachedKeys(datasetType,\r\n                () => [[\r\n                    `datasets.${datasetType}`,\r\n                    ''\r\n                ]]);\r\n        }\r\n\r\n        datasetAnimationScopeKeys(datasetType, transition) {\r\n            return cachedKeys(`${datasetType}.transition.${transition}`,\r\n                () => [\r\n                    [\r\n                        `datasets.${datasetType}.transitions.${transition}`,\r\n                        `transitions.${transition}`,\r\n                    ],\r\n                    [\r\n                        `datasets.${datasetType}`,\r\n                        ''\r\n                    ]\r\n                ]);\r\n        }\r\n\r\n        datasetElementScopeKeys(datasetType, elementType) {\r\n            return cachedKeys(`${datasetType}-${elementType}`,\r\n                () => [[\r\n                    `datasets.${datasetType}.elements.${elementType}`,\r\n                    `datasets.${datasetType}`,\r\n                    `elements.${elementType}`,\r\n                    ''\r\n                ]]);\r\n        }\r\n\r\n        pluginScopeKeys(plugin) {\r\n            const id = plugin.id;\r\n            const type = this.type;\r\n            return cachedKeys(`${type}-plugin-${id}`,\r\n                () => [[\r\n                    `plugins.${id}`,\r\n                    ...plugin.additionalOptionScopes || [],\r\n                ]]);\r\n        }\r\n\r\n        _cachedScopes(mainScope, resetCache) {\r\n            const _scopeCache = this._scopeCache;\r\n            let cache = _scopeCache.get(mainScope);\r\n            if (!cache || resetCache) {\r\n                cache = new Map();\r\n                _scopeCache.set(mainScope, cache);\r\n            }\r\n            return cache;\r\n        }\r\n\r\n        getOptionScopes(mainScope, keyLists, resetCache) {\r\n            const {options, type} = this;\r\n            const cache = this._cachedScopes(mainScope, resetCache);\r\n            const cached = cache.get(keyLists);\r\n            if (cached) {\r\n                return cached;\r\n            }\r\n            const scopes = new Set();\r\n            keyLists.forEach(keys => {\r\n                if (mainScope) {\r\n                    scopes.add(mainScope);\r\n                    keys.forEach(key => addIfFound(scopes, mainScope, key));\r\n                }\r\n                keys.forEach(key => addIfFound(scopes, options, key));\r\n                keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\r\n                keys.forEach(key => addIfFound(scopes, defaults, key));\r\n                keys.forEach(key => addIfFound(scopes, descriptors, key));\r\n            });\r\n            const array = [...scopes];\r\n            if (keysCached.has(keyLists)) {\r\n                cache.set(keyLists, array);\r\n            }\r\n            return array;\r\n        }\r\n\r\n        chartOptionScopes() {\r\n            const {options, type} = this;\r\n            return [\r\n                options,\r\n                overrides[type] || {},\r\n                defaults.datasets[type] || {},\r\n                {type},\r\n                defaults,\r\n                descriptors\r\n            ];\r\n        }\r\n\r\n        resolveNamedOptions(scopes, names, context, prefixes = ['']) {\r\n            const result = {$shared: true};\r\n            const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\r\n            let options = resolver;\r\n            if (needContext(resolver, names)) {\r\n                result.$shared = false;\r\n                context = isFunction(context) ? context() : context;\r\n                const subResolver = this.createResolver(scopes, context, subPrefixes);\r\n                options = _attachContext(resolver, context, subResolver);\r\n            }\r\n            for (const prop of names) {\r\n                result[prop] = options[prop];\r\n            }\r\n            return result;\r\n        }\r\n\r\n        createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\r\n            const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\r\n            return isObject(context)\r\n                ? _attachContext(resolver, context, undefined, descriptorDefaults)\r\n                : resolver;\r\n        }\r\n    }\r\n\r\n    function getResolver(resolverCache, scopes, prefixes) {\r\n        let cache = resolverCache.get(scopes);\r\n        if (!cache) {\r\n            cache = new Map();\r\n            resolverCache.set(scopes, cache);\r\n        }\r\n        const cacheKey = prefixes.join();\r\n        let cached = cache.get(cacheKey);\r\n        if (!cached) {\r\n            const resolver = _createResolver(scopes, prefixes);\r\n            cached = {\r\n                resolver,\r\n                subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\r\n            };\r\n            cache.set(cacheKey, cached);\r\n        }\r\n        return cached;\r\n    }\r\n\r\n    function needContext(proxy, names) {\r\n        const {isScriptable, isIndexable} = _descriptors(proxy);\r\n        for (const prop of names) {\r\n            if ((isScriptable(prop) && isFunction(proxy[prop]))\r\n                || (isIndexable(prop) && isArray(proxy[prop]))) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    var version = \"3.0.1\";\r\n\r\n    const KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\r\n\r\n    function positionIsHorizontal(position, axis) {\r\n        return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\r\n    }\r\n\r\n    function compare2Level(l1, l2) {\r\n        return function (a, b) {\r\n            return a[l1] === b[l1]\r\n                ? a[l2] - b[l2]\r\n                : a[l1] - b[l1];\r\n        };\r\n    }\r\n\r\n    function onAnimationsComplete(context) {\r\n        const chart = context.chart;\r\n        const animationOptions = chart.options.animation;\r\n        chart.notifyPlugins('afterRender');\r\n        callback(animationOptions && animationOptions.onComplete, [context], chart);\r\n    }\r\n\r\n    function onAnimationProgress(context) {\r\n        const chart = context.chart;\r\n        const animationOptions = chart.options.animation;\r\n        callback(animationOptions && animationOptions.onProgress, [context], chart);\r\n    }\r\n\r\n    function isDomSupported() {\r\n        return typeof window !== 'undefined' && typeof document !== 'undefined';\r\n    }\r\n\r\n    function getCanvas(item) {\r\n        if (isDomSupported() && typeof item === 'string') {\r\n            item = document.getElementById(item);\r\n        } else if (item && item.length) {\r\n            item = item[0];\r\n        }\r\n        if (item && item.canvas) {\r\n            item = item.canvas;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    const instances = {};\r\n    const getChart = (key) => {\r\n        const canvas = getCanvas(key);\r\n        return Object.values(instances).filter((c) => c.canvas === canvas).pop();\r\n    };\r\n\r\n    class Chart {\r\n        constructor(item, config) {\r\n            const me = this;\r\n            this.config = config = new Config(config);\r\n            const initialCanvas = getCanvas(item);\r\n            const existingChart = getChart(initialCanvas);\r\n            if (existingChart) {\r\n                throw new Error(\r\n                    'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\r\n                    ' must be destroyed before the canvas can be reused.'\r\n                );\r\n            }\r\n            const options = config.createResolver(config.chartOptionScopes(), me.getContext());\r\n            this.platform = me._initializePlatform(initialCanvas, config);\r\n            const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\r\n            const canvas = context && context.canvas;\r\n            const height = canvas && canvas.height;\r\n            const width = canvas && canvas.width;\r\n            this.id = uid();\r\n            this.ctx = context;\r\n            this.canvas = canvas;\r\n            this.width = width;\r\n            this.height = height;\r\n            this._options = options;\r\n            this._aspectRatio = this.aspectRatio;\r\n            this._layers = [];\r\n            this._metasets = [];\r\n            this._stacks = undefined;\r\n            this.boxes = [];\r\n            this.currentDevicePixelRatio = undefined;\r\n            this.chartArea = undefined;\r\n            this._active = [];\r\n            this._lastEvent = undefined;\r\n            this._listeners = {};\r\n            this._sortedMetasets = [];\r\n            this.scales = {};\r\n            this.scale = undefined;\r\n            this._plugins = new PluginService();\r\n            this.$proxies = {};\r\n            this._hiddenIndices = {};\r\n            this.attached = false;\r\n            this._animationsDisabled = undefined;\r\n            this.$context = undefined;\r\n            this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\r\n            instances[me.id] = me;\r\n            if (!context || !canvas) {\r\n                console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n                return;\r\n            }\r\n            animator.listen(me, 'complete', onAnimationsComplete);\r\n            animator.listen(me, 'progress', onAnimationProgress);\r\n            me._initialize();\r\n            if (me.attached) {\r\n                me.update();\r\n            }\r\n        }\r\n\r\n        get aspectRatio() {\r\n            const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\r\n            if (!isNullOrUndef(aspectRatio)) {\r\n                return aspectRatio;\r\n            }\r\n            if (maintainAspectRatio && _aspectRatio) {\r\n                return _aspectRatio;\r\n            }\r\n            return height ? width / height : null;\r\n        }\r\n\r\n        get data() {\r\n            return this.config.data;\r\n        }\r\n\r\n        set data(data) {\r\n            this.config.data = data;\r\n        }\r\n\r\n        get options() {\r\n            return this._options;\r\n        }\r\n\r\n        set options(options) {\r\n            this.config.options = options;\r\n        }\r\n\r\n        _initialize() {\r\n            const me = this;\r\n            me.notifyPlugins('beforeInit');\r\n            if (me.options.responsive) {\r\n                me.resize();\r\n            } else {\r\n                retinaScale(me, me.options.devicePixelRatio);\r\n            }\r\n            me.bindEvents();\r\n            me.notifyPlugins('afterInit');\r\n            return me;\r\n        }\r\n\r\n        _initializePlatform(canvas, config) {\r\n            if (config.platform) {\r\n                return new config.platform();\r\n            } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\r\n                return new BasicPlatform();\r\n            }\r\n            return new DomPlatform();\r\n        }\r\n\r\n        clear() {\r\n            clearCanvas(this.canvas, this.ctx);\r\n            return this;\r\n        }\r\n\r\n        stop() {\r\n            animator.stop(this);\r\n            return this;\r\n        }\r\n\r\n        resize(width, height) {\r\n            if (!animator.running(this)) {\r\n                this._resize(width, height);\r\n            } else {\r\n                this._resizeBeforeDraw = {width, height};\r\n            }\r\n        }\r\n\r\n        _resize(width, height) {\r\n            const me = this;\r\n            const options = me.options;\r\n            const canvas = me.canvas;\r\n            const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\r\n            const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\r\n            const oldRatio = me.currentDevicePixelRatio;\r\n            const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\r\n            if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\r\n                return;\r\n            }\r\n            me.width = newSize.width;\r\n            me.height = newSize.height;\r\n            me._aspectRatio = me.aspectRatio;\r\n            retinaScale(me, newRatio, true);\r\n            me.notifyPlugins('resize', {size: newSize});\r\n            callback(options.onResize, [me, newSize], me);\r\n            if (me.attached) {\r\n                if (me._doResize()) {\r\n                    me.render();\r\n                }\r\n            }\r\n        }\r\n\r\n        ensureScalesHaveIDs() {\r\n            const options = this.options;\r\n            const scalesOptions = options.scales || {};\r\n            each(scalesOptions, (axisOptions, axisID) => {\r\n                axisOptions.id = axisID;\r\n            });\r\n        }\r\n\r\n        buildOrUpdateScales() {\r\n            const me = this;\r\n            const options = me.options;\r\n            const scaleOpts = options.scales;\r\n            const scales = me.scales;\r\n            const updated = Object.keys(scales).reduce((obj, id) => {\r\n                obj[id] = false;\r\n                return obj;\r\n            }, {});\r\n            let items = [];\r\n            if (scaleOpts) {\r\n                items = items.concat(\r\n                    Object.keys(scaleOpts).map((id) => {\r\n                        const scaleOptions = scaleOpts[id];\r\n                        const axis = determineAxis(id, scaleOptions);\r\n                        const isRadial = axis === 'r';\r\n                        const isHorizontal = axis === 'x';\r\n                        return {\r\n                            options: scaleOptions,\r\n                            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\r\n                            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\r\n                        };\r\n                    })\r\n                );\r\n            }\r\n            each(items, (item) => {\r\n                const scaleOptions = item.options;\r\n                const id = scaleOptions.id;\r\n                const axis = determineAxis(id, scaleOptions);\r\n                const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\r\n                if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\r\n                    scaleOptions.position = item.dposition;\r\n                }\r\n                updated[id] = true;\r\n                let scale = null;\r\n                if (id in scales && scales[id].type === scaleType) {\r\n                    scale = scales[id];\r\n                } else {\r\n                    const scaleClass = registry.getScale(scaleType);\r\n                    scale = new scaleClass({\r\n                        id,\r\n                        type: scaleType,\r\n                        ctx: me.ctx,\r\n                        chart: me\r\n                    });\r\n                    scales[scale.id] = scale;\r\n                }\r\n                scale.init(scaleOptions, options);\r\n            });\r\n            each(updated, (hasUpdated, id) => {\r\n                if (!hasUpdated) {\r\n                    delete scales[id];\r\n                }\r\n            });\r\n            each(scales, (scale) => {\r\n                layouts.configure(me, scale, scale.options);\r\n                layouts.addBox(me, scale);\r\n            });\r\n        }\r\n\r\n        _updateMetasetIndex(meta, index) {\r\n            const metasets = this._metasets;\r\n            const oldIndex = meta.index;\r\n            if (oldIndex !== index) {\r\n                metasets[oldIndex] = metasets[index];\r\n                metasets[index] = meta;\r\n                meta.index = index;\r\n            }\r\n        }\r\n\r\n        _updateMetasets() {\r\n            const me = this;\r\n            const metasets = me._metasets;\r\n            const numData = me.data.datasets.length;\r\n            const numMeta = metasets.length;\r\n            if (numMeta > numData) {\r\n                for (let i = numData; i < numMeta; ++i) {\r\n                    me._destroyDatasetMeta(i);\r\n                }\r\n                metasets.splice(numData, numMeta - numData);\r\n            }\r\n            me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\r\n        }\r\n\r\n        _removeUnreferencedMetasets() {\r\n            const me = this;\r\n            const {_metasets: metasets, data: {datasets}} = me;\r\n            if (metasets.length > datasets.length) {\r\n                delete me._stacks;\r\n            }\r\n            metasets.forEach((meta, index) => {\r\n                if (datasets.filter(x => x === meta._dataset).length === 0) {\r\n                    me._destroyDatasetMeta(index);\r\n                }\r\n            });\r\n        }\r\n\r\n        buildOrUpdateControllers() {\r\n            const me = this;\r\n            const newControllers = [];\r\n            const datasets = me.data.datasets;\r\n            let i, ilen;\r\n            me._removeUnreferencedMetasets();\r\n            for (i = 0, ilen = datasets.length; i < ilen; i++) {\r\n                const dataset = datasets[i];\r\n                let meta = me.getDatasetMeta(i);\r\n                const type = dataset.type || me.config.type;\r\n                if (meta.type && meta.type !== type) {\r\n                    me._destroyDatasetMeta(i);\r\n                    meta = me.getDatasetMeta(i);\r\n                }\r\n                meta.type = type;\r\n                meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\r\n                meta.order = dataset.order || 0;\r\n                me._updateMetasetIndex(meta, i);\r\n                meta.label = '' + dataset.label;\r\n                meta.visible = me.isDatasetVisible(i);\r\n                if (meta.controller) {\r\n                    meta.controller.updateIndex(i);\r\n                    meta.controller.linkScales();\r\n                } else {\r\n                    const ControllerClass = registry.getController(type);\r\n                    const {datasetElementType, dataElementType} = defaults.datasets[type];\r\n                    Object.assign(ControllerClass.prototype, {\r\n                        dataElementType: registry.getElement(dataElementType),\r\n                        datasetElementType: datasetElementType && registry.getElement(datasetElementType)\r\n                    });\r\n                    meta.controller = new ControllerClass(me, i);\r\n                    newControllers.push(meta.controller);\r\n                }\r\n            }\r\n            me._updateMetasets();\r\n            return newControllers;\r\n        }\r\n\r\n        _resetElements() {\r\n            const me = this;\r\n            each(me.data.datasets, (dataset, datasetIndex) => {\r\n                me.getDatasetMeta(datasetIndex).controller.reset();\r\n            }, me);\r\n        }\r\n\r\n        reset() {\r\n            this._resetElements();\r\n            this.notifyPlugins('reset');\r\n        }\r\n\r\n        update(mode) {\r\n            const me = this;\r\n            const config = me.config;\r\n            config.update();\r\n            me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\r\n            each(me.scales, (scale) => {\r\n                layouts.removeBox(me, scale);\r\n            });\r\n            const animsDisabled = me._animationsDisabled = !me.options.animation;\r\n            me.ensureScalesHaveIDs();\r\n            me.buildOrUpdateScales();\r\n            me._plugins.invalidate();\r\n            if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\r\n                return;\r\n            }\r\n            const newControllers = me.buildOrUpdateControllers();\r\n            me.notifyPlugins('beforeElementsUpdate');\r\n            let minPadding = 0;\r\n            for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\r\n                const {controller} = me.getDatasetMeta(i);\r\n                const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\r\n                controller.buildOrUpdateElements(reset);\r\n                minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\r\n            }\r\n            me._minPadding = minPadding;\r\n            me._updateLayout(minPadding);\r\n            if (!animsDisabled) {\r\n                each(newControllers, (controller) => {\r\n                    controller.reset();\r\n                });\r\n            }\r\n            me._updateDatasets(mode);\r\n            me.notifyPlugins('afterUpdate', {mode});\r\n            me._layers.sort(compare2Level('z', '_idx'));\r\n            if (me._lastEvent) {\r\n                me._eventHandler(me._lastEvent, true);\r\n            }\r\n            me.render();\r\n        }\r\n\r\n        _updateLayout(minPadding) {\r\n            const me = this;\r\n            if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\r\n                return;\r\n            }\r\n            layouts.update(me, me.width, me.height, minPadding);\r\n            const area = me.chartArea;\r\n            const noArea = area.width <= 0 || area.height <= 0;\r\n            me._layers = [];\r\n            each(me.boxes, (box) => {\r\n                if (noArea && box.position === 'chartArea') {\r\n                    return;\r\n                }\r\n                if (box.configure) {\r\n                    box.configure();\r\n                }\r\n                me._layers.push(...box._layers());\r\n            }, me);\r\n            me._layers.forEach((item, index) => {\r\n                item._idx = index;\r\n            });\r\n            me.notifyPlugins('afterLayout');\r\n        }\r\n\r\n        _updateDatasets(mode) {\r\n            const me = this;\r\n            const isFunction = typeof mode === 'function';\r\n            if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\r\n                return;\r\n            }\r\n            for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\r\n            }\r\n            me.notifyPlugins('afterDatasetsUpdate', {mode});\r\n        }\r\n\r\n        _updateDataset(index, mode) {\r\n            const me = this;\r\n            const meta = me.getDatasetMeta(index);\r\n            const args = {meta, index, mode, cancelable: true};\r\n            if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\r\n                return;\r\n            }\r\n            meta.controller._update(mode);\r\n            args.cancelable = false;\r\n            me.notifyPlugins('afterDatasetUpdate', args);\r\n        }\r\n\r\n        render() {\r\n            const me = this;\r\n            if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\r\n                return;\r\n            }\r\n            if (animator.has(me)) {\r\n                if (me.attached && !animator.running(me)) {\r\n                    animator.start(me);\r\n                }\r\n            } else {\r\n                me.draw();\r\n                onAnimationsComplete({chart: me});\r\n            }\r\n        }\r\n\r\n        draw() {\r\n            const me = this;\r\n            let i;\r\n            if (me._resizeBeforeDraw) {\r\n                const {width, height} = me._resizeBeforeDraw;\r\n                me._resize(width, height);\r\n                me._resizeBeforeDraw = null;\r\n            }\r\n            me.clear();\r\n            if (me.width <= 0 || me.height <= 0) {\r\n                return;\r\n            }\r\n            if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\r\n                return;\r\n            }\r\n            const layers = me._layers;\r\n            for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\r\n                layers[i].draw(me.chartArea);\r\n            }\r\n            me._drawDatasets();\r\n            for (; i < layers.length; ++i) {\r\n                layers[i].draw(me.chartArea);\r\n            }\r\n            me.notifyPlugins('afterDraw');\r\n        }\r\n\r\n        _getSortedDatasetMetas(filterVisible) {\r\n            const me = this;\r\n            const metasets = me._sortedMetasets;\r\n            const result = [];\r\n            let i, ilen;\r\n            for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n                const meta = metasets[i];\r\n                if (!filterVisible || meta.visible) {\r\n                    result.push(meta);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        getSortedVisibleDatasetMetas() {\r\n            return this._getSortedDatasetMetas(true);\r\n        }\r\n\r\n        _drawDatasets() {\r\n            const me = this;\r\n            if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\r\n                return;\r\n            }\r\n            const metasets = me.getSortedVisibleDatasetMetas();\r\n            for (let i = metasets.length - 1; i >= 0; --i) {\r\n                me._drawDataset(metasets[i]);\r\n            }\r\n            me.notifyPlugins('afterDatasetsDraw');\r\n        }\r\n\r\n        _drawDataset(meta) {\r\n            const me = this;\r\n            const ctx = me.ctx;\r\n            const clip = meta._clip;\r\n            const area = me.chartArea;\r\n            const args = {\r\n                meta,\r\n                index: meta.index,\r\n                cancelable: true\r\n            };\r\n            if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\r\n                return;\r\n            }\r\n            clipArea(ctx, {\r\n                left: clip.left === false ? 0 : area.left - clip.left,\r\n                right: clip.right === false ? me.width : area.right + clip.right,\r\n                top: clip.top === false ? 0 : area.top - clip.top,\r\n                bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\r\n            });\r\n            meta.controller.draw();\r\n            unclipArea(ctx);\r\n            args.cancelable = false;\r\n            me.notifyPlugins('afterDatasetDraw', args);\r\n        }\r\n\r\n        getElementsAtEventForMode(e, mode, options, useFinalPosition) {\r\n            const method = Interaction.modes[mode];\r\n            if (typeof method === 'function') {\r\n                return method(this, e, options, useFinalPosition);\r\n            }\r\n            return [];\r\n        }\r\n\r\n        getDatasetMeta(datasetIndex) {\r\n            const me = this;\r\n            const dataset = me.data.datasets[datasetIndex];\r\n            const metasets = me._metasets;\r\n            let meta = metasets.filter(x => x && x._dataset === dataset).pop();\r\n            if (!meta) {\r\n                meta = metasets[datasetIndex] = {\r\n                    type: null,\r\n                    data: [],\r\n                    dataset: null,\r\n                    controller: null,\r\n                    hidden: null,\r\n                    xAxisID: null,\r\n                    yAxisID: null,\r\n                    order: dataset && dataset.order || 0,\r\n                    index: datasetIndex,\r\n                    _dataset: dataset,\r\n                    _parsed: [],\r\n                    _sorted: false\r\n                };\r\n            }\r\n            return meta;\r\n        }\r\n\r\n        getContext() {\r\n            return this.$context || (this.$context = {chart: this, type: 'chart'});\r\n        }\r\n\r\n        getVisibleDatasetCount() {\r\n            return this.getSortedVisibleDatasetMetas().length;\r\n        }\r\n\r\n        isDatasetVisible(datasetIndex) {\r\n            const dataset = this.data.datasets[datasetIndex];\r\n            if (!dataset) {\r\n                return false;\r\n            }\r\n            const meta = this.getDatasetMeta(datasetIndex);\r\n            return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\r\n        }\r\n\r\n        setDatasetVisibility(datasetIndex, visible) {\r\n            const meta = this.getDatasetMeta(datasetIndex);\r\n            meta.hidden = !visible;\r\n        }\r\n\r\n        toggleDataVisibility(index) {\r\n            this._hiddenIndices[index] = !this._hiddenIndices[index];\r\n        }\r\n\r\n        getDataVisibility(index) {\r\n            return !this._hiddenIndices[index];\r\n        }\r\n\r\n        _updateDatasetVisibility(datasetIndex, visible) {\r\n            const me = this;\r\n            const mode = visible ? 'show' : 'hide';\r\n            const meta = me.getDatasetMeta(datasetIndex);\r\n            const anims = meta.controller._resolveAnimations(undefined, mode);\r\n            me.setDatasetVisibility(datasetIndex, visible);\r\n            anims.update(meta, {visible});\r\n            me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\r\n        }\r\n\r\n        hide(datasetIndex) {\r\n            this._updateDatasetVisibility(datasetIndex, false);\r\n        }\r\n\r\n        show(datasetIndex) {\r\n            this._updateDatasetVisibility(datasetIndex, true);\r\n        }\r\n\r\n        _destroyDatasetMeta(datasetIndex) {\r\n            const me = this;\r\n            const meta = me._metasets && me._metasets[datasetIndex];\r\n            if (meta && meta.controller) {\r\n                meta.controller._destroy();\r\n                delete me._metasets[datasetIndex];\r\n            }\r\n        }\r\n\r\n        destroy() {\r\n            const me = this;\r\n            const {canvas, ctx} = me;\r\n            let i, ilen;\r\n            me.stop();\r\n            animator.remove(me);\r\n            for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                me._destroyDatasetMeta(i);\r\n            }\r\n            me.config.clearCache();\r\n            if (canvas) {\r\n                me.unbindEvents();\r\n                clearCanvas(canvas, ctx);\r\n                me.platform.releaseContext(ctx);\r\n                me.canvas = null;\r\n                me.ctx = null;\r\n            }\r\n            me.notifyPlugins('destroy');\r\n            delete instances[me.id];\r\n        }\r\n\r\n        toBase64Image(...args) {\r\n            return this.canvas.toDataURL(...args);\r\n        }\r\n\r\n        bindEvents() {\r\n            const me = this;\r\n            const listeners = me._listeners;\r\n            const platform = me.platform;\r\n            const _add = (type, listener) => {\r\n                platform.addEventListener(me, type, listener);\r\n                listeners[type] = listener;\r\n            };\r\n            const _remove = (type, listener) => {\r\n                if (listeners[type]) {\r\n                    platform.removeEventListener(me, type, listener);\r\n                    delete listeners[type];\r\n                }\r\n            };\r\n            let listener = function (e, x, y) {\r\n                e.offsetX = x;\r\n                e.offsetY = y;\r\n                me._eventHandler(e);\r\n            };\r\n            each(me.options.events, (type) => _add(type, listener));\r\n            if (me.options.responsive) {\r\n                listener = (width, height) => {\r\n                    if (me.canvas) {\r\n                        me.resize(width, height);\r\n                    }\r\n                };\r\n                let detached;\r\n                const attached = () => {\r\n                    _remove('attach', attached);\r\n                    me.attached = true;\r\n                    me.resize();\r\n                    _add('resize', listener);\r\n                    _add('detach', detached);\r\n                };\r\n                detached = () => {\r\n                    me.attached = false;\r\n                    _remove('resize', listener);\r\n                    _add('attach', attached);\r\n                };\r\n                if (platform.isAttached(me.canvas)) {\r\n                    attached();\r\n                } else {\r\n                    detached();\r\n                }\r\n            } else {\r\n                me.attached = true;\r\n            }\r\n        }\r\n\r\n        unbindEvents() {\r\n            const me = this;\r\n            const listeners = me._listeners;\r\n            if (!listeners) {\r\n                return;\r\n            }\r\n            delete me._listeners;\r\n            each(listeners, (listener, type) => {\r\n                me.platform.removeEventListener(me, type, listener);\r\n            });\r\n        }\r\n\r\n        updateHoverStyle(items, mode, enabled) {\r\n            const prefix = enabled ? 'set' : 'remove';\r\n            let meta, item, i, ilen;\r\n            if (mode === 'dataset') {\r\n                meta = this.getDatasetMeta(items[0].datasetIndex);\r\n                meta.controller['_' + prefix + 'DatasetHoverStyle']();\r\n            }\r\n            for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n                item = items[i];\r\n                const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\r\n                if (controller) {\r\n                    controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\r\n                }\r\n            }\r\n        }\r\n\r\n        getActiveElements() {\r\n            return this._active || [];\r\n        }\r\n\r\n        setActiveElements(activeElements) {\r\n            const me = this;\r\n            const lastActive = me._active || [];\r\n            const active = activeElements.map(({datasetIndex, index}) => {\r\n                const meta = me.getDatasetMeta(datasetIndex);\r\n                if (!meta) {\r\n                    throw new Error('No dataset found at index ' + datasetIndex);\r\n                }\r\n                return {\r\n                    datasetIndex,\r\n                    element: meta.data[index],\r\n                    index,\r\n                };\r\n            });\r\n            const changed = !_elementsEqual(active, lastActive);\r\n            if (changed) {\r\n                me._active = active;\r\n                me._updateHoverStyles(active, lastActive);\r\n            }\r\n        }\r\n\r\n        notifyPlugins(hook, args) {\r\n            return this._plugins.notify(this, hook, args);\r\n        }\r\n\r\n        _updateHoverStyles(active, lastActive, replay) {\r\n            const me = this;\r\n            const hoverOptions = me.options.hover;\r\n            const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\r\n            const deactivated = diff(lastActive, active);\r\n            const activated = replay ? active : diff(active, lastActive);\r\n            if (deactivated.length) {\r\n                me.updateHoverStyle(deactivated, hoverOptions.mode, false);\r\n            }\r\n            if (activated.length && hoverOptions.mode) {\r\n                me.updateHoverStyle(activated, hoverOptions.mode, true);\r\n            }\r\n        }\r\n\r\n        _eventHandler(e, replay) {\r\n            const me = this;\r\n            const args = {event: e, replay, cancelable: true};\r\n            if (me.notifyPlugins('beforeEvent', args) === false) {\r\n                return;\r\n            }\r\n            const changed = me._handleEvent(e, replay);\r\n            args.cancelable = false;\r\n            me.notifyPlugins('afterEvent', args);\r\n            if (changed || args.changed) {\r\n                me.render();\r\n            }\r\n            return me;\r\n        }\r\n\r\n        _handleEvent(e, replay) {\r\n            const me = this;\r\n            const {_active: lastActive = [], options} = me;\r\n            const hoverOptions = options.hover;\r\n            const useFinalPosition = replay;\r\n            let active = [];\r\n            let changed = false;\r\n            let lastEvent = null;\r\n            if (e.type !== 'mouseout') {\r\n                active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\r\n                lastEvent = e.type === 'click' ? me._lastEvent : e;\r\n            }\r\n            me._lastEvent = null;\r\n            callback(options.onHover, [e, active, me], me);\r\n            if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\r\n                if (_isPointInArea(e, me.chartArea, me._minPadding)) {\r\n                    callback(options.onClick, [e, active, me], me);\r\n                }\r\n            }\r\n            changed = !_elementsEqual(active, lastActive);\r\n            if (changed || replay) {\r\n                me._active = active;\r\n                me._updateHoverStyles(active, lastActive, replay);\r\n            }\r\n            me._lastEvent = lastEvent;\r\n            return changed;\r\n        }\r\n    }\r\n\r\n    const invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\r\n    const enumerable = true;\r\n    Object.defineProperties(Chart, {\r\n        defaults: {\r\n            enumerable,\r\n            value: defaults\r\n        },\r\n        instances: {\r\n            enumerable,\r\n            value: instances\r\n        },\r\n        overrides: {\r\n            enumerable,\r\n            value: overrides\r\n        },\r\n        registry: {\r\n            enumerable,\r\n            value: registry\r\n        },\r\n        version: {\r\n            enumerable,\r\n            value: version\r\n        },\r\n        getChart: {\r\n            enumerable,\r\n            value: getChart\r\n        },\r\n        register: {\r\n            enumerable,\r\n            value: (...items) => {\r\n                registry.add(...items);\r\n                invalidatePlugins();\r\n            }\r\n        },\r\n        unregister: {\r\n            enumerable,\r\n            value: (...items) => {\r\n                registry.remove(...items);\r\n                invalidatePlugins();\r\n            }\r\n        }\r\n    });\r\n\r\n    function abstract() {\r\n        throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\r\n    }\r\n\r\n    class DateAdapter {\r\n        constructor(options) {\r\n            this.options = options || {};\r\n        }\r\n\r\n        formats() {\r\n            return abstract();\r\n        }\r\n\r\n        parse(value, format) {\r\n            return abstract();\r\n        }\r\n\r\n        format(timestamp, format) {\r\n            return abstract();\r\n        }\r\n\r\n        add(timestamp, amount, unit) {\r\n            return abstract();\r\n        }\r\n\r\n        diff(a, b, unit) {\r\n            return abstract();\r\n        }\r\n\r\n        startOf(timestamp, unit, weekday) {\r\n            return abstract();\r\n        }\r\n\r\n        endOf(timestamp, unit) {\r\n            return abstract();\r\n        }\r\n    }\r\n\r\n    DateAdapter.override = function (members) {\r\n        Object.assign(DateAdapter.prototype, members);\r\n    };\r\n    var _adapters = {\r\n        _date: DateAdapter\r\n    };\r\n\r\n    function getAllScaleValues(scale) {\r\n        if (!scale._cache.$bar) {\r\n            const metas = scale.getMatchingVisibleMetas('bar');\r\n            let values = [];\r\n            for (let i = 0, ilen = metas.length; i < ilen; i++) {\r\n                values = values.concat(metas[i].controller.getAllParsedValues(scale));\r\n            }\r\n            scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\r\n        }\r\n        return scale._cache.$bar;\r\n    }\r\n\r\n    function computeMinSampleSize(scale) {\r\n        const values = getAllScaleValues(scale);\r\n        let min = scale._length;\r\n        let i, ilen, curr, prev;\r\n        const updateMinAndPrev = () => {\r\n            min = Math.min(min, i && Math.abs(curr - prev) || min);\r\n            prev = curr;\r\n        };\r\n        for (i = 0, ilen = values.length; i < ilen; ++i) {\r\n            curr = scale.getPixelForValue(values[i]);\r\n            updateMinAndPrev();\r\n        }\r\n        for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\r\n            curr = scale.getPixelForTick(i);\r\n            updateMinAndPrev();\r\n        }\r\n        return min;\r\n    }\r\n\r\n    function computeFitCategoryTraits(index, ruler, options, stackCount) {\r\n        const thickness = options.barThickness;\r\n        let size, ratio;\r\n        if (isNullOrUndef(thickness)) {\r\n            size = ruler.min * options.categoryPercentage;\r\n            ratio = options.barPercentage;\r\n        } else {\r\n            size = thickness * stackCount;\r\n            ratio = 1;\r\n        }\r\n        return {\r\n            chunk: size / stackCount,\r\n            ratio,\r\n            start: ruler.pixels[index] - (size / 2)\r\n        };\r\n    }\r\n\r\n    function computeFlexCategoryTraits(index, ruler, options, stackCount) {\r\n        const pixels = ruler.pixels;\r\n        const curr = pixels[index];\r\n        let prev = index > 0 ? pixels[index - 1] : null;\r\n        let next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n        const percent = options.categoryPercentage;\r\n        if (prev === null) {\r\n            prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\r\n        }\r\n        if (next === null) {\r\n            next = curr + curr - prev;\r\n        }\r\n        const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\r\n        const size = Math.abs(next - prev) / 2 * percent;\r\n        return {\r\n            chunk: size / stackCount,\r\n            ratio: options.barPercentage,\r\n            start\r\n        };\r\n    }\r\n\r\n    function parseFloatBar(entry, item, vScale, i) {\r\n        const startValue = vScale.parse(entry[0], i);\r\n        const endValue = vScale.parse(entry[1], i);\r\n        const min = Math.min(startValue, endValue);\r\n        const max = Math.max(startValue, endValue);\r\n        let barStart = min;\r\n        let barEnd = max;\r\n        if (Math.abs(min) > Math.abs(max)) {\r\n            barStart = max;\r\n            barEnd = min;\r\n        }\r\n        item[vScale.axis] = barEnd;\r\n        item._custom = {\r\n            barStart,\r\n            barEnd,\r\n            start: startValue,\r\n            end: endValue,\r\n            min,\r\n            max\r\n        };\r\n    }\r\n\r\n    function parseValue(entry, item, vScale, i) {\r\n        if (isArray(entry)) {\r\n            parseFloatBar(entry, item, vScale, i);\r\n        } else {\r\n            item[vScale.axis] = vScale.parse(entry, i);\r\n        }\r\n        return item;\r\n    }\r\n\r\n    function parseArrayOrPrimitive(meta, data, start, count) {\r\n        const iScale = meta.iScale;\r\n        const vScale = meta.vScale;\r\n        const labels = iScale.getLabels();\r\n        const singleScale = iScale === vScale;\r\n        const parsed = [];\r\n        let i, ilen, item, entry;\r\n        for (i = start, ilen = start + count; i < ilen; ++i) {\r\n            entry = data[i];\r\n            item = {};\r\n            item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\r\n            parsed.push(parseValue(entry, item, vScale, i));\r\n        }\r\n        return parsed;\r\n    }\r\n\r\n    function isFloatBar(custom) {\r\n        return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\r\n    }\r\n\r\n    class BarController extends DatasetController {\r\n        parsePrimitiveData(meta, data, start, count) {\r\n            return parseArrayOrPrimitive(meta, data, start, count);\r\n        }\r\n\r\n        parseArrayData(meta, data, start, count) {\r\n            return parseArrayOrPrimitive(meta, data, start, count);\r\n        }\r\n\r\n        parseObjectData(meta, data, start, count) {\r\n            const {iScale, vScale} = meta;\r\n            const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n            const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n            const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n            const parsed = [];\r\n            let i, ilen, item, obj;\r\n            for (i = start, ilen = start + count; i < ilen; ++i) {\r\n                obj = data[i];\r\n                item = {};\r\n                item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\r\n                parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\r\n            }\r\n            return parsed;\r\n        }\r\n\r\n        updateRangeFromParsed(range, scale, parsed, stack) {\r\n            super.updateRangeFromParsed(range, scale, parsed, stack);\r\n            const custom = parsed._custom;\r\n            if (custom && scale === this._cachedMeta.vScale) {\r\n                range.min = Math.min(range.min, custom.min);\r\n                range.max = Math.max(range.max, custom.max);\r\n            }\r\n        }\r\n\r\n        getLabelAndValue(index) {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            const {iScale, vScale} = meta;\r\n            const parsed = me.getParsed(index);\r\n            const custom = parsed._custom;\r\n            const value = isFloatBar(custom)\r\n                ? '[' + custom.start + ', ' + custom.end + ']'\r\n                : '' + vScale.getLabelForValue(parsed[vScale.axis]);\r\n            return {\r\n                label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\r\n                value\r\n            };\r\n        }\r\n\r\n        initialize() {\r\n            const me = this;\r\n            me.enableOptionSharing = true;\r\n            super.initialize();\r\n            const meta = me._cachedMeta;\r\n            meta.stack = me.getDataset().stack;\r\n        }\r\n\r\n        update(mode) {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            me.updateElements(meta.data, 0, meta.data.length, mode);\r\n        }\r\n\r\n        updateElements(bars, start, count, mode) {\r\n            const me = this;\r\n            const reset = mode === 'reset';\r\n            const vScale = me._cachedMeta.vScale;\r\n            const base = vScale.getBasePixel();\r\n            const horizontal = vScale.isHorizontal();\r\n            const ruler = me._getRuler();\r\n            const firstOpts = me.resolveDataElementOptions(start, mode);\r\n            const sharedOptions = me.getSharedOptions(firstOpts);\r\n            const includeOptions = me.includeOptions(mode, sharedOptions);\r\n            me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n            for (let i = start; i < start + count; i++) {\r\n                const vpixels = reset ? {base, head: base} : me._calculateBarValuePixels(i);\r\n                const ipixels = me._calculateBarIndexPixels(i, ruler);\r\n                const properties = {\r\n                    horizontal,\r\n                    base: vpixels.base,\r\n                    x: horizontal ? vpixels.head : ipixels.center,\r\n                    y: horizontal ? ipixels.center : vpixels.head,\r\n                    height: horizontal ? ipixels.size : undefined,\r\n                    width: horizontal ? undefined : ipixels.size\r\n                };\r\n                if (includeOptions) {\r\n                    properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\r\n                }\r\n                me.updateElement(bars[i], i, properties, mode);\r\n            }\r\n        }\r\n\r\n        _getStacks(last, dataIndex) {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            const iScale = meta.iScale;\r\n            const metasets = iScale.getMatchingVisibleMetas(me._type);\r\n            const stacked = iScale.options.stacked;\r\n            const ilen = metasets.length;\r\n            const stacks = [];\r\n            let i, item;\r\n            for (i = 0; i < ilen; ++i) {\r\n                item = metasets[i];\r\n                if (typeof dataIndex !== 'undefined') {\r\n                    const val = item.controller.getParsed(dataIndex)[\r\n                        item.controller._cachedMeta.vScale.axis\r\n                        ];\r\n                    if (isNullOrUndef(val) || isNaN(val)) {\r\n                        continue;\r\n                    }\r\n                }\r\n                if (stacked === false || stacks.indexOf(item.stack) === -1 ||\r\n                    (stacked === undefined && item.stack === undefined)) {\r\n                    stacks.push(item.stack);\r\n                }\r\n                if (item.index === last) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!stacks.length) {\r\n                stacks.push(undefined);\r\n            }\r\n            return stacks;\r\n        }\r\n\r\n        _getStackCount(index) {\r\n            return this._getStacks(undefined, index).length;\r\n        }\r\n\r\n        _getStackIndex(datasetIndex, name) {\r\n            const stacks = this._getStacks(datasetIndex);\r\n            const index = (name !== undefined)\r\n                ? stacks.indexOf(name)\r\n                : -1;\r\n            return (index === -1)\r\n                ? stacks.length - 1\r\n                : index;\r\n        }\r\n\r\n        _getRuler() {\r\n            const me = this;\r\n            const opts = me.options;\r\n            const meta = me._cachedMeta;\r\n            const iScale = meta.iScale;\r\n            const pixels = [];\r\n            let i, ilen;\r\n            for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\r\n                pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\r\n            }\r\n            const barThickness = opts.barThickness;\r\n            const min = barThickness || computeMinSampleSize(iScale);\r\n            return {\r\n                min,\r\n                pixels,\r\n                start: iScale._startPixel,\r\n                end: iScale._endPixel,\r\n                stackCount: me._getStackCount(),\r\n                scale: iScale,\r\n                grouped: opts.grouped,\r\n                ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\r\n            };\r\n        }\r\n\r\n        _calculateBarValuePixels(index) {\r\n            const me = this;\r\n            const {vScale, _stacked} = me._cachedMeta;\r\n            const {base: baseValue, minBarLength} = me.options;\r\n            const parsed = me.getParsed(index);\r\n            const custom = parsed._custom;\r\n            const floating = isFloatBar(custom);\r\n            let value = parsed[vScale.axis];\r\n            let start = 0;\r\n            let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\r\n            let head, size;\r\n            if (length !== value) {\r\n                start = length - value;\r\n                length = value;\r\n            }\r\n            if (floating) {\r\n                value = custom.barStart;\r\n                length = custom.barEnd - custom.barStart;\r\n                if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\r\n                    start = 0;\r\n                }\r\n                start += value;\r\n            }\r\n            const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\r\n            let base = vScale.getPixelForValue(startValue);\r\n            if (this.chart.getDataVisibility(index)) {\r\n                head = vScale.getPixelForValue(start + length);\r\n            } else {\r\n                head = base;\r\n            }\r\n            size = head - base;\r\n            if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\r\n                size = size < 0 ? -minBarLength : minBarLength;\r\n                if (value === 0) {\r\n                    base -= size / 2;\r\n                }\r\n                head = base + size;\r\n            }\r\n            const actualBase = baseValue || 0;\r\n            if (base === vScale.getPixelForValue(actualBase)) {\r\n                const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\r\n                if (size > 0) {\r\n                    base += halfGrid;\r\n                    size -= halfGrid;\r\n                } else if (size < 0) {\r\n                    base -= halfGrid;\r\n                    size += halfGrid;\r\n                }\r\n            }\r\n            return {\r\n                size,\r\n                base,\r\n                head,\r\n                center: head + size / 2\r\n            };\r\n        }\r\n\r\n        _calculateBarIndexPixels(index, ruler) {\r\n            const me = this;\r\n            const scale = ruler.scale;\r\n            const options = me.options;\r\n            const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\r\n            let center, size;\r\n            if (ruler.grouped) {\r\n                const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\r\n                const range = options.barThickness === 'flex'\r\n                    ? computeFlexCategoryTraits(index, ruler, options, stackCount)\r\n                    : computeFitCategoryTraits(index, ruler, options, stackCount);\r\n                const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\r\n                center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n                size = Math.min(maxBarThickness, range.chunk * range.ratio);\r\n            } else {\r\n                center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\r\n                size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\r\n            }\r\n            return {\r\n                base: center - size / 2,\r\n                head: center + size / 2,\r\n                center,\r\n                size\r\n            };\r\n        }\r\n\r\n        draw() {\r\n            const me = this;\r\n            const chart = me.chart;\r\n            const meta = me._cachedMeta;\r\n            const vScale = meta.vScale;\r\n            const rects = meta.data;\r\n            const ilen = rects.length;\r\n            let i = 0;\r\n            clipArea(chart.ctx, chart.chartArea);\r\n            for (; i < ilen; ++i) {\r\n                if (me.getParsed(i)[vScale.axis] !== null) {\r\n                    rects[i].draw(me._ctx);\r\n                }\r\n            }\r\n            unclipArea(chart.ctx);\r\n        }\r\n    }\r\n\r\n    BarController.id = 'bar';\r\n    BarController.defaults = {\r\n        datasetElementType: false,\r\n        dataElementType: 'bar',\r\n        categoryPercentage: 0.8,\r\n        barPercentage: 0.9,\r\n        grouped: true,\r\n        animations: {\r\n            numbers: {\r\n                type: 'number',\r\n                properties: ['x', 'y', 'base', 'width', 'height']\r\n            }\r\n        }\r\n    };\r\n    BarController.overrides = {\r\n        interaction: {\r\n            mode: 'index'\r\n        },\r\n        scales: {\r\n            _index_: {\r\n                type: 'category',\r\n                offset: true,\r\n                grid: {\r\n                    offset: true\r\n                }\r\n            },\r\n            _value_: {\r\n                type: 'linear',\r\n                beginAtZero: true,\r\n            }\r\n        }\r\n    };\r\n\r\n    class BubbleController extends DatasetController {\r\n        initialize() {\r\n            this.enableOptionSharing = true;\r\n            super.initialize();\r\n        }\r\n\r\n        parseObjectData(meta, data, start, count) {\r\n            const {xScale, yScale} = meta;\r\n            const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n            const parsed = [];\r\n            let i, ilen, item;\r\n            for (i = start, ilen = start + count; i < ilen; ++i) {\r\n                item = data[i];\r\n                parsed.push({\r\n                    x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\r\n                    y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\r\n                    _custom: item && item.r && +item.r\r\n                });\r\n            }\r\n            return parsed;\r\n        }\r\n\r\n        getMaxOverflow() {\r\n            const {data, _parsed} = this._cachedMeta;\r\n            let max = 0;\r\n            for (let i = data.length - 1; i >= 0; --i) {\r\n                max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\r\n            }\r\n            return max > 0 && max;\r\n        }\r\n\r\n        getLabelAndValue(index) {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            const {xScale, yScale} = meta;\r\n            const parsed = me.getParsed(index);\r\n            const x = xScale.getLabelForValue(parsed.x);\r\n            const y = yScale.getLabelForValue(parsed.y);\r\n            const r = parsed._custom;\r\n            return {\r\n                label: meta.label,\r\n                value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\r\n            };\r\n        }\r\n\r\n        update(mode) {\r\n            const me = this;\r\n            const points = me._cachedMeta.data;\r\n            me.updateElements(points, 0, points.length, mode);\r\n        }\r\n\r\n        updateElements(points, start, count, mode) {\r\n            const me = this;\r\n            const reset = mode === 'reset';\r\n            const {xScale, yScale} = me._cachedMeta;\r\n            const firstOpts = me.resolveDataElementOptions(start, mode);\r\n            const sharedOptions = me.getSharedOptions(firstOpts);\r\n            const includeOptions = me.includeOptions(mode, sharedOptions);\r\n            for (let i = start; i < start + count; i++) {\r\n                const point = points[i];\r\n                const parsed = !reset && me.getParsed(i);\r\n                const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\r\n                const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\r\n                const properties = {\r\n                    x,\r\n                    y,\r\n                    skip: isNaN(x) || isNaN(y)\r\n                };\r\n                if (includeOptions) {\r\n                    properties.options = me.resolveDataElementOptions(i, mode);\r\n                    if (reset) {\r\n                        properties.options.radius = 0;\r\n                    }\r\n                }\r\n                me.updateElement(point, i, properties, mode);\r\n            }\r\n            me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n        }\r\n\r\n        resolveDataElementOptions(index, mode) {\r\n            const parsed = this.getParsed(index);\r\n            let values = super.resolveDataElementOptions(index, mode);\r\n            if (values.$shared) {\r\n                values = Object.assign({}, values, {$shared: false});\r\n            }\r\n            const radius = values.radius;\r\n            if (mode !== 'active') {\r\n                values.radius = 0;\r\n            }\r\n            values.radius += valueOrDefault(parsed && parsed._custom, radius);\r\n            return values;\r\n        }\r\n    }\r\n\r\n    BubbleController.id = 'bubble';\r\n    BubbleController.defaults = {\r\n        datasetElementType: false,\r\n        dataElementType: 'point',\r\n        animations: {\r\n            numbers: {\r\n                type: 'number',\r\n                properties: ['x', 'y', 'borderWidth', 'radius']\r\n            }\r\n        }\r\n    };\r\n    BubbleController.overrides = {\r\n        scales: {\r\n            x: {\r\n                type: 'linear'\r\n            },\r\n            y: {\r\n                type: 'linear'\r\n            }\r\n        },\r\n        plugins: {\r\n            tooltip: {\r\n                callbacks: {\r\n                    title() {\r\n                        return '';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    function getRatioAndOffset(rotation, circumference, cutout) {\r\n        let ratioX = 1;\r\n        let ratioY = 1;\r\n        let offsetX = 0;\r\n        let offsetY = 0;\r\n        if (circumference < TAU) {\r\n            const startAngle = rotation;\r\n            const endAngle = startAngle + circumference;\r\n            const startX = Math.cos(startAngle);\r\n            const startY = Math.sin(startAngle);\r\n            const endX = Math.cos(endAngle);\r\n            const endY = Math.sin(endAngle);\r\n            const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\r\n            const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\r\n            const maxX = calcMax(0, startX, endX);\r\n            const maxY = calcMax(HALF_PI, startY, endY);\r\n            const minX = calcMin(PI, startX, endX);\r\n            const minY = calcMin(PI + HALF_PI, startY, endY);\r\n            ratioX = (maxX - minX) / 2;\r\n            ratioY = (maxY - minY) / 2;\r\n            offsetX = -(maxX + minX) / 2;\r\n            offsetY = -(maxY + minY) / 2;\r\n        }\r\n        return {ratioX, ratioY, offsetX, offsetY};\r\n    }\r\n\r\n    class DoughnutController extends DatasetController {\r\n        constructor(chart, datasetIndex) {\r\n            super(chart, datasetIndex);\r\n            this.enableOptionSharing = true;\r\n            this.innerRadius = undefined;\r\n            this.outerRadius = undefined;\r\n            this.offsetX = undefined;\r\n            this.offsetY = undefined;\r\n        }\r\n\r\n        linkScales() {\r\n        }\r\n\r\n        parse(start, count) {\r\n            const data = this.getDataset().data;\r\n            const meta = this._cachedMeta;\r\n            let i, ilen;\r\n            for (i = start, ilen = start + count; i < ilen; ++i) {\r\n                meta._parsed[i] = +data[i];\r\n            }\r\n        }\r\n\r\n        _getRotation() {\r\n            return toRadians(this.options.rotation - 90);\r\n        }\r\n\r\n        _getCircumference() {\r\n            return toRadians(this.options.circumference);\r\n        }\r\n\r\n        _getRotationExtents() {\r\n            let min = TAU;\r\n            let max = -TAU;\r\n            const me = this;\r\n            for (let i = 0; i < me.chart.data.datasets.length; ++i) {\r\n                if (me.chart.isDatasetVisible(i)) {\r\n                    const controller = me.chart.getDatasetMeta(i).controller;\r\n                    const rotation = controller._getRotation();\r\n                    const circumference = controller._getCircumference();\r\n                    min = Math.min(min, rotation);\r\n                    max = Math.max(max, rotation + circumference);\r\n                }\r\n            }\r\n            return {\r\n                rotation: min,\r\n                circumference: max - min,\r\n            };\r\n        }\r\n\r\n        update(mode) {\r\n            const me = this;\r\n            const chart = me.chart;\r\n            const {chartArea} = chart;\r\n            const meta = me._cachedMeta;\r\n            const arcs = meta.data;\r\n            const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\r\n            const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\r\n            const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\r\n            const chartWeight = me._getRingWeight(me.index);\r\n            const {circumference, rotation} = me._getRotationExtents();\r\n            const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\r\n            const maxWidth = (chartArea.width - spacing) / ratioX;\r\n            const maxHeight = (chartArea.height - spacing) / ratioY;\r\n            const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\r\n            const outerRadius = toDimension(me.options.radius, maxRadius);\r\n            const innerRadius = Math.max(outerRadius * cutout, 0);\r\n            const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\r\n            me.offsetX = offsetX * outerRadius;\r\n            me.offsetY = offsetY * outerRadius;\r\n            meta.total = me.calculateTotal();\r\n            me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\r\n            me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\r\n            me.updateElements(arcs, 0, arcs.length, mode);\r\n        }\r\n\r\n        _circumference(i, reset) {\r\n            const me = this;\r\n            const opts = me.options;\r\n            const meta = me._cachedMeta;\r\n            const circumference = me._getCircumference();\r\n            if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\r\n                return 0;\r\n            }\r\n            return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\r\n        }\r\n\r\n        updateElements(arcs, start, count, mode) {\r\n            const me = this;\r\n            const reset = mode === 'reset';\r\n            const chart = me.chart;\r\n            const chartArea = chart.chartArea;\r\n            const opts = chart.options;\r\n            const animationOpts = opts.animation;\r\n            const centerX = (chartArea.left + chartArea.right) / 2;\r\n            const centerY = (chartArea.top + chartArea.bottom) / 2;\r\n            const animateScale = reset && animationOpts.animateScale;\r\n            const innerRadius = animateScale ? 0 : me.innerRadius;\r\n            const outerRadius = animateScale ? 0 : me.outerRadius;\r\n            const firstOpts = me.resolveDataElementOptions(start, mode);\r\n            const sharedOptions = me.getSharedOptions(firstOpts);\r\n            const includeOptions = me.includeOptions(mode, sharedOptions);\r\n            let startAngle = me._getRotation();\r\n            let i;\r\n            for (i = 0; i < start; ++i) {\r\n                startAngle += me._circumference(i, reset);\r\n            }\r\n            for (i = start; i < start + count; ++i) {\r\n                const circumference = me._circumference(i, reset);\r\n                const arc = arcs[i];\r\n                const properties = {\r\n                    x: centerX + me.offsetX,\r\n                    y: centerY + me.offsetY,\r\n                    startAngle,\r\n                    endAngle: startAngle + circumference,\r\n                    circumference,\r\n                    outerRadius,\r\n                    innerRadius\r\n                };\r\n                if (includeOptions) {\r\n                    properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\r\n                }\r\n                startAngle += circumference;\r\n                me.updateElement(arc, i, properties, mode);\r\n            }\r\n            me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n        }\r\n\r\n        calculateTotal() {\r\n            const meta = this._cachedMeta;\r\n            const metaData = meta.data;\r\n            let total = 0;\r\n            let i;\r\n            for (i = 0; i < metaData.length; i++) {\r\n                const value = meta._parsed[i];\r\n                if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\r\n                    total += Math.abs(value);\r\n                }\r\n            }\r\n            return total;\r\n        }\r\n\r\n        calculateCircumference(value) {\r\n            const total = this._cachedMeta.total;\r\n            if (total > 0 && !isNaN(value)) {\r\n                return TAU * (Math.abs(value) / total);\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        getLabelAndValue(index) {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            const chart = me.chart;\r\n            const labels = chart.data.labels || [];\r\n            const value = formatNumber(meta._parsed[index], chart.options.locale);\r\n            return {\r\n                label: labels[index] || '',\r\n                value,\r\n            };\r\n        }\r\n\r\n        getMaxBorderWidth(arcs) {\r\n            const me = this;\r\n            let max = 0;\r\n            const chart = me.chart;\r\n            let i, ilen, meta, controller, options;\r\n            if (!arcs) {\r\n                for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\r\n                    if (chart.isDatasetVisible(i)) {\r\n                        meta = chart.getDatasetMeta(i);\r\n                        arcs = meta.data;\r\n                        controller = meta.controller;\r\n                        if (controller !== me) {\r\n                            controller.configure();\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (!arcs) {\r\n                return 0;\r\n            }\r\n            for (i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n                options = controller.resolveDataElementOptions(i);\r\n                if (options.borderAlign !== 'inner') {\r\n                    max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\r\n                }\r\n            }\r\n            return max;\r\n        }\r\n\r\n        getMaxOffset(arcs) {\r\n            let max = 0;\r\n            for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n                const options = this.resolveDataElementOptions(i);\r\n                max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\r\n            }\r\n            return max;\r\n        }\r\n\r\n        _getRingWeightOffset(datasetIndex) {\r\n            let ringWeightOffset = 0;\r\n            for (let i = 0; i < datasetIndex; ++i) {\r\n                if (this.chart.isDatasetVisible(i)) {\r\n                    ringWeightOffset += this._getRingWeight(i);\r\n                }\r\n            }\r\n            return ringWeightOffset;\r\n        }\r\n\r\n        _getRingWeight(datasetIndex) {\r\n            return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\r\n        }\r\n\r\n        _getVisibleDatasetWeightTotal() {\r\n            return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\r\n        }\r\n    }\r\n\r\n    DoughnutController.id = 'doughnut';\r\n    DoughnutController.defaults = {\r\n        datasetElementType: false,\r\n        dataElementType: 'arc',\r\n        animation: {\r\n            animateRotate: true,\r\n            animateScale: false\r\n        },\r\n        animations: {\r\n            numbers: {\r\n                type: 'number',\r\n                properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\r\n            },\r\n        },\r\n        cutout: '50%',\r\n        rotation: 0,\r\n        circumference: 360,\r\n        radius: '100%',\r\n        indexAxis: 'r',\r\n    };\r\n    DoughnutController.overrides = {\r\n        aspectRatio: 1,\r\n        plugins: {\r\n            legend: {\r\n                labels: {\r\n                    generateLabels(chart) {\r\n                        const data = chart.data;\r\n                        if (data.labels.length && data.datasets.length) {\r\n                            return data.labels.map((label, i) => {\r\n                                const meta = chart.getDatasetMeta(0);\r\n                                const style = meta.controller.getStyle(i);\r\n                                return {\r\n                                    text: label,\r\n                                    fillStyle: style.backgroundColor,\r\n                                    strokeStyle: style.borderColor,\r\n                                    lineWidth: style.borderWidth,\r\n                                    hidden: !chart.getDataVisibility(i),\r\n                                    index: i\r\n                                };\r\n                            });\r\n                        }\r\n                        return [];\r\n                    }\r\n                },\r\n                onClick(e, legendItem, legend) {\r\n                    legend.chart.toggleDataVisibility(legendItem.index);\r\n                    legend.chart.update();\r\n                }\r\n            },\r\n            tooltip: {\r\n                callbacks: {\r\n                    title() {\r\n                        return '';\r\n                    },\r\n                    label(tooltipItem) {\r\n                        let dataLabel = tooltipItem.label;\r\n                        const value = ': ' + tooltipItem.formattedValue;\r\n                        if (isArray(dataLabel)) {\r\n                            dataLabel = dataLabel.slice();\r\n                            dataLabel[0] += value;\r\n                        } else {\r\n                            dataLabel += value;\r\n                        }\r\n                        return dataLabel;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    class LineController extends DatasetController {\r\n        initialize() {\r\n            this.enableOptionSharing = true;\r\n            super.initialize();\r\n        }\r\n\r\n        update(mode) {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            const {dataset: line, data: points = [], _dataset} = meta;\r\n            const animationsDisabled = me.chart._animationsDisabled;\r\n            let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n            me._drawStart = start;\r\n            me._drawCount = count;\r\n            if (scaleRangesChanged(meta)) {\r\n                start = 0;\r\n                count = points.length;\r\n            }\r\n            line._decimated = !!_dataset._decimated;\r\n            line.points = points;\r\n            if (mode !== 'resize') {\r\n                const options = me.resolveDatasetElementOptions(mode);\r\n                if (!me.options.showLine) {\r\n                    options.borderWidth = 0;\r\n                }\r\n                me.updateElement(line, undefined, {\r\n                    animated: !animationsDisabled,\r\n                    options\r\n                }, mode);\r\n            }\r\n            me.updateElements(points, start, count, mode);\r\n        }\r\n\r\n        updateElements(points, start, count, mode) {\r\n            const me = this;\r\n            const reset = mode === 'reset';\r\n            const {xScale, yScale, _stacked} = me._cachedMeta;\r\n            const firstOpts = me.resolveDataElementOptions(start, mode);\r\n            const sharedOptions = me.getSharedOptions(firstOpts);\r\n            const includeOptions = me.includeOptions(mode, sharedOptions);\r\n            const spanGaps = me.options.spanGaps;\r\n            const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n            const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\r\n            let prevParsed = start > 0 && me.getParsed(start - 1);\r\n            for (let i = start; i < start + count; ++i) {\r\n                const point = points[i];\r\n                const parsed = me.getParsed(i);\r\n                const properties = directUpdate ? point : {};\r\n                const x = properties.x = xScale.getPixelForValue(parsed.x, i);\r\n                const y = properties.y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\r\n                properties.skip = isNaN(x) || isNaN(y);\r\n                properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\r\n                if (includeOptions) {\r\n                    properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\r\n                }\r\n                if (!directUpdate) {\r\n                    me.updateElement(point, i, properties, mode);\r\n                }\r\n                prevParsed = parsed;\r\n            }\r\n            me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n        }\r\n\r\n        getMaxOverflow() {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            const dataset = meta.dataset;\r\n            const border = dataset.options && dataset.options.borderWidth || 0;\r\n            const data = meta.data || [];\r\n            if (!data.length) {\r\n                return border;\r\n            }\r\n            const firstPoint = data[0].size(me.resolveDataElementOptions(0));\r\n            const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\r\n            return Math.max(border, firstPoint, lastPoint) / 2;\r\n        }\r\n\r\n        draw() {\r\n            this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\r\n            super.draw();\r\n        }\r\n    }\r\n\r\n    LineController.id = 'line';\r\n    LineController.defaults = {\r\n        datasetElementType: 'line',\r\n        dataElementType: 'point',\r\n        showLine: true,\r\n        spanGaps: false,\r\n    };\r\n    LineController.overrides = {\r\n        scales: {\r\n            _index_: {\r\n                type: 'category',\r\n            },\r\n            _value_: {\r\n                type: 'linear',\r\n            },\r\n        }\r\n    };\r\n\r\n    function getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\r\n        const pointCount = points.length;\r\n        let start = 0;\r\n        let count = pointCount;\r\n        if (meta._sorted) {\r\n            const {iScale, _parsed} = meta;\r\n            const axis = iScale.axis;\r\n            const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n            if (minDefined) {\r\n                start = _limitValue(Math.min(\r\n                    _lookupByKey(_parsed, iScale.axis, min).lo,\r\n                    animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\r\n                    0, pointCount - 1);\r\n            }\r\n            if (maxDefined) {\r\n                count = _limitValue(Math.max(\r\n                    _lookupByKey(_parsed, iScale.axis, max).hi + 1,\r\n                    animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\r\n                    start, pointCount) - start;\r\n            } else {\r\n                count = pointCount - start;\r\n            }\r\n        }\r\n        return {start, count};\r\n    }\r\n\r\n    function scaleRangesChanged(meta) {\r\n        const {xScale, yScale, _scaleRanges} = meta;\r\n        const newRanges = {\r\n            xmin: xScale.min,\r\n            xmax: xScale.max,\r\n            ymin: yScale.min,\r\n            ymax: yScale.max\r\n        };\r\n        if (!_scaleRanges) {\r\n            meta._scaleRanges = newRanges;\r\n            return true;\r\n        }\r\n        const changed = _scaleRanges.xmin !== xScale.min\r\n            || _scaleRanges.xmax !== xScale.max\r\n            || _scaleRanges.ymin !== yScale.min\r\n            || _scaleRanges.ymax !== yScale.max;\r\n        Object.assign(_scaleRanges, newRanges);\r\n        return changed;\r\n    }\r\n\r\n    class PolarAreaController extends DatasetController {\r\n        constructor(chart, datasetIndex) {\r\n            super(chart, datasetIndex);\r\n            this.innerRadius = undefined;\r\n            this.outerRadius = undefined;\r\n        }\r\n\r\n        update(mode) {\r\n            const arcs = this._cachedMeta.data;\r\n            this._updateRadius();\r\n            this.updateElements(arcs, 0, arcs.length, mode);\r\n        }\r\n\r\n        _updateRadius() {\r\n            const me = this;\r\n            const chart = me.chart;\r\n            const chartArea = chart.chartArea;\r\n            const opts = chart.options;\r\n            const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n            const outerRadius = Math.max(minSize / 2, 0);\r\n            const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n            const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\r\n            me.outerRadius = outerRadius - (radiusLength * me.index);\r\n            me.innerRadius = me.outerRadius - radiusLength;\r\n        }\r\n\r\n        updateElements(arcs, start, count, mode) {\r\n            const me = this;\r\n            const reset = mode === 'reset';\r\n            const chart = me.chart;\r\n            const dataset = me.getDataset();\r\n            const opts = chart.options;\r\n            const animationOpts = opts.animation;\r\n            const scale = me._cachedMeta.rScale;\r\n            const centerX = scale.xCenter;\r\n            const centerY = scale.yCenter;\r\n            const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\r\n            let angle = datasetStartAngle;\r\n            let i;\r\n            const defaultAngle = 360 / me.countVisibleElements();\r\n            for (i = 0; i < start; ++i) {\r\n                angle += me._computeAngle(i, mode, defaultAngle);\r\n            }\r\n            for (i = start; i < start + count; i++) {\r\n                const arc = arcs[i];\r\n                let startAngle = angle;\r\n                let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\r\n                let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\r\n                angle = endAngle;\r\n                if (reset) {\r\n                    if (animationOpts.animateScale) {\r\n                        outerRadius = 0;\r\n                    }\r\n                    if (animationOpts.animateRotate) {\r\n                        startAngle = endAngle = datasetStartAngle;\r\n                    }\r\n                }\r\n                const properties = {\r\n                    x: centerX,\r\n                    y: centerY,\r\n                    innerRadius: 0,\r\n                    outerRadius,\r\n                    startAngle,\r\n                    endAngle,\r\n                    options: me.resolveDataElementOptions(i, mode)\r\n                };\r\n                me.updateElement(arc, i, properties, mode);\r\n            }\r\n        }\r\n\r\n        countVisibleElements() {\r\n            const dataset = this.getDataset();\r\n            const meta = this._cachedMeta;\r\n            let count = 0;\r\n            meta.data.forEach((element, index) => {\r\n                if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\r\n                    count++;\r\n                }\r\n            });\r\n            return count;\r\n        }\r\n\r\n        _computeAngle(index, mode, defaultAngle) {\r\n            return this.chart.getDataVisibility(index)\r\n                ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\r\n                : 0;\r\n        }\r\n    }\r\n\r\n    PolarAreaController.id = 'polarArea';\r\n    PolarAreaController.defaults = {\r\n        dataElementType: 'arc',\r\n        animation: {\r\n            animateRotate: true,\r\n            animateScale: true\r\n        },\r\n        animations: {\r\n            numbers: {\r\n                type: 'number',\r\n                properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\r\n            },\r\n        },\r\n        indexAxis: 'r',\r\n        startAngle: 0,\r\n    };\r\n    PolarAreaController.overrides = {\r\n        aspectRatio: 1,\r\n        plugins: {\r\n            legend: {\r\n                labels: {\r\n                    generateLabels(chart) {\r\n                        const data = chart.data;\r\n                        if (data.labels.length && data.datasets.length) {\r\n                            return data.labels.map((label, i) => {\r\n                                const meta = chart.getDatasetMeta(0);\r\n                                const style = meta.controller.getStyle(i);\r\n                                return {\r\n                                    text: label,\r\n                                    fillStyle: style.backgroundColor,\r\n                                    strokeStyle: style.borderColor,\r\n                                    lineWidth: style.borderWidth,\r\n                                    hidden: !chart.getDataVisibility(i),\r\n                                    index: i\r\n                                };\r\n                            });\r\n                        }\r\n                        return [];\r\n                    }\r\n                },\r\n                onClick(e, legendItem, legend) {\r\n                    legend.chart.toggleDataVisibility(legendItem.index);\r\n                    legend.chart.update();\r\n                }\r\n            },\r\n            tooltip: {\r\n                callbacks: {\r\n                    title() {\r\n                        return '';\r\n                    },\r\n                    label(context) {\r\n                        return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        scales: {\r\n            r: {\r\n                type: 'radialLinear',\r\n                angleLines: {\r\n                    display: false\r\n                },\r\n                beginAtZero: true,\r\n                grid: {\r\n                    circular: true\r\n                },\r\n                pointLabels: {\r\n                    display: false\r\n                },\r\n                startAngle: 0\r\n            }\r\n        }\r\n    };\r\n\r\n    class PieController extends DoughnutController {\r\n    }\r\n\r\n    PieController.id = 'pie';\r\n    PieController.defaults = {\r\n        cutout: 0,\r\n        rotation: 0,\r\n        circumference: 360,\r\n        radius: '100%'\r\n    };\r\n\r\n    class RadarController extends DatasetController {\r\n        getLabelAndValue(index) {\r\n            const me = this;\r\n            const vScale = me._cachedMeta.vScale;\r\n            const parsed = me.getParsed(index);\r\n            return {\r\n                label: vScale.getLabels()[index],\r\n                value: '' + vScale.getLabelForValue(parsed[vScale.axis])\r\n            };\r\n        }\r\n\r\n        update(mode) {\r\n            const me = this;\r\n            const meta = me._cachedMeta;\r\n            const line = meta.dataset;\r\n            const points = meta.data || [];\r\n            const labels = meta.iScale.getLabels();\r\n            line.points = points;\r\n            if (mode !== 'resize') {\r\n                const options = me.resolveDatasetElementOptions(mode);\r\n                if (!me.options.showLine) {\r\n                    options.borderWidth = 0;\r\n                }\r\n                const properties = {\r\n                    _loop: true,\r\n                    _fullLoop: labels.length === points.length,\r\n                    options\r\n                };\r\n                me.updateElement(line, undefined, properties, mode);\r\n            }\r\n            me.updateElements(points, 0, points.length, mode);\r\n        }\r\n\r\n        updateElements(points, start, count, mode) {\r\n            const me = this;\r\n            const dataset = me.getDataset();\r\n            const scale = me._cachedMeta.rScale;\r\n            const reset = mode === 'reset';\r\n            for (let i = start; i < start + count; i++) {\r\n                const point = points[i];\r\n                const options = me.resolveDataElementOptions(i, mode);\r\n                const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\r\n                const x = reset ? scale.xCenter : pointPosition.x;\r\n                const y = reset ? scale.yCenter : pointPosition.y;\r\n                const properties = {\r\n                    x,\r\n                    y,\r\n                    angle: pointPosition.angle,\r\n                    skip: isNaN(x) || isNaN(y),\r\n                    options\r\n                };\r\n                me.updateElement(point, i, properties, mode);\r\n            }\r\n        }\r\n    }\r\n\r\n    RadarController.id = 'radar';\r\n    RadarController.defaults = {\r\n        datasetElementType: 'line',\r\n        dataElementType: 'point',\r\n        indexAxis: 'r',\r\n        showLine: true,\r\n        elements: {\r\n            line: {\r\n                fill: 'start'\r\n            }\r\n        },\r\n    };\r\n    RadarController.overrides = {\r\n        aspectRatio: 1,\r\n        scales: {\r\n            r: {\r\n                type: 'radialLinear',\r\n            }\r\n        }\r\n    };\r\n\r\n    class ScatterController extends LineController {\r\n    }\r\n\r\n    ScatterController.id = 'scatter';\r\n    ScatterController.defaults = {\r\n        showLine: false,\r\n        fill: false\r\n    };\r\n    ScatterController.overrides = {\r\n        interaction: {\r\n            mode: 'point'\r\n        },\r\n        plugins: {\r\n            tooltip: {\r\n                callbacks: {\r\n                    title() {\r\n                        return '';\r\n                    },\r\n                    label(item) {\r\n                        return '(' + item.label + ', ' + item.formattedValue + ')';\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        scales: {\r\n            x: {\r\n                type: 'linear'\r\n            },\r\n            y: {\r\n                type: 'linear'\r\n            }\r\n        }\r\n    };\r\n\r\n    var controllers = /*#__PURE__*/Object.freeze({\r\n        __proto__: null,\r\n        BarController: BarController,\r\n        BubbleController: BubbleController,\r\n        DoughnutController: DoughnutController,\r\n        LineController: LineController,\r\n        PolarAreaController: PolarAreaController,\r\n        PieController: PieController,\r\n        RadarController: RadarController,\r\n        ScatterController: ScatterController\r\n    });\r\n\r\n    function clipArc(ctx, element) {\r\n        const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\r\n        let angleMargin = pixelMargin / outerRadius;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\r\n        if (innerRadius > pixelMargin) {\r\n            angleMargin = pixelMargin / innerRadius;\r\n            ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\r\n        } else {\r\n            ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\r\n        }\r\n        ctx.closePath();\r\n        ctx.clip();\r\n    }\r\n\r\n    function pathArc(ctx, element) {\r\n        const {x, y, startAngle, endAngle, pixelMargin} = element;\r\n        const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n        const innerRadius = element.innerRadius + pixelMargin;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, outerRadius, startAngle, endAngle);\r\n        ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\r\n        ctx.closePath();\r\n    }\r\n\r\n    function drawArc(ctx, element) {\r\n        if (element.fullCircles) {\r\n            element.endAngle = element.startAngle + TAU;\r\n            pathArc(ctx, element);\r\n            for (let i = 0; i < element.fullCircles; ++i) {\r\n                ctx.fill();\r\n            }\r\n        }\r\n        if (!isNaN(element.circumference)) {\r\n            element.endAngle = element.startAngle + element.circumference % TAU;\r\n        }\r\n        pathArc(ctx, element);\r\n        ctx.fill();\r\n    }\r\n\r\n    function drawFullCircleBorders(ctx, element, inner) {\r\n        const {x, y, startAngle, endAngle, pixelMargin} = element;\r\n        const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n        const innerRadius = element.innerRadius + pixelMargin;\r\n        let i;\r\n        if (inner) {\r\n            element.endAngle = element.startAngle + TAU;\r\n            clipArc(ctx, element);\r\n            element.endAngle = endAngle;\r\n            if (element.endAngle === element.startAngle) {\r\n                element.endAngle += TAU;\r\n                element.fullCircles--;\r\n            }\r\n        }\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\r\n        for (i = 0; i < element.fullCircles; ++i) {\r\n            ctx.stroke();\r\n        }\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\r\n        for (i = 0; i < element.fullCircles; ++i) {\r\n            ctx.stroke();\r\n        }\r\n    }\r\n\r\n    function drawBorder(ctx, element) {\r\n        const {x, y, startAngle, endAngle, pixelMargin, options} = element;\r\n        const outerRadius = element.outerRadius;\r\n        const innerRadius = element.innerRadius + pixelMargin;\r\n        const inner = options.borderAlign === 'inner';\r\n        if (!options.borderWidth) {\r\n            return;\r\n        }\r\n        if (inner) {\r\n            ctx.lineWidth = options.borderWidth * 2;\r\n            ctx.lineJoin = 'round';\r\n        } else {\r\n            ctx.lineWidth = options.borderWidth;\r\n            ctx.lineJoin = 'bevel';\r\n        }\r\n        if (element.fullCircles) {\r\n            drawFullCircleBorders(ctx, element, inner);\r\n        }\r\n        if (inner) {\r\n            clipArc(ctx, element);\r\n        }\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, outerRadius, startAngle, endAngle);\r\n        ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n\r\n    class ArcElement extends Element {\r\n        constructor(cfg) {\r\n            super();\r\n            this.options = undefined;\r\n            this.circumference = undefined;\r\n            this.startAngle = undefined;\r\n            this.endAngle = undefined;\r\n            this.innerRadius = undefined;\r\n            this.outerRadius = undefined;\r\n            this.pixelMargin = 0;\r\n            this.fullCircles = 0;\r\n            if (cfg) {\r\n                Object.assign(this, cfg);\r\n            }\r\n        }\r\n\r\n        inRange(chartX, chartY, useFinalPosition) {\r\n            const point = this.getProps(['x', 'y'], useFinalPosition);\r\n            const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\r\n            const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\r\n                'startAngle',\r\n                'endAngle',\r\n                'innerRadius',\r\n                'outerRadius',\r\n                'circumference'\r\n            ], useFinalPosition);\r\n            const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\r\n            const withinRadius = (distance >= innerRadius && distance <= outerRadius);\r\n            return (betweenAngles && withinRadius);\r\n        }\r\n\r\n        getCenterPoint(useFinalPosition) {\r\n            const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\r\n                'x',\r\n                'y',\r\n                'startAngle',\r\n                'endAngle',\r\n                'innerRadius',\r\n                'outerRadius'\r\n            ], useFinalPosition);\r\n            const halfAngle = (startAngle + endAngle) / 2;\r\n            const halfRadius = (innerRadius + outerRadius) / 2;\r\n            return {\r\n                x: x + Math.cos(halfAngle) * halfRadius,\r\n                y: y + Math.sin(halfAngle) * halfRadius\r\n            };\r\n        }\r\n\r\n        tooltipPosition(useFinalPosition) {\r\n            return this.getCenterPoint(useFinalPosition);\r\n        }\r\n\r\n        draw(ctx) {\r\n            const me = this;\r\n            const options = me.options;\r\n            const offset = options.offset || 0;\r\n            me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\r\n            me.fullCircles = Math.floor(me.circumference / TAU);\r\n            if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\r\n                return;\r\n            }\r\n            ctx.save();\r\n            if (offset && me.circumference < TAU) {\r\n                const halfAngle = (me.startAngle + me.endAngle) / 2;\r\n                ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\r\n            }\r\n            ctx.fillStyle = options.backgroundColor;\r\n            ctx.strokeStyle = options.borderColor;\r\n            drawArc(ctx, me);\r\n            drawBorder(ctx, me);\r\n            ctx.restore();\r\n        }\r\n    }\r\n\r\n    ArcElement.id = 'arc';\r\n    ArcElement.defaults = {\r\n        borderAlign: 'center',\r\n        borderColor: '#fff',\r\n        borderWidth: 2,\r\n        offset: 0,\r\n        angle: undefined\r\n    };\r\n    ArcElement.defaultRoutes = {\r\n        backgroundColor: 'backgroundColor'\r\n    };\r\n\r\n    function setStyle(ctx, vm) {\r\n        ctx.lineCap = vm.borderCapStyle;\r\n        ctx.setLineDash(vm.borderDash);\r\n        ctx.lineDashOffset = vm.borderDashOffset;\r\n        ctx.lineJoin = vm.borderJoinStyle;\r\n        ctx.lineWidth = vm.borderWidth;\r\n        ctx.strokeStyle = vm.borderColor;\r\n    }\r\n\r\n    function lineTo(ctx, previous, target) {\r\n        ctx.lineTo(target.x, target.y);\r\n    }\r\n\r\n    function getLineMethod(options) {\r\n        if (options.stepped) {\r\n            return _steppedLineTo;\r\n        }\r\n        if (options.tension) {\r\n            return _bezierCurveTo;\r\n        }\r\n        return lineTo;\r\n    }\r\n\r\n    function pathVars(points, segment, params) {\r\n        params = params || {};\r\n        const count = points.length;\r\n        const start = Math.max(params.start || 0, segment.start);\r\n        const end = Math.min(params.end || count - 1, segment.end);\r\n        return {\r\n            count,\r\n            start,\r\n            loop: segment.loop,\r\n            ilen: end < start ? count + end - start : end - start\r\n        };\r\n    }\r\n\r\n    function pathSegment(ctx, line, segment, params) {\r\n        const {points, options} = line;\r\n        const {count, start, loop, ilen} = pathVars(points, segment, params);\r\n        const lineMethod = getLineMethod(options);\r\n        let {move = true, reverse} = params || {};\r\n        let i, point, prev;\r\n        for (i = 0; i <= ilen; ++i) {\r\n            point = points[(start + (reverse ? ilen - i : i)) % count];\r\n            if (point.skip) {\r\n                continue;\r\n            } else if (move) {\r\n                ctx.moveTo(point.x, point.y);\r\n                move = false;\r\n            } else {\r\n                lineMethod(ctx, prev, point, reverse, options.stepped);\r\n            }\r\n            prev = point;\r\n        }\r\n        if (loop) {\r\n            point = points[(start + (reverse ? ilen : 0)) % count];\r\n            lineMethod(ctx, prev, point, reverse, options.stepped);\r\n        }\r\n        return !!loop;\r\n    }\r\n\r\n    function fastPathSegment(ctx, line, segment, params) {\r\n        const points = line.points;\r\n        const {count, start, ilen} = pathVars(points, segment, params);\r\n        const {move = true, reverse} = params || {};\r\n        let avgX = 0;\r\n        let countX = 0;\r\n        let i, point, prevX, minY, maxY, lastY;\r\n        const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\r\n        const drawX = () => {\r\n            if (minY !== maxY) {\r\n                ctx.lineTo(avgX, maxY);\r\n                ctx.lineTo(avgX, minY);\r\n                ctx.lineTo(avgX, lastY);\r\n            }\r\n        };\r\n        if (move) {\r\n            point = points[pointIndex(0)];\r\n            ctx.moveTo(point.x, point.y);\r\n        }\r\n        for (i = 0; i <= ilen; ++i) {\r\n            point = points[pointIndex(i)];\r\n            if (point.skip) {\r\n                continue;\r\n            }\r\n            const x = point.x;\r\n            const y = point.y;\r\n            const truncX = x | 0;\r\n            if (truncX === prevX) {\r\n                if (y < minY) {\r\n                    minY = y;\r\n                } else if (y > maxY) {\r\n                    maxY = y;\r\n                }\r\n                avgX = (countX * avgX + x) / ++countX;\r\n            } else {\r\n                drawX();\r\n                ctx.lineTo(x, y);\r\n                prevX = truncX;\r\n                countX = 0;\r\n                minY = maxY = y;\r\n            }\r\n            lastY = y;\r\n        }\r\n        drawX();\r\n    }\r\n\r\n    function _getSegmentMethod(line) {\r\n        const opts = line.options;\r\n        const borderDash = opts.borderDash && opts.borderDash.length;\r\n        const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\r\n        return useFastPath ? fastPathSegment : pathSegment;\r\n    }\r\n\r\n    function _getInterpolationMethod(options) {\r\n        if (options.stepped) {\r\n            return _steppedInterpolation;\r\n        }\r\n        if (options.tension) {\r\n            return _bezierInterpolation;\r\n        }\r\n        return _pointInLine;\r\n    }\r\n\r\n    function strokePathWithCache(ctx, line, start, count) {\r\n        let path = line._path;\r\n        if (!path) {\r\n            path = line._path = new Path2D();\r\n            if (line.path(path, start, count)) {\r\n                path.closePath();\r\n            }\r\n        }\r\n        ctx.stroke(path);\r\n    }\r\n\r\n    function strokePathDirect(ctx, line, start, count) {\r\n        ctx.beginPath();\r\n        if (line.path(ctx, start, count)) {\r\n            ctx.closePath();\r\n        }\r\n        ctx.stroke();\r\n    }\r\n\r\n    const usePath2D = typeof Path2D === 'function';\r\n    const strokePath = usePath2D ? strokePathWithCache : strokePathDirect;\r\n\r\n    class LineElement extends Element {\r\n        constructor(cfg) {\r\n            super();\r\n            this.animated = true;\r\n            this.options = undefined;\r\n            this._loop = undefined;\r\n            this._fullLoop = undefined;\r\n            this._path = undefined;\r\n            this._points = undefined;\r\n            this._segments = undefined;\r\n            this._decimated = false;\r\n            this._pointsUpdated = false;\r\n            if (cfg) {\r\n                Object.assign(this, cfg);\r\n            }\r\n        }\r\n\r\n        updateControlPoints(chartArea) {\r\n            const me = this;\r\n            const options = me.options;\r\n            if (options.tension && !options.stepped && !me._pointsUpdated) {\r\n                const loop = options.spanGaps ? me._loop : me._fullLoop;\r\n                _updateBezierControlPoints(me._points, options, chartArea, loop);\r\n                me._pointsUpdated = true;\r\n            }\r\n        }\r\n\r\n        set points(points) {\r\n            const me = this;\r\n            me._points = points;\r\n            delete me._segments;\r\n            delete me._path;\r\n            me._pointsUpdated = false;\r\n        }\r\n\r\n        get points() {\r\n            return this._points;\r\n        }\r\n\r\n        get segments() {\r\n            return this._segments || (this._segments = _computeSegments(this));\r\n        }\r\n\r\n        first() {\r\n            const segments = this.segments;\r\n            const points = this.points;\r\n            return segments.length && points[segments[0].start];\r\n        }\r\n\r\n        last() {\r\n            const segments = this.segments;\r\n            const points = this.points;\r\n            const count = segments.length;\r\n            return count && points[segments[count - 1].end];\r\n        }\r\n\r\n        interpolate(point, property) {\r\n            const me = this;\r\n            const options = me.options;\r\n            const value = point[property];\r\n            const points = me.points;\r\n            const segments = _boundSegments(me, {property, start: value, end: value});\r\n            if (!segments.length) {\r\n                return;\r\n            }\r\n            const result = [];\r\n            const _interpolate = _getInterpolationMethod(options);\r\n            let i, ilen;\r\n            for (i = 0, ilen = segments.length; i < ilen; ++i) {\r\n                const {start, end} = segments[i];\r\n                const p1 = points[start];\r\n                const p2 = points[end];\r\n                if (p1 === p2) {\r\n                    result.push(p1);\r\n                    continue;\r\n                }\r\n                const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\r\n                const interpolated = _interpolate(p1, p2, t, options.stepped);\r\n                interpolated[property] = point[property];\r\n                result.push(interpolated);\r\n            }\r\n            return result.length === 1 ? result[0] : result;\r\n        }\r\n\r\n        pathSegment(ctx, segment, params) {\r\n            const segmentMethod = _getSegmentMethod(this);\r\n            return segmentMethod(ctx, this, segment, params);\r\n        }\r\n\r\n        path(ctx, start, count) {\r\n            const me = this;\r\n            const segments = me.segments;\r\n            const ilen = segments.length;\r\n            const segmentMethod = _getSegmentMethod(me);\r\n            let loop = me._loop;\r\n            start = start || 0;\r\n            count = count || (me.points.length - start);\r\n            for (let i = 0; i < ilen; ++i) {\r\n                loop &= segmentMethod(ctx, me, segments[i], {start, end: start + count - 1});\r\n            }\r\n            return !!loop;\r\n        }\r\n\r\n        draw(ctx, chartArea, start, count) {\r\n            const me = this;\r\n            const options = me.options || {};\r\n            const points = me.points || [];\r\n            if (!points.length || !options.borderWidth) {\r\n                return;\r\n            }\r\n            ctx.save();\r\n            setStyle(ctx, options);\r\n            strokePath(ctx, me, start, count);\r\n            ctx.restore();\r\n            if (me.animated) {\r\n                me._pointsUpdated = false;\r\n                me._path = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    LineElement.id = 'line';\r\n    LineElement.defaults = {\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0,\r\n        borderJoinStyle: 'miter',\r\n        borderWidth: 3,\r\n        capBezierPoints: true,\r\n        cubicInterpolationMode: 'default',\r\n        fill: false,\r\n        spanGaps: false,\r\n        stepped: false,\r\n        tension: 0,\r\n    };\r\n    LineElement.defaultRoutes = {\r\n        backgroundColor: 'backgroundColor',\r\n        borderColor: 'borderColor'\r\n    };\r\n    LineElement.descriptors = {\r\n        _scriptable: true,\r\n        _indexable: (name) => name !== 'borderDash' && name !== 'fill',\r\n    };\r\n\r\n    function inRange$1(el, pos, axis, useFinalPosition) {\r\n        const options = el.options;\r\n        const {[axis]: value} = el.getProps([axis], useFinalPosition);\r\n        return (Math.abs(pos - value) < options.radius + options.hitRadius);\r\n    }\r\n\r\n    class PointElement extends Element {\r\n        constructor(cfg) {\r\n            super();\r\n            this.options = undefined;\r\n            this.skip = undefined;\r\n            this.stop = undefined;\r\n            if (cfg) {\r\n                Object.assign(this, cfg);\r\n            }\r\n        }\r\n\r\n        inRange(mouseX, mouseY, useFinalPosition) {\r\n            const options = this.options;\r\n            const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n            return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\r\n        }\r\n\r\n        inXRange(mouseX, useFinalPosition) {\r\n            return inRange$1(this, mouseX, 'x', useFinalPosition);\r\n        }\r\n\r\n        inYRange(mouseY, useFinalPosition) {\r\n            return inRange$1(this, mouseY, 'y', useFinalPosition);\r\n        }\r\n\r\n        getCenterPoint(useFinalPosition) {\r\n            const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n            return {x, y};\r\n        }\r\n\r\n        size(options) {\r\n            options = options || this.options || {};\r\n            let radius = options.radius || 0;\r\n            radius = Math.max(radius, radius && options.hoverRadius || 0);\r\n            const borderWidth = radius && options.borderWidth || 0;\r\n            return (radius + borderWidth) * 2;\r\n        }\r\n\r\n        draw(ctx) {\r\n            const me = this;\r\n            const options = me.options;\r\n            if (me.skip || options.radius < 0.1) {\r\n                return;\r\n            }\r\n            ctx.strokeStyle = options.borderColor;\r\n            ctx.lineWidth = options.borderWidth;\r\n            ctx.fillStyle = options.backgroundColor;\r\n            drawPoint(ctx, options, me.x, me.y);\r\n        }\r\n\r\n        getRange() {\r\n            const options = this.options || {};\r\n            return options.radius + options.hitRadius;\r\n        }\r\n    }\r\n\r\n    PointElement.id = 'point';\r\n    PointElement.defaults = {\r\n        borderWidth: 1,\r\n        hitRadius: 1,\r\n        hoverBorderWidth: 1,\r\n        hoverRadius: 4,\r\n        pointStyle: 'circle',\r\n        radius: 3,\r\n        rotation: 0\r\n    };\r\n    PointElement.defaultRoutes = {\r\n        backgroundColor: 'backgroundColor',\r\n        borderColor: 'borderColor'\r\n    };\r\n\r\n    function getBarBounds(bar, useFinalPosition) {\r\n        const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\r\n        let left, right, top, bottom, half;\r\n        if (bar.horizontal) {\r\n            half = height / 2;\r\n            left = Math.min(x, base);\r\n            right = Math.max(x, base);\r\n            top = y - half;\r\n            bottom = y + half;\r\n        } else {\r\n            half = width / 2;\r\n            left = x - half;\r\n            right = x + half;\r\n            top = Math.min(y, base);\r\n            bottom = Math.max(y, base);\r\n        }\r\n        return {left, top, right, bottom};\r\n    }\r\n\r\n    function parseBorderSkipped(bar) {\r\n        let edge = bar.options.borderSkipped;\r\n        const res = {};\r\n        if (!edge) {\r\n            return res;\r\n        }\r\n        edge = bar.horizontal\r\n            ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\r\n            : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\r\n        res[edge] = true;\r\n        return res;\r\n    }\r\n\r\n    function parseEdge(edge, a, b, reverse) {\r\n        if (reverse) {\r\n            edge = swap(edge, a, b);\r\n            edge = startEnd(edge, b, a);\r\n        } else {\r\n            edge = startEnd(edge, a, b);\r\n        }\r\n        return edge;\r\n    }\r\n\r\n    function swap(orig, v1, v2) {\r\n        return orig === v1 ? v2 : orig === v2 ? v1 : orig;\r\n    }\r\n\r\n    function startEnd(v, start, end) {\r\n        return v === 'start' ? start : v === 'end' ? end : v;\r\n    }\r\n\r\n    function skipOrLimit(skip, value, min, max) {\r\n        return skip ? 0 : Math.max(Math.min(value, max), min);\r\n    }\r\n\r\n    function parseBorderWidth(bar, maxW, maxH) {\r\n        const value = bar.options.borderWidth;\r\n        const skip = parseBorderSkipped(bar);\r\n        const o = toTRBL(value);\r\n        return {\r\n            t: skipOrLimit(skip.top, o.top, 0, maxH),\r\n            r: skipOrLimit(skip.right, o.right, 0, maxW),\r\n            b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\r\n            l: skipOrLimit(skip.left, o.left, 0, maxW)\r\n        };\r\n    }\r\n\r\n    function parseBorderRadius(bar, maxW, maxH) {\r\n        const value = bar.options.borderRadius;\r\n        const o = toTRBLCorners(value);\r\n        const maxR = Math.min(maxW, maxH);\r\n        const skip = parseBorderSkipped(bar);\r\n        return {\r\n            topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\r\n            topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\r\n            bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\r\n            bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\r\n        };\r\n    }\r\n\r\n    function boundingRects(bar) {\r\n        const bounds = getBarBounds(bar);\r\n        const width = bounds.right - bounds.left;\r\n        const height = bounds.bottom - bounds.top;\r\n        const border = parseBorderWidth(bar, width / 2, height / 2);\r\n        const radius = parseBorderRadius(bar, width / 2, height / 2);\r\n        return {\r\n            outer: {\r\n                x: bounds.left,\r\n                y: bounds.top,\r\n                w: width,\r\n                h: height,\r\n                radius\r\n            },\r\n            inner: {\r\n                x: bounds.left + border.l,\r\n                y: bounds.top + border.t,\r\n                w: width - border.l - border.r,\r\n                h: height - border.t - border.b,\r\n                radius: {\r\n                    topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\r\n                    topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\r\n                    bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\r\n                    bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    function inRange(bar, x, y, useFinalPosition) {\r\n        const skipX = x === null;\r\n        const skipY = y === null;\r\n        const skipBoth = skipX && skipY;\r\n        const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\r\n        return bounds\r\n            && (skipX || x >= bounds.left && x <= bounds.right)\r\n            && (skipY || y >= bounds.top && y <= bounds.bottom);\r\n    }\r\n\r\n    function hasRadius(radius) {\r\n        return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\r\n    }\r\n\r\n    function addRoundedRectPath(ctx, rect) {\r\n        const {x, y, w, h, radius} = rect;\r\n        ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\r\n        ctx.lineTo(x, y + h - radius.bottomLeft);\r\n        ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\r\n        ctx.lineTo(x + w - radius.bottomRight, y + h);\r\n        ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\r\n        ctx.lineTo(x + w, y + radius.topRight);\r\n        ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\r\n        ctx.lineTo(x + radius.topLeft, y);\r\n    }\r\n\r\n    function addNormalRectPath(ctx, rect) {\r\n        ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n    }\r\n\r\n    class BarElement extends Element {\r\n        constructor(cfg) {\r\n            super();\r\n            this.options = undefined;\r\n            this.horizontal = undefined;\r\n            this.base = undefined;\r\n            this.width = undefined;\r\n            this.height = undefined;\r\n            if (cfg) {\r\n                Object.assign(this, cfg);\r\n            }\r\n        }\r\n\r\n        draw(ctx) {\r\n            const options = this.options;\r\n            const {inner, outer} = boundingRects(this);\r\n            const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\r\n            ctx.save();\r\n            if (outer.w !== inner.w || outer.h !== inner.h) {\r\n                ctx.beginPath();\r\n                addRectPath(ctx, outer);\r\n                ctx.clip();\r\n                addRectPath(ctx, inner);\r\n                ctx.fillStyle = options.borderColor;\r\n                ctx.fill('evenodd');\r\n            }\r\n            ctx.beginPath();\r\n            addRectPath(ctx, inner);\r\n            ctx.fillStyle = options.backgroundColor;\r\n            ctx.fill();\r\n            ctx.restore();\r\n        }\r\n\r\n        inRange(mouseX, mouseY, useFinalPosition) {\r\n            return inRange(this, mouseX, mouseY, useFinalPosition);\r\n        }\r\n\r\n        inXRange(mouseX, useFinalPosition) {\r\n            return inRange(this, mouseX, null, useFinalPosition);\r\n        }\r\n\r\n        inYRange(mouseY, useFinalPosition) {\r\n            return inRange(this, null, mouseY, useFinalPosition);\r\n        }\r\n\r\n        getCenterPoint(useFinalPosition) {\r\n            const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\r\n            return {\r\n                x: horizontal ? (x + base) / 2 : x,\r\n                y: horizontal ? y : (y + base) / 2\r\n            };\r\n        }\r\n\r\n        getRange(axis) {\r\n            return axis === 'x' ? this.width / 2 : this.height / 2;\r\n        }\r\n    }\r\n\r\n    BarElement.id = 'bar';\r\n    BarElement.defaults = {\r\n        borderSkipped: 'start',\r\n        borderWidth: 0,\r\n        borderRadius: 0,\r\n        pointStyle: undefined\r\n    };\r\n    BarElement.defaultRoutes = {\r\n        backgroundColor: 'backgroundColor',\r\n        borderColor: 'borderColor'\r\n    };\r\n\r\n    var elements = /*#__PURE__*/Object.freeze({\r\n        __proto__: null,\r\n        ArcElement: ArcElement,\r\n        LineElement: LineElement,\r\n        PointElement: PointElement,\r\n        BarElement: BarElement\r\n    });\r\n\r\n    function lttbDecimation(data, availableWidth, options) {\r\n        const samples = options.samples || availableWidth;\r\n        const decimated = [];\r\n        const bucketWidth = (data.length - 2) / (samples - 2);\r\n        let sampledIndex = 0;\r\n        let a = 0;\r\n        let i, maxAreaPoint, maxArea, area, nextA;\r\n        decimated[sampledIndex++] = data[a];\r\n        for (i = 0; i < samples - 2; i++) {\r\n            let avgX = 0;\r\n            let avgY = 0;\r\n            let j;\r\n            const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1;\r\n            const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, data.length);\r\n            const avgRangeLength = avgRangeEnd - avgRangeStart;\r\n            for (j = avgRangeStart; j < avgRangeEnd; j++) {\r\n                avgX = data[j].x;\r\n                avgY = data[j].y;\r\n            }\r\n            avgX /= avgRangeLength;\r\n            avgY /= avgRangeLength;\r\n            const rangeOffs = Math.floor(i * bucketWidth) + 1;\r\n            const rangeTo = Math.floor((i + 1) * bucketWidth) + 1;\r\n            const {x: pointAx, y: pointAy} = data[a];\r\n            maxArea = area = -1;\r\n            for (j = rangeOffs; j < rangeTo; j++) {\r\n                area = 0.5 * Math.abs(\r\n                    (pointAx - avgX) * (data[j].y - pointAy) -\r\n                    (pointAx - data[j].x) * (avgY - pointAy)\r\n                );\r\n                if (area > maxArea) {\r\n                    maxArea = area;\r\n                    maxAreaPoint = data[j];\r\n                    nextA = j;\r\n                }\r\n            }\r\n            decimated[sampledIndex++] = maxAreaPoint;\r\n            a = nextA;\r\n        }\r\n        decimated[sampledIndex++] = data[data.length - 1];\r\n        return decimated;\r\n    }\r\n\r\n    function minMaxDecimation(data, availableWidth) {\r\n        let avgX = 0;\r\n        let countX = 0;\r\n        let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\r\n        const decimated = [];\r\n        const xMin = data[0].x;\r\n        const xMax = data[data.length - 1].x;\r\n        const dx = xMax - xMin;\r\n        for (i = 0; i < data.length; ++i) {\r\n            point = data[i];\r\n            x = (point.x - xMin) / dx * availableWidth;\r\n            y = point.y;\r\n            const truncX = x | 0;\r\n            if (truncX === prevX) {\r\n                if (y < minY) {\r\n                    minY = y;\r\n                    minIndex = i;\r\n                } else if (y > maxY) {\r\n                    maxY = y;\r\n                    maxIndex = i;\r\n                }\r\n                avgX = (countX * avgX + point.x) / ++countX;\r\n            } else {\r\n                const lastIndex = i - 1;\r\n                if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\r\n                    const intermediateIndex1 = Math.min(minIndex, maxIndex);\r\n                    const intermediateIndex2 = Math.max(minIndex, maxIndex);\r\n                    if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\r\n                        decimated.push({\r\n                            ...data[intermediateIndex1],\r\n                            x: avgX,\r\n                        });\r\n                    }\r\n                    if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\r\n                        decimated.push({\r\n                            ...data[intermediateIndex2],\r\n                            x: avgX\r\n                        });\r\n                    }\r\n                }\r\n                if (i > 0 && lastIndex !== startIndex) {\r\n                    decimated.push(data[lastIndex]);\r\n                }\r\n                decimated.push(point);\r\n                prevX = truncX;\r\n                countX = 0;\r\n                minY = maxY = y;\r\n                minIndex = maxIndex = startIndex = i;\r\n            }\r\n        }\r\n        return decimated;\r\n    }\r\n\r\n    var plugin_decimation = {\r\n        id: 'decimation',\r\n        defaults: {\r\n            algorithm: 'min-max',\r\n            enabled: false,\r\n        },\r\n        beforeElementsUpdate: (chart, args, options) => {\r\n            if (!options.enabled) {\r\n                return;\r\n            }\r\n            const availableWidth = chart.width;\r\n            chart.data.datasets.forEach((dataset, datasetIndex) => {\r\n                const {_data, indexAxis} = dataset;\r\n                const meta = chart.getDatasetMeta(datasetIndex);\r\n                const data = _data || dataset.data;\r\n                if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\r\n                    return;\r\n                }\r\n                if (meta.type !== 'line') {\r\n                    return;\r\n                }\r\n                const xAxis = chart.scales[meta.xAxisID];\r\n                if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\r\n                    return;\r\n                }\r\n                if (chart.options.parsing) {\r\n                    return;\r\n                }\r\n                if (data.length <= 4 * availableWidth) {\r\n                    return;\r\n                }\r\n                if (isNullOrUndef(_data)) {\r\n                    dataset._data = data;\r\n                    delete dataset.data;\r\n                    Object.defineProperty(dataset, 'data', {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: function () {\r\n                            return this._decimated;\r\n                        },\r\n                        set: function (d) {\r\n                            this._data = d;\r\n                        }\r\n                    });\r\n                }\r\n                let decimated;\r\n                switch (options.algorithm) {\r\n                    case 'lttb':\r\n                        decimated = lttbDecimation(data, availableWidth, options);\r\n                        break;\r\n                    case 'min-max':\r\n                        decimated = minMaxDecimation(data, availableWidth);\r\n                        break;\r\n                    default:\r\n                        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\r\n                }\r\n                dataset._decimated = decimated;\r\n            });\r\n        },\r\n        destroy(chart) {\r\n            chart.data.datasets.forEach((dataset) => {\r\n                if (dataset._decimated) {\r\n                    const data = dataset._data;\r\n                    delete dataset._decimated;\r\n                    delete dataset._data;\r\n                    Object.defineProperty(dataset, 'data', {value: data});\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    function getLineByIndex(chart, index) {\r\n        const meta = chart.getDatasetMeta(index);\r\n        const visible = meta && chart.isDatasetVisible(index);\r\n        return visible ? meta.dataset : null;\r\n    }\r\n\r\n    function parseFillOption(line) {\r\n        const options = line.options;\r\n        const fillOption = options.fill;\r\n        let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\r\n        if (fill === undefined) {\r\n            fill = !!options.backgroundColor;\r\n        }\r\n        if (fill === false || fill === null) {\r\n            return false;\r\n        }\r\n        if (fill === true) {\r\n            return 'origin';\r\n        }\r\n        return fill;\r\n    }\r\n\r\n    function decodeFill(line, index, count) {\r\n        const fill = parseFillOption(line);\r\n        if (isObject(fill)) {\r\n            return isNaN(fill.value) ? false : fill;\r\n        }\r\n        let target = parseFloat(fill);\r\n        if (isNumberFinite(target) && Math.floor(target) === target) {\r\n            if (fill[0] === '-' || fill[0] === '+') {\r\n                target = index + target;\r\n            }\r\n            if (target === index || target < 0 || target >= count) {\r\n                return false;\r\n            }\r\n            return target;\r\n        }\r\n        return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\r\n    }\r\n\r\n    function computeLinearBoundary(source) {\r\n        const {scale = {}, fill} = source;\r\n        let target = null;\r\n        let horizontal;\r\n        if (fill === 'start') {\r\n            target = scale.bottom;\r\n        } else if (fill === 'end') {\r\n            target = scale.top;\r\n        } else if (isObject(fill)) {\r\n            target = scale.getPixelForValue(fill.value);\r\n        } else if (scale.getBasePixel) {\r\n            target = scale.getBasePixel();\r\n        }\r\n        if (isNumberFinite(target)) {\r\n            horizontal = scale.isHorizontal();\r\n            return {\r\n                x: horizontal ? target : null,\r\n                y: horizontal ? null : target\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    class simpleArc {\r\n        constructor(opts) {\r\n            this.x = opts.x;\r\n            this.y = opts.y;\r\n            this.radius = opts.radius;\r\n        }\r\n\r\n        pathSegment(ctx, bounds, opts) {\r\n            const {x, y, radius} = this;\r\n            bounds = bounds || {start: 0, end: TAU};\r\n            ctx.arc(x, y, radius, bounds.end, bounds.start, true);\r\n            return !opts.bounds;\r\n        }\r\n\r\n        interpolate(point) {\r\n            const {x, y, radius} = this;\r\n            const angle = point.angle;\r\n            return {\r\n                x: x + Math.cos(angle) * radius,\r\n                y: y + Math.sin(angle) * radius,\r\n                angle\r\n            };\r\n        }\r\n    }\r\n\r\n    function computeCircularBoundary(source) {\r\n        const {scale, fill} = source;\r\n        const options = scale.options;\r\n        const length = scale.getLabels().length;\r\n        const target = [];\r\n        const start = options.reverse ? scale.max : scale.min;\r\n        const end = options.reverse ? scale.min : scale.max;\r\n        let i, center, value;\r\n        if (fill === 'start') {\r\n            value = start;\r\n        } else if (fill === 'end') {\r\n            value = end;\r\n        } else if (isObject(fill)) {\r\n            value = fill.value;\r\n        } else {\r\n            value = scale.getBaseValue();\r\n        }\r\n        if (options.grid.circular) {\r\n            center = scale.getPointPositionForValue(0, start);\r\n            return new simpleArc({\r\n                x: center.x,\r\n                y: center.y,\r\n                radius: scale.getDistanceFromCenterForValue(value)\r\n            });\r\n        }\r\n        for (i = 0; i < length; ++i) {\r\n            target.push(scale.getPointPositionForValue(i, value));\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function computeBoundary(source) {\r\n        const scale = source.scale || {};\r\n        if (scale.getPointPositionForValue) {\r\n            return computeCircularBoundary(source);\r\n        }\r\n        return computeLinearBoundary(source);\r\n    }\r\n\r\n    function pointsFromSegments(boundary, line) {\r\n        const {x = null, y = null} = boundary || {};\r\n        const linePoints = line.points;\r\n        const points = [];\r\n        line.segments.forEach((segment) => {\r\n            const first = linePoints[segment.start];\r\n            const last = linePoints[segment.end];\r\n            if (y !== null) {\r\n                points.push({x: first.x, y});\r\n                points.push({x: last.x, y});\r\n            } else if (x !== null) {\r\n                points.push({x, y: first.y});\r\n                points.push({x, y: last.y});\r\n            }\r\n        });\r\n        return points;\r\n    }\r\n\r\n    function buildStackLine(source) {\r\n        const {chart, scale, index, line} = source;\r\n        const points = [];\r\n        const segments = line.segments;\r\n        const sourcePoints = line.points;\r\n        const linesBelow = getLinesBelow(chart, index);\r\n        linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\r\n        for (let i = 0; i < segments.length; i++) {\r\n            const segment = segments[i];\r\n            for (let j = segment.start; j <= segment.end; j++) {\r\n                addPointsBelow(points, sourcePoints[j], linesBelow);\r\n            }\r\n        }\r\n        return new LineElement({points, options: {}});\r\n    }\r\n\r\n    const isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\r\n\r\n    function getLinesBelow(chart, index) {\r\n        const below = [];\r\n        const metas = chart.getSortedVisibleDatasetMetas();\r\n        for (let i = 0; i < metas.length; i++) {\r\n            const meta = metas[i];\r\n            if (meta.index === index) {\r\n                break;\r\n            }\r\n            if (isLineAndNotInHideAnimation(meta)) {\r\n                below.unshift(meta.dataset);\r\n            }\r\n        }\r\n        return below;\r\n    }\r\n\r\n    function addPointsBelow(points, sourcePoint, linesBelow) {\r\n        const postponed = [];\r\n        for (let j = 0; j < linesBelow.length; j++) {\r\n            const line = linesBelow[j];\r\n            const {first, last, point} = findPoint(line, sourcePoint, 'x');\r\n            if (!point || (first && last)) {\r\n                continue;\r\n            }\r\n            if (first) {\r\n                postponed.unshift(point);\r\n            } else {\r\n                points.push(point);\r\n                if (!last) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        points.push(...postponed);\r\n    }\r\n\r\n    function findPoint(line, sourcePoint, property) {\r\n        const point = line.interpolate(sourcePoint, property);\r\n        if (!point) {\r\n            return {};\r\n        }\r\n        const pointValue = point[property];\r\n        const segments = line.segments;\r\n        const linePoints = line.points;\r\n        let first = false;\r\n        let last = false;\r\n        for (let i = 0; i < segments.length; i++) {\r\n            const segment = segments[i];\r\n            const firstValue = linePoints[segment.start][property];\r\n            const lastValue = linePoints[segment.end][property];\r\n            if (pointValue >= firstValue && pointValue <= lastValue) {\r\n                first = pointValue === firstValue;\r\n                last = pointValue === lastValue;\r\n                break;\r\n            }\r\n        }\r\n        return {first, last, point};\r\n    }\r\n\r\n    function getTarget(source) {\r\n        const {chart, fill, line} = source;\r\n        if (isNumberFinite(fill)) {\r\n            return getLineByIndex(chart, fill);\r\n        }\r\n        if (fill === 'stack') {\r\n            return buildStackLine(source);\r\n        }\r\n        const boundary = computeBoundary(source);\r\n        if (boundary instanceof simpleArc) {\r\n            return boundary;\r\n        }\r\n        return createBoundaryLine(boundary, line);\r\n    }\r\n\r\n    function createBoundaryLine(boundary, line) {\r\n        let points = [];\r\n        let _loop = false;\r\n        if (isArray(boundary)) {\r\n            _loop = true;\r\n            points = boundary;\r\n        } else {\r\n            points = pointsFromSegments(boundary, line);\r\n        }\r\n        return points.length ? new LineElement({\r\n            points,\r\n            options: {tension: 0},\r\n            _loop,\r\n            _fullLoop: _loop\r\n        }) : null;\r\n    }\r\n\r\n    function resolveTarget(sources, index, propagate) {\r\n        const source = sources[index];\r\n        let fill = source.fill;\r\n        const visited = [index];\r\n        let target;\r\n        if (!propagate) {\r\n            return fill;\r\n        }\r\n        while (fill !== false && visited.indexOf(fill) === -1) {\r\n            if (!isNumberFinite(fill)) {\r\n                return fill;\r\n            }\r\n            target = sources[fill];\r\n            if (!target) {\r\n                return false;\r\n            }\r\n            if (target.visible) {\r\n                return fill;\r\n            }\r\n            visited.push(fill);\r\n            fill = target.fill;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function _clip(ctx, target, clipY) {\r\n        ctx.beginPath();\r\n        target.path(ctx);\r\n        ctx.lineTo(target.last().x, clipY);\r\n        ctx.lineTo(target.first().x, clipY);\r\n        ctx.closePath();\r\n        ctx.clip();\r\n    }\r\n\r\n    function getBounds(property, first, last, loop) {\r\n        if (loop) {\r\n            return;\r\n        }\r\n        let start = first[property];\r\n        let end = last[property];\r\n        if (property === 'angle') {\r\n            start = _normalizeAngle(start);\r\n            end = _normalizeAngle(end);\r\n        }\r\n        return {property, start, end};\r\n    }\r\n\r\n    function _getEdge(a, b, prop, fn) {\r\n        if (a && b) {\r\n            return fn(a[prop], b[prop]);\r\n        }\r\n        return a ? a[prop] : b ? b[prop] : 0;\r\n    }\r\n\r\n    function _segments(line, target, property) {\r\n        const segments = line.segments;\r\n        const points = line.points;\r\n        const tpoints = target.points;\r\n        const parts = [];\r\n        for (let i = 0; i < segments.length; i++) {\r\n            const segment = segments[i];\r\n            const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\r\n            if (!target.segments) {\r\n                parts.push({\r\n                    source: segment,\r\n                    target: bounds,\r\n                    start: points[segment.start],\r\n                    end: points[segment.end]\r\n                });\r\n                continue;\r\n            }\r\n            const subs = _boundSegments(target, bounds);\r\n            for (let j = 0; j < subs.length; ++j) {\r\n                const sub = subs[j];\r\n                const subBounds = getBounds(property, tpoints[sub.start], tpoints[sub.end], sub.loop);\r\n                const fillSources = _boundSegment(segment, points, subBounds);\r\n                for (let k = 0; k < fillSources.length; k++) {\r\n                    parts.push({\r\n                        source: fillSources[k],\r\n                        target: sub,\r\n                        start: {\r\n                            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\r\n                        },\r\n                        end: {\r\n                            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return parts;\r\n    }\r\n\r\n    function clipBounds(ctx, scale, bounds) {\r\n        const {top, bottom} = scale.chart.chartArea;\r\n        const {property, start, end} = bounds || {};\r\n        if (property === 'x') {\r\n            ctx.beginPath();\r\n            ctx.rect(start, top, end - start, bottom - top);\r\n            ctx.clip();\r\n        }\r\n    }\r\n\r\n    function interpolatedLineTo(ctx, target, point, property) {\r\n        const interpolatedPoint = target.interpolate(point, property);\r\n        if (interpolatedPoint) {\r\n            ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\r\n        }\r\n    }\r\n\r\n    function _fill(ctx, cfg) {\r\n        const {line, target, property, color, scale} = cfg;\r\n        const segments = _segments(line, target, property);\r\n        ctx.fillStyle = color;\r\n        for (let i = 0, ilen = segments.length; i < ilen; ++i) {\r\n            const {source: src, target: tgt, start, end} = segments[i];\r\n            ctx.save();\r\n            clipBounds(ctx, scale, getBounds(property, start, end));\r\n            ctx.beginPath();\r\n            const lineLoop = !!line.pathSegment(ctx, src);\r\n            if (lineLoop) {\r\n                ctx.closePath();\r\n            } else {\r\n                interpolatedLineTo(ctx, target, end, property);\r\n            }\r\n            const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\r\n            const loop = lineLoop && targetLoop;\r\n            if (!loop) {\r\n                interpolatedLineTo(ctx, target, start, property);\r\n            }\r\n            ctx.closePath();\r\n            ctx.fill(loop ? 'evenodd' : 'nonzero');\r\n            ctx.restore();\r\n        }\r\n    }\r\n\r\n    function doFill(ctx, cfg) {\r\n        const {line, target, above, below, area, scale} = cfg;\r\n        const property = line._loop ? 'angle' : 'x';\r\n        ctx.save();\r\n        if (property === 'x' && below !== above) {\r\n            _clip(ctx, target, area.top);\r\n            _fill(ctx, {line, target, color: above, scale, property});\r\n            ctx.restore();\r\n            ctx.save();\r\n            _clip(ctx, target, area.bottom);\r\n        }\r\n        _fill(ctx, {line, target, color: below, scale, property});\r\n        ctx.restore();\r\n    }\r\n\r\n    var plugin_filler = {\r\n        id: 'filler',\r\n        afterDatasetsUpdate(chart, _args, options) {\r\n            const count = (chart.data.datasets || []).length;\r\n            const propagate = options.propagate;\r\n            const sources = [];\r\n            let meta, i, line, source;\r\n            for (i = 0; i < count; ++i) {\r\n                meta = chart.getDatasetMeta(i);\r\n                line = meta.dataset;\r\n                source = null;\r\n                if (line && line.options && line instanceof LineElement) {\r\n                    source = {\r\n                        visible: chart.isDatasetVisible(i),\r\n                        index: i,\r\n                        fill: decodeFill(line, i, count),\r\n                        chart,\r\n                        scale: meta.vScale,\r\n                        line\r\n                    };\r\n                }\r\n                meta.$filler = source;\r\n                sources.push(source);\r\n            }\r\n            for (i = 0; i < count; ++i) {\r\n                source = sources[i];\r\n                if (!source || source.fill === false) {\r\n                    continue;\r\n                }\r\n                source.fill = resolveTarget(sources, i, propagate);\r\n            }\r\n        },\r\n        beforeDatasetsDraw(chart) {\r\n            const metasets = chart.getSortedVisibleDatasetMetas();\r\n            const area = chart.chartArea;\r\n            let i, meta;\r\n            for (i = metasets.length - 1; i >= 0; --i) {\r\n                meta = metasets[i].$filler;\r\n                if (meta) {\r\n                    meta.line.updateControlPoints(area);\r\n                }\r\n            }\r\n        },\r\n        beforeDatasetDraw(chart, args) {\r\n            const area = chart.chartArea;\r\n            const ctx = chart.ctx;\r\n            const source = args.meta.$filler;\r\n            if (!source || source.fill === false) {\r\n                return;\r\n            }\r\n            const target = getTarget(source);\r\n            const {line, scale} = source;\r\n            const lineOpts = line.options;\r\n            const fillOption = lineOpts.fill;\r\n            const color = lineOpts.backgroundColor;\r\n            const {above = color, below = color} = fillOption || {};\r\n            if (target && line.points.length) {\r\n                clipArea(ctx, area);\r\n                doFill(ctx, {line, target, above, below, area, scale});\r\n                unclipArea(ctx);\r\n            }\r\n        },\r\n        defaults: {\r\n            propagate: true\r\n        }\r\n    };\r\n\r\n    const getBoxSize = (labelOpts, fontSize) => {\r\n        let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\r\n        if (labelOpts.usePointStyle) {\r\n            boxHeight = Math.min(boxHeight, fontSize);\r\n            boxWidth = Math.min(boxWidth, fontSize);\r\n        }\r\n        return {\r\n            boxWidth,\r\n            boxHeight,\r\n            itemHeight: Math.max(fontSize, boxHeight)\r\n        };\r\n    };\r\n    const itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\r\n\r\n    class Legend extends Element {\r\n        constructor(config) {\r\n            super();\r\n            this._added = false;\r\n            this.legendHitBoxes = [];\r\n            this._hoveredItem = null;\r\n            this.doughnutMode = false;\r\n            this.chart = config.chart;\r\n            this.options = config.options;\r\n            this.ctx = config.ctx;\r\n            this.legendItems = undefined;\r\n            this.columnSizes = undefined;\r\n            this.lineWidths = undefined;\r\n            this.maxHeight = undefined;\r\n            this.maxWidth = undefined;\r\n            this.top = undefined;\r\n            this.bottom = undefined;\r\n            this.left = undefined;\r\n            this.right = undefined;\r\n            this.height = undefined;\r\n            this.width = undefined;\r\n            this._margins = undefined;\r\n            this.position = undefined;\r\n            this.weight = undefined;\r\n            this.fullSize = undefined;\r\n        }\r\n\r\n        update(maxWidth, maxHeight, margins) {\r\n            const me = this;\r\n            me.maxWidth = maxWidth;\r\n            me.maxHeight = maxHeight;\r\n            me._margins = margins;\r\n            me.setDimensions();\r\n            me.buildLabels();\r\n            me.fit();\r\n        }\r\n\r\n        setDimensions() {\r\n            const me = this;\r\n            if (me.isHorizontal()) {\r\n                me.width = me.maxWidth;\r\n                me.left = 0;\r\n                me.right = me.width;\r\n            } else {\r\n                me.height = me.maxHeight;\r\n                me.top = 0;\r\n                me.bottom = me.height;\r\n            }\r\n        }\r\n\r\n        buildLabels() {\r\n            const me = this;\r\n            const labelOpts = me.options.labels || {};\r\n            let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\r\n            if (labelOpts.filter) {\r\n                legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\r\n            }\r\n            if (labelOpts.sort) {\r\n                legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\r\n            }\r\n            if (me.options.reverse) {\r\n                legendItems.reverse();\r\n            }\r\n            me.legendItems = legendItems;\r\n        }\r\n\r\n        fit() {\r\n            const me = this;\r\n            const {options, ctx} = me;\r\n            if (!options.display) {\r\n                me.width = me.height = 0;\r\n                return;\r\n            }\r\n            const labelOpts = options.labels;\r\n            const labelFont = toFont(labelOpts.font);\r\n            const fontSize = labelFont.size;\r\n            const titleHeight = me._computeTitleHeight();\r\n            const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n            let width, height;\r\n            ctx.font = labelFont.string;\r\n            if (me.isHorizontal()) {\r\n                width = me.maxWidth;\r\n                height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n            } else {\r\n                height = me.maxHeight;\r\n                width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n            }\r\n            me.width = Math.min(width, options.maxWidth || me.maxWidth);\r\n            me.height = Math.min(height, options.maxHeight || me.maxHeight);\r\n        }\r\n\r\n        _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\r\n            const me = this;\r\n            const {ctx, maxWidth, options: {labels: {padding}}} = me;\r\n            const hitboxes = me.legendHitBoxes = [];\r\n            const lineWidths = me.lineWidths = [0];\r\n            const lineHeight = itemHeight + padding;\r\n            let totalHeight = titleHeight;\r\n            ctx.textAlign = 'left';\r\n            ctx.textBaseline = 'middle';\r\n            let row = -1;\r\n            let top = -lineHeight;\r\n            me.legendItems.forEach((legendItem, i) => {\r\n                const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n                if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\r\n                    totalHeight += lineHeight;\r\n                    lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n                    top += lineHeight;\r\n                    row++;\r\n                }\r\n                hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\r\n                lineWidths[lineWidths.length - 1] += itemWidth + padding;\r\n            });\r\n            return totalHeight;\r\n        }\r\n\r\n        _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\r\n            const me = this;\r\n            const {ctx, maxHeight, options: {labels: {padding}}} = me;\r\n            const hitboxes = me.legendHitBoxes = [];\r\n            const columnSizes = me.columnSizes = [];\r\n            const heightLimit = maxHeight - titleHeight;\r\n            let totalWidth = padding;\r\n            let currentColWidth = 0;\r\n            let currentColHeight = 0;\r\n            let left = 0;\r\n            let top = 0;\r\n            let col = 0;\r\n            me.legendItems.forEach((legendItem, i) => {\r\n                const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n                if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\r\n                    totalWidth += currentColWidth + padding;\r\n                    columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n                    left += currentColWidth + padding;\r\n                    col++;\r\n                    top = 0;\r\n                    currentColWidth = currentColHeight = 0;\r\n                }\r\n                currentColWidth = Math.max(currentColWidth, itemWidth);\r\n                currentColHeight += fontSize + padding;\r\n                hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\r\n                top += itemHeight + padding;\r\n            });\r\n            totalWidth += currentColWidth;\r\n            columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n            return totalWidth;\r\n        }\r\n\r\n        adjustHitBoxes() {\r\n            const me = this;\r\n            if (!me.options.display) {\r\n                return;\r\n            }\r\n            const titleHeight = me._computeTitleHeight();\r\n            const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\r\n            if (this.isHorizontal()) {\r\n                let row = 0;\r\n                let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\r\n                for (const hitbox of hitboxes) {\r\n                    if (row !== hitbox.row) {\r\n                        row = hitbox.row;\r\n                        left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\r\n                    }\r\n                    hitbox.top += me.top + titleHeight + padding;\r\n                    hitbox.left = left;\r\n                    left += hitbox.width + padding;\r\n                }\r\n            } else {\r\n                let col = 0;\r\n                let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\r\n                for (const hitbox of hitboxes) {\r\n                    if (hitbox.col !== col) {\r\n                        col = hitbox.col;\r\n                        top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\r\n                    }\r\n                    hitbox.top = top;\r\n                    hitbox.left += me.left + padding;\r\n                    top += hitbox.height + padding;\r\n                }\r\n            }\r\n        }\r\n\r\n        isHorizontal() {\r\n            return this.options.position === 'top' || this.options.position === 'bottom';\r\n        }\r\n\r\n        draw() {\r\n            const me = this;\r\n            if (me.options.display) {\r\n                const ctx = me.ctx;\r\n                clipArea(ctx, me);\r\n                me._draw();\r\n                unclipArea(ctx);\r\n            }\r\n        }\r\n\r\n        _draw() {\r\n            const me = this;\r\n            const {options: opts, columnSizes, lineWidths, ctx} = me;\r\n            const {align, labels: labelOpts} = opts;\r\n            const defaultColor = defaults.color;\r\n            const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\r\n            const labelFont = toFont(labelOpts.font);\r\n            const {color: fontColor, padding} = labelOpts;\r\n            const fontSize = labelFont.size;\r\n            const halfFontSize = fontSize / 2;\r\n            let cursor;\r\n            me.drawTitle();\r\n            ctx.textAlign = rtlHelper.textAlign('left');\r\n            ctx.textBaseline = 'middle';\r\n            ctx.lineWidth = 0.5;\r\n            ctx.strokeStyle = fontColor;\r\n            ctx.fillStyle = fontColor;\r\n            ctx.font = labelFont.string;\r\n            const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n            const drawLegendBox = function (x, y, legendItem) {\r\n                if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\r\n                    return;\r\n                }\r\n                ctx.save();\r\n                const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\r\n                ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n                ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\r\n                ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\r\n                ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\r\n                ctx.lineWidth = lineWidth;\r\n                ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n                ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\r\n                if (labelOpts.usePointStyle) {\r\n                    const drawOptions = {\r\n                        radius: boxWidth * Math.SQRT2 / 2,\r\n                        pointStyle: legendItem.pointStyle,\r\n                        rotation: legendItem.rotation,\r\n                        borderWidth: lineWidth\r\n                    };\r\n                    const centerX = rtlHelper.xPlus(x, boxWidth / 2);\r\n                    const centerY = y + halfFontSize;\r\n                    drawPoint(ctx, drawOptions, centerX, centerY);\r\n                } else {\r\n                    const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\r\n                    ctx.fillRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\r\n                    if (lineWidth !== 0) {\r\n                        ctx.strokeRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\r\n                    }\r\n                }\r\n                ctx.restore();\r\n            };\r\n            const fillText = function (x, y, legendItem) {\r\n                renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\r\n                    strikethrough: legendItem.hidden,\r\n                    textAlign: legendItem.textAlign\r\n                });\r\n            };\r\n            const isHorizontal = me.isHorizontal();\r\n            const titleHeight = this._computeTitleHeight();\r\n            if (isHorizontal) {\r\n                cursor = {\r\n                    x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\r\n                    y: me.top + padding + titleHeight,\r\n                    line: 0\r\n                };\r\n            } else {\r\n                cursor = {\r\n                    x: me.left + padding,\r\n                    y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\r\n                    line: 0\r\n                };\r\n            }\r\n            overrideTextDirection(me.ctx, opts.textDirection);\r\n            const lineHeight = itemHeight + padding;\r\n            me.legendItems.forEach((legendItem, i) => {\r\n                const textWidth = ctx.measureText(legendItem.text).width;\r\n                const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\r\n                const width = boxWidth + (fontSize / 2) + textWidth;\r\n                let x = cursor.x;\r\n                let y = cursor.y;\r\n                rtlHelper.setWidth(me.width);\r\n                if (isHorizontal) {\r\n                    if (i > 0 && x + width + padding > me.right) {\r\n                        y = cursor.y += lineHeight;\r\n                        cursor.line++;\r\n                        x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\r\n                    }\r\n                } else if (i > 0 && y + lineHeight > me.bottom) {\r\n                    x = cursor.x = x + columnSizes[cursor.line].width + padding;\r\n                    cursor.line++;\r\n                    y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\r\n                }\r\n                const realX = rtlHelper.x(x);\r\n                drawLegendBox(realX, y, legendItem);\r\n                x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\r\n                fillText(rtlHelper.x(x), y, legendItem);\r\n                if (isHorizontal) {\r\n                    cursor.x += width + padding;\r\n                } else {\r\n                    cursor.y += lineHeight;\r\n                }\r\n            });\r\n            restoreTextDirection(me.ctx, opts.textDirection);\r\n        }\r\n\r\n        drawTitle() {\r\n            const me = this;\r\n            const opts = me.options;\r\n            const titleOpts = opts.title;\r\n            const titleFont = toFont(titleOpts.font);\r\n            const titlePadding = toPadding(titleOpts.padding);\r\n            if (!titleOpts.display) {\r\n                return;\r\n            }\r\n            const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\r\n            const ctx = me.ctx;\r\n            const position = titleOpts.position;\r\n            const halfFontSize = titleFont.size / 2;\r\n            const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\r\n            let y;\r\n            let left = me.left;\r\n            let maxWidth = me.width;\r\n            if (this.isHorizontal()) {\r\n                maxWidth = Math.max(...me.lineWidths);\r\n                y = me.top + topPaddingPlusHalfFontSize;\r\n                left = _alignStartEnd(opts.align, left, me.right - maxWidth);\r\n            } else {\r\n                const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\r\n                y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\r\n            }\r\n            const x = _alignStartEnd(position, left, left + maxWidth);\r\n            ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\r\n            ctx.textBaseline = 'middle';\r\n            ctx.strokeStyle = titleOpts.color;\r\n            ctx.fillStyle = titleOpts.color;\r\n            ctx.font = titleFont.string;\r\n            renderText(ctx, titleOpts.text, x, y, titleFont);\r\n        }\r\n\r\n        _computeTitleHeight() {\r\n            const titleOpts = this.options.title;\r\n            const titleFont = toFont(titleOpts.font);\r\n            const titlePadding = toPadding(titleOpts.padding);\r\n            return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\r\n        }\r\n\r\n        _getLegendItemAt(x, y) {\r\n            const me = this;\r\n            let i, hitBox, lh;\r\n            if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n                lh = me.legendHitBoxes;\r\n                for (i = 0; i < lh.length; ++i) {\r\n                    hitBox = lh[i];\r\n                    if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n                        return me.legendItems[i];\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        handleEvent(e) {\r\n            const me = this;\r\n            const opts = me.options;\r\n            if (!isListened(e.type, opts)) {\r\n                return;\r\n            }\r\n            const hoveredItem = me._getLegendItemAt(e.x, e.y);\r\n            if (e.type === 'mousemove') {\r\n                const previous = me._hoveredItem;\r\n                const sameItem = itemsEqual(previous, hoveredItem);\r\n                if (previous && !sameItem) {\r\n                    callback(opts.onLeave, [e, previous, me], me);\r\n                }\r\n                me._hoveredItem = hoveredItem;\r\n                if (hoveredItem && !sameItem) {\r\n                    callback(opts.onHover, [e, hoveredItem, me], me);\r\n                }\r\n            } else if (hoveredItem) {\r\n                callback(opts.onClick, [e, hoveredItem, me], me);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isListened(type, opts) {\r\n        if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\r\n            return true;\r\n        }\r\n        if (opts.onClick && (type === 'click' || type === 'mouseup')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    var plugin_legend = {\r\n        id: 'legend',\r\n        _element: Legend,\r\n        start(chart, _args, options) {\r\n            const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\r\n            layouts.configure(chart, legend, options);\r\n            layouts.addBox(chart, legend);\r\n        },\r\n        stop(chart) {\r\n            layouts.removeBox(chart, chart.legend);\r\n            delete chart.legend;\r\n        },\r\n        beforeUpdate(chart, _args, options) {\r\n            const legend = chart.legend;\r\n            layouts.configure(chart, legend, options);\r\n            legend.options = options;\r\n        },\r\n        afterUpdate(chart) {\r\n            const legend = chart.legend;\r\n            legend.buildLabels();\r\n            legend.adjustHitBoxes();\r\n        },\r\n        afterEvent(chart, args) {\r\n            if (!args.replay) {\r\n                chart.legend.handleEvent(args.event);\r\n            }\r\n        },\r\n        defaults: {\r\n            display: true,\r\n            position: 'top',\r\n            align: 'center',\r\n            fullSize: true,\r\n            reverse: false,\r\n            weight: 1000,\r\n            onClick(e, legendItem, legend) {\r\n                const index = legendItem.datasetIndex;\r\n                const ci = legend.chart;\r\n                if (ci.isDatasetVisible(index)) {\r\n                    ci.hide(index);\r\n                    legendItem.hidden = true;\r\n                } else {\r\n                    ci.show(index);\r\n                    legendItem.hidden = false;\r\n                }\r\n            },\r\n            onHover: null,\r\n            onLeave: null,\r\n            labels: {\r\n                color: (ctx) => ctx.chart.options.color,\r\n                boxWidth: 40,\r\n                padding: 10,\r\n                generateLabels(chart) {\r\n                    const datasets = chart.data.datasets;\r\n                    const {labels: {usePointStyle, pointStyle, textAlign}} = chart.legend.options;\r\n                    return chart._getSortedDatasetMetas().map((meta) => {\r\n                        const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\r\n                        const borderWidth = toPadding(style.borderWidth);\r\n                        return {\r\n                            text: datasets[meta.index].label,\r\n                            fillStyle: style.backgroundColor,\r\n                            hidden: !meta.visible,\r\n                            lineCap: style.borderCapStyle,\r\n                            lineDash: style.borderDash,\r\n                            lineDashOffset: style.borderDashOffset,\r\n                            lineJoin: style.borderJoinStyle,\r\n                            lineWidth: (borderWidth.width + borderWidth.height) / 4,\r\n                            strokeStyle: style.borderColor,\r\n                            pointStyle: pointStyle || style.pointStyle,\r\n                            rotation: style.rotation,\r\n                            textAlign: textAlign || style.textAlign,\r\n                            datasetIndex: meta.index\r\n                        };\r\n                    }, this);\r\n                }\r\n            },\r\n            title: {\r\n                color: (ctx) => ctx.chart.options.color,\r\n                display: false,\r\n                position: 'center',\r\n                text: '',\r\n            }\r\n        },\r\n        descriptors: {\r\n            _scriptable: (name) => !name.startsWith('on'),\r\n            labels: {\r\n                _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\r\n            }\r\n        },\r\n    };\r\n\r\n    class Title extends Element {\r\n        constructor(config) {\r\n            super();\r\n            this.chart = config.chart;\r\n            this.options = config.options;\r\n            this.ctx = config.ctx;\r\n            this._padding = undefined;\r\n            this.top = undefined;\r\n            this.bottom = undefined;\r\n            this.left = undefined;\r\n            this.right = undefined;\r\n            this.width = undefined;\r\n            this.height = undefined;\r\n            this.position = undefined;\r\n            this.weight = undefined;\r\n            this.fullSize = undefined;\r\n        }\r\n\r\n        update(maxWidth, maxHeight) {\r\n            const me = this;\r\n            const opts = me.options;\r\n            me.left = 0;\r\n            me.top = 0;\r\n            if (!opts.display) {\r\n                me.width = me.height = me.right = me.bottom = 0;\r\n                return;\r\n            }\r\n            me.width = me.right = maxWidth;\r\n            me.height = me.bottom = maxHeight;\r\n            const lineCount = isArray(opts.text) ? opts.text.length : 1;\r\n            me._padding = toPadding(opts.padding);\r\n            const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\r\n            if (me.isHorizontal()) {\r\n                me.height = textSize;\r\n            } else {\r\n                me.width = textSize;\r\n            }\r\n        }\r\n\r\n        isHorizontal() {\r\n            const pos = this.options.position;\r\n            return pos === 'top' || pos === 'bottom';\r\n        }\r\n\r\n        _drawArgs(offset) {\r\n            const {top, left, bottom, right, options} = this;\r\n            const align = options.align;\r\n            let rotation = 0;\r\n            let maxWidth, titleX, titleY;\r\n            if (this.isHorizontal()) {\r\n                titleX = _alignStartEnd(align, left, right);\r\n                titleY = top + offset;\r\n                maxWidth = right - left;\r\n            } else {\r\n                if (options.position === 'left') {\r\n                    titleX = left + offset;\r\n                    titleY = _alignStartEnd(align, bottom, top);\r\n                    rotation = PI * -0.5;\r\n                } else {\r\n                    titleX = right - offset;\r\n                    titleY = _alignStartEnd(align, top, bottom);\r\n                    rotation = PI * 0.5;\r\n                }\r\n                maxWidth = bottom - top;\r\n            }\r\n            return {titleX, titleY, maxWidth, rotation};\r\n        }\r\n\r\n        draw() {\r\n            const me = this;\r\n            const ctx = me.ctx;\r\n            const opts = me.options;\r\n            if (!opts.display) {\r\n                return;\r\n            }\r\n            const fontOpts = toFont(opts.font);\r\n            const lineHeight = fontOpts.lineHeight;\r\n            const offset = lineHeight / 2 + me._padding.top;\r\n            const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\r\n            renderText(ctx, opts.text, 0, 0, fontOpts, {\r\n                color: opts.color,\r\n                maxWidth,\r\n                rotation,\r\n                textAlign: _toLeftRightCenter(opts.align),\r\n                textBaseline: 'middle',\r\n                translation: [titleX, titleY],\r\n            });\r\n        }\r\n    }\r\n\r\n    function createTitle(chart, titleOpts) {\r\n        const title = new Title({\r\n            ctx: chart.ctx,\r\n            options: titleOpts,\r\n            chart\r\n        });\r\n        layouts.configure(chart, title, titleOpts);\r\n        layouts.addBox(chart, title);\r\n        chart.titleBlock = title;\r\n    }\r\n\r\n    var plugin_title = {\r\n        id: 'title',\r\n        _element: Title,\r\n        start(chart, _args, options) {\r\n            createTitle(chart, options);\r\n        },\r\n        stop(chart) {\r\n            const titleBlock = chart.titleBlock;\r\n            layouts.removeBox(chart, titleBlock);\r\n            delete chart.titleBlock;\r\n        },\r\n        beforeUpdate(chart, _args, options) {\r\n            const title = chart.titleBlock;\r\n            layouts.configure(chart, title, options);\r\n            title.options = options;\r\n        },\r\n        defaults: {\r\n            align: 'center',\r\n            display: false,\r\n            font: {\r\n                style: 'bold',\r\n            },\r\n            fullSize: true,\r\n            padding: 10,\r\n            position: 'top',\r\n            text: '',\r\n            weight: 2000\r\n        },\r\n        defaultRoutes: {\r\n            color: 'color'\r\n        },\r\n        descriptors: {\r\n            _scriptable: true,\r\n            _indexable: false,\r\n        },\r\n    };\r\n\r\n    const positioners = {\r\n        average(items) {\r\n            if (!items.length) {\r\n                return false;\r\n            }\r\n            let i, len;\r\n            let x = 0;\r\n            let y = 0;\r\n            let count = 0;\r\n            for (i = 0, len = items.length; i < len; ++i) {\r\n                const el = items[i].element;\r\n                if (el && el.hasValue()) {\r\n                    const pos = el.tooltipPosition();\r\n                    x += pos.x;\r\n                    y += pos.y;\r\n                    ++count;\r\n                }\r\n            }\r\n            return {\r\n                x: x / count,\r\n                y: y / count\r\n            };\r\n        },\r\n        nearest(items, eventPosition) {\r\n            let x = eventPosition.x;\r\n            let y = eventPosition.y;\r\n            let minDistance = Number.POSITIVE_INFINITY;\r\n            let i, len, nearestElement;\r\n            for (i = 0, len = items.length; i < len; ++i) {\r\n                const el = items[i].element;\r\n                if (el && el.hasValue()) {\r\n                    const center = el.getCenterPoint();\r\n                    const d = distanceBetweenPoints(eventPosition, center);\r\n                    if (d < minDistance) {\r\n                        minDistance = d;\r\n                        nearestElement = el;\r\n                    }\r\n                }\r\n            }\r\n            if (nearestElement) {\r\n                const tp = nearestElement.tooltipPosition();\r\n                x = tp.x;\r\n                y = tp.y;\r\n            }\r\n            return {\r\n                x,\r\n                y\r\n            };\r\n        }\r\n    };\r\n\r\n    function pushOrConcat(base, toPush) {\r\n        if (toPush) {\r\n            if (isArray(toPush)) {\r\n                Array.prototype.push.apply(base, toPush);\r\n            } else {\r\n                base.push(toPush);\r\n            }\r\n        }\r\n        return base;\r\n    }\r\n\r\n    function splitNewlines(str) {\r\n        if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\r\n            return str.split('\\n');\r\n        }\r\n        return str;\r\n    }\r\n\r\n    function createTooltipItem(chart, item) {\r\n        const {element, datasetIndex, index} = item;\r\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n        const {label, value} = controller.getLabelAndValue(index);\r\n        return {\r\n            chart,\r\n            label,\r\n            parsed: controller.getParsed(index),\r\n            raw: chart.data.datasets[datasetIndex].data[index],\r\n            formattedValue: value,\r\n            dataset: controller.getDataset(),\r\n            dataIndex: index,\r\n            datasetIndex,\r\n            element\r\n        };\r\n    }\r\n\r\n    function getTooltipSize(tooltip, options) {\r\n        const ctx = tooltip._chart.ctx;\r\n        const {body, footer, title} = tooltip;\r\n        const {boxWidth, boxHeight} = options;\r\n        const bodyFont = toFont(options.bodyFont);\r\n        const titleFont = toFont(options.titleFont);\r\n        const footerFont = toFont(options.footerFont);\r\n        const titleLineCount = title.length;\r\n        const footerLineCount = footer.length;\r\n        const bodyLineItemCount = body.length;\r\n        const padding = toPadding(options.padding);\r\n        let height = padding.height;\r\n        let width = 0;\r\n        let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\r\n        combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\r\n        if (titleLineCount) {\r\n            height += titleLineCount * titleFont.lineHeight\r\n                + (titleLineCount - 1) * options.titleSpacing\r\n                + options.titleMarginBottom;\r\n        }\r\n        if (combinedBodyLength) {\r\n            const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\r\n            height += bodyLineItemCount * bodyLineHeight\r\n                + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\r\n                + (combinedBodyLength - 1) * options.bodySpacing;\r\n        }\r\n        if (footerLineCount) {\r\n            height += options.footerMarginTop\r\n                + footerLineCount * footerFont.lineHeight\r\n                + (footerLineCount - 1) * options.footerSpacing;\r\n        }\r\n        let widthPadding = 0;\r\n        const maxLineWidth = function (line) {\r\n            width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n        };\r\n        ctx.save();\r\n        ctx.font = titleFont.string;\r\n        each(tooltip.title, maxLineWidth);\r\n        ctx.font = bodyFont.string;\r\n        each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\r\n        widthPadding = options.displayColors ? (boxWidth + 2) : 0;\r\n        each(body, (bodyItem) => {\r\n            each(bodyItem.before, maxLineWidth);\r\n            each(bodyItem.lines, maxLineWidth);\r\n            each(bodyItem.after, maxLineWidth);\r\n        });\r\n        widthPadding = 0;\r\n        ctx.font = footerFont.string;\r\n        each(tooltip.footer, maxLineWidth);\r\n        ctx.restore();\r\n        width += padding.width;\r\n        return {width, height};\r\n    }\r\n\r\n    function determineYAlign(chart, size) {\r\n        const {y, height} = size;\r\n        if (y < height / 2) {\r\n            return 'top';\r\n        } else if (y > (chart.height - height / 2)) {\r\n            return 'bottom';\r\n        }\r\n        return 'center';\r\n    }\r\n\r\n    function doesNotFitWithAlign(xAlign, chart, options, size) {\r\n        const {x, width} = size;\r\n        const caret = options.caretSize + options.caretPadding;\r\n        if (xAlign === 'left' && x + width + caret > chart.width) {\r\n            return true;\r\n        }\r\n        if (xAlign === 'right' && x - width - caret < 0) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function determineXAlign(chart, options, size, yAlign) {\r\n        const {x, width} = size;\r\n        const {width: chartWidth, chartArea: {left, right}} = chart;\r\n        let xAlign = 'center';\r\n        if (yAlign === 'center') {\r\n            xAlign = x <= (left + right) / 2 ? 'left' : 'right';\r\n        } else if (x <= width / 2) {\r\n            xAlign = 'left';\r\n        } else if (x >= chartWidth - width / 2) {\r\n            xAlign = 'right';\r\n        }\r\n        if (doesNotFitWithAlign(xAlign, chart, options, size)) {\r\n            xAlign = 'center';\r\n        }\r\n        return xAlign;\r\n    }\r\n\r\n    function determineAlignment(chart, options, size) {\r\n        const yAlign = options.yAlign || determineYAlign(chart, size);\r\n        return {\r\n            xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\r\n            yAlign\r\n        };\r\n    }\r\n\r\n    function alignX(size, xAlign) {\r\n        let {x, width} = size;\r\n        if (xAlign === 'right') {\r\n            x -= width;\r\n        } else if (xAlign === 'center') {\r\n            x -= (width / 2);\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function alignY(size, yAlign, paddingAndSize) {\r\n        let {y, height} = size;\r\n        if (yAlign === 'top') {\r\n            y += paddingAndSize;\r\n        } else if (yAlign === 'bottom') {\r\n            y -= height + paddingAndSize;\r\n        } else {\r\n            y -= (height / 2);\r\n        }\r\n        return y;\r\n    }\r\n\r\n    function getBackgroundPoint(options, size, alignment, chart) {\r\n        const {caretSize, caretPadding, cornerRadius} = options;\r\n        const {xAlign, yAlign} = alignment;\r\n        const paddingAndSize = caretSize + caretPadding;\r\n        const radiusAndPadding = cornerRadius + caretPadding;\r\n        let x = alignX(size, xAlign);\r\n        const y = alignY(size, yAlign, paddingAndSize);\r\n        if (yAlign === 'center') {\r\n            if (xAlign === 'left') {\r\n                x += paddingAndSize;\r\n            } else if (xAlign === 'right') {\r\n                x -= paddingAndSize;\r\n            }\r\n        } else if (xAlign === 'left') {\r\n            x -= radiusAndPadding;\r\n        } else if (xAlign === 'right') {\r\n            x += radiusAndPadding;\r\n        }\r\n        return {\r\n            x: _limitValue(x, 0, chart.width - size.width),\r\n            y: _limitValue(y, 0, chart.height - size.height)\r\n        };\r\n    }\r\n\r\n    function getAlignedX(tooltip, align, options) {\r\n        const padding = toPadding(options.padding);\r\n        return align === 'center'\r\n            ? tooltip.x + tooltip.width / 2\r\n            : align === 'right'\r\n                ? tooltip.x + tooltip.width - padding.right\r\n                : tooltip.x + padding.left;\r\n    }\r\n\r\n    function getBeforeAfterBodyLines(callback) {\r\n        return pushOrConcat([], splitNewlines(callback));\r\n    }\r\n\r\n    function createTooltipContext(parent, tooltip, tooltipItems) {\r\n        return Object.assign(Object.create(parent), {\r\n            tooltip,\r\n            tooltipItems,\r\n            type: 'tooltip'\r\n        });\r\n    }\r\n\r\n    function overrideCallbacks(callbacks, context) {\r\n        const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\r\n        return override ? callbacks.override(override) : callbacks;\r\n    }\r\n\r\n    class Tooltip extends Element {\r\n        constructor(config) {\r\n            super();\r\n            this.opacity = 0;\r\n            this._active = [];\r\n            this._chart = config._chart;\r\n            this._eventPosition = undefined;\r\n            this._size = undefined;\r\n            this._cachedAnimations = undefined;\r\n            this._tooltipItems = [];\r\n            this.$animations = undefined;\r\n            this.$context = undefined;\r\n            this.options = config.options;\r\n            this.dataPoints = undefined;\r\n            this.title = undefined;\r\n            this.beforeBody = undefined;\r\n            this.body = undefined;\r\n            this.afterBody = undefined;\r\n            this.footer = undefined;\r\n            this.xAlign = undefined;\r\n            this.yAlign = undefined;\r\n            this.x = undefined;\r\n            this.y = undefined;\r\n            this.height = undefined;\r\n            this.width = undefined;\r\n            this.caretX = undefined;\r\n            this.caretY = undefined;\r\n            this.labelColors = undefined;\r\n            this.labelPointStyles = undefined;\r\n            this.labelTextColors = undefined;\r\n        }\r\n\r\n        initialize(options) {\r\n            this.options = options;\r\n            this._cachedAnimations = undefined;\r\n            this.$context = undefined;\r\n        }\r\n\r\n        _resolveAnimations() {\r\n            const me = this;\r\n            const cached = me._cachedAnimations;\r\n            if (cached) {\r\n                return cached;\r\n            }\r\n            const chart = me._chart;\r\n            const options = me.options.setContext(me.getContext());\r\n            const opts = options.enabled && chart.options.animation && options.animations;\r\n            const animations = new Animations(me._chart, opts);\r\n            if (opts._cacheable) {\r\n                me._cachedAnimations = Object.freeze(animations);\r\n            }\r\n            return animations;\r\n        }\r\n\r\n        getContext() {\r\n            const me = this;\r\n            return me.$context ||\r\n                (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\r\n        }\r\n\r\n        getTitle(context, options) {\r\n            const me = this;\r\n            const {callbacks} = options;\r\n            const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\r\n            const title = callbacks.title.apply(me, [context]);\r\n            const afterTitle = callbacks.afterTitle.apply(me, [context]);\r\n            let lines = [];\r\n            lines = pushOrConcat(lines, splitNewlines(beforeTitle));\r\n            lines = pushOrConcat(lines, splitNewlines(title));\r\n            lines = pushOrConcat(lines, splitNewlines(afterTitle));\r\n            return lines;\r\n        }\r\n\r\n        getBeforeBody(tooltipItems, options) {\r\n            return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\r\n        }\r\n\r\n        getBody(tooltipItems, options) {\r\n            const me = this;\r\n            const {callbacks} = options;\r\n            const bodyItems = [];\r\n            each(tooltipItems, (context) => {\r\n                const bodyItem = {\r\n                    before: [],\r\n                    lines: [],\r\n                    after: []\r\n                };\r\n                const scoped = overrideCallbacks(callbacks, context);\r\n                pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\r\n                pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\r\n                pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\r\n                bodyItems.push(bodyItem);\r\n            });\r\n            return bodyItems;\r\n        }\r\n\r\n        getAfterBody(tooltipItems, options) {\r\n            return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\r\n        }\r\n\r\n        getFooter(tooltipItems, options) {\r\n            const me = this;\r\n            const {callbacks} = options;\r\n            const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\r\n            const footer = callbacks.footer.apply(me, [tooltipItems]);\r\n            const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\r\n            let lines = [];\r\n            lines = pushOrConcat(lines, splitNewlines(beforeFooter));\r\n            lines = pushOrConcat(lines, splitNewlines(footer));\r\n            lines = pushOrConcat(lines, splitNewlines(afterFooter));\r\n            return lines;\r\n        }\r\n\r\n        _createItems(options) {\r\n            const me = this;\r\n            const active = me._active;\r\n            const data = me._chart.data;\r\n            const labelColors = [];\r\n            const labelPointStyles = [];\r\n            const labelTextColors = [];\r\n            let tooltipItems = [];\r\n            let i, len;\r\n            for (i = 0, len = active.length; i < len; ++i) {\r\n                tooltipItems.push(createTooltipItem(me._chart, active[i]));\r\n            }\r\n            if (options.filter) {\r\n                tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\r\n            }\r\n            if (options.itemSort) {\r\n                tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\r\n            }\r\n            each(tooltipItems, (context) => {\r\n                const scoped = overrideCallbacks(options.callbacks, context);\r\n                labelColors.push(scoped.labelColor.call(me, context));\r\n                labelPointStyles.push(scoped.labelPointStyle.call(me, context));\r\n                labelTextColors.push(scoped.labelTextColor.call(me, context));\r\n            });\r\n            me.labelColors = labelColors;\r\n            me.labelPointStyles = labelPointStyles;\r\n            me.labelTextColors = labelTextColors;\r\n            me.dataPoints = tooltipItems;\r\n            return tooltipItems;\r\n        }\r\n\r\n        update(changed, replay) {\r\n            const me = this;\r\n            const options = me.options.setContext(me.getContext());\r\n            const active = me._active;\r\n            let properties;\r\n            let tooltipItems = [];\r\n            if (!active.length) {\r\n                if (me.opacity !== 0) {\r\n                    properties = {\r\n                        opacity: 0\r\n                    };\r\n                }\r\n            } else {\r\n                const position = positioners[options.position].call(me, active, me._eventPosition);\r\n                tooltipItems = me._createItems(options);\r\n                me.title = me.getTitle(tooltipItems, options);\r\n                me.beforeBody = me.getBeforeBody(tooltipItems, options);\r\n                me.body = me.getBody(tooltipItems, options);\r\n                me.afterBody = me.getAfterBody(tooltipItems, options);\r\n                me.footer = me.getFooter(tooltipItems, options);\r\n                const size = me._size = getTooltipSize(me, options);\r\n                const positionAndSize = Object.assign({}, position, size);\r\n                const alignment = determineAlignment(me._chart, options, positionAndSize);\r\n                const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\r\n                me.xAlign = alignment.xAlign;\r\n                me.yAlign = alignment.yAlign;\r\n                properties = {\r\n                    opacity: 1,\r\n                    x: backgroundPoint.x,\r\n                    y: backgroundPoint.y,\r\n                    width: size.width,\r\n                    height: size.height,\r\n                    caretX: position.x,\r\n                    caretY: position.y\r\n                };\r\n            }\r\n            me._tooltipItems = tooltipItems;\r\n            me.$context = undefined;\r\n            if (properties) {\r\n                me._resolveAnimations().update(me, properties);\r\n            }\r\n            if (changed && options.external) {\r\n                options.external.call(me, {chart: me._chart, tooltip: me, replay});\r\n            }\r\n        }\r\n\r\n        drawCaret(tooltipPoint, ctx, size, options) {\r\n            const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\r\n            ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n            ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n            ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n        }\r\n\r\n        getCaretPosition(tooltipPoint, size, options) {\r\n            const {xAlign, yAlign} = this;\r\n            const {cornerRadius, caretSize} = options;\r\n            const {x: ptX, y: ptY} = tooltipPoint;\r\n            const {width, height} = size;\r\n            let x1, x2, x3, y1, y2, y3;\r\n            if (yAlign === 'center') {\r\n                y2 = ptY + (height / 2);\r\n                if (xAlign === 'left') {\r\n                    x1 = ptX;\r\n                    x2 = x1 - caretSize;\r\n                    y1 = y2 + caretSize;\r\n                    y3 = y2 - caretSize;\r\n                } else {\r\n                    x1 = ptX + width;\r\n                    x2 = x1 + caretSize;\r\n                    y1 = y2 - caretSize;\r\n                    y3 = y2 + caretSize;\r\n                }\r\n                x3 = x1;\r\n            } else {\r\n                if (xAlign === 'left') {\r\n                    x2 = ptX + cornerRadius + (caretSize);\r\n                } else if (xAlign === 'right') {\r\n                    x2 = ptX + width - cornerRadius - caretSize;\r\n                } else {\r\n                    x2 = this.caretX;\r\n                }\r\n                if (yAlign === 'top') {\r\n                    y1 = ptY;\r\n                    y2 = y1 - caretSize;\r\n                    x1 = x2 - caretSize;\r\n                    x3 = x2 + caretSize;\r\n                } else {\r\n                    y1 = ptY + height;\r\n                    y2 = y1 + caretSize;\r\n                    x1 = x2 + caretSize;\r\n                    x3 = x2 - caretSize;\r\n                }\r\n                y3 = y1;\r\n            }\r\n            return {x1, x2, x3, y1, y2, y3};\r\n        }\r\n\r\n        drawTitle(pt, ctx, options) {\r\n            const me = this;\r\n            const title = me.title;\r\n            const length = title.length;\r\n            let titleFont, titleSpacing, i;\r\n            if (length) {\r\n                const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\r\n                pt.x = getAlignedX(me, options.titleAlign, options);\r\n                ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\r\n                ctx.textBaseline = 'middle';\r\n                titleFont = toFont(options.titleFont);\r\n                titleSpacing = options.titleSpacing;\r\n                ctx.fillStyle = options.titleColor;\r\n                ctx.font = titleFont.string;\r\n                for (i = 0; i < length; ++i) {\r\n                    ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\r\n                    pt.y += titleFont.lineHeight + titleSpacing;\r\n                    if (i + 1 === length) {\r\n                        pt.y += options.titleMarginBottom - titleSpacing;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        _drawColorBox(ctx, pt, i, rtlHelper, options) {\r\n            const me = this;\r\n            const labelColors = me.labelColors[i];\r\n            const labelPointStyle = me.labelPointStyles[i];\r\n            const {boxHeight, boxWidth} = options;\r\n            const bodyFont = toFont(options.bodyFont);\r\n            const colorX = getAlignedX(me, 'left', options);\r\n            const rtlColorX = rtlHelper.x(colorX);\r\n            const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\r\n            const colorY = pt.y + yOffSet;\r\n            if (options.usePointStyle) {\r\n                const drawOptions = {\r\n                    radius: Math.min(boxWidth, boxHeight) / 2,\r\n                    pointStyle: labelPointStyle.pointStyle,\r\n                    rotation: labelPointStyle.rotation,\r\n                    borderWidth: 1\r\n                };\r\n                const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\r\n                const centerY = colorY + boxHeight / 2;\r\n                ctx.strokeStyle = options.multiKeyBackground;\r\n                ctx.fillStyle = options.multiKeyBackground;\r\n                drawPoint(ctx, drawOptions, centerX, centerY);\r\n                ctx.strokeStyle = labelColors.borderColor;\r\n                ctx.fillStyle = labelColors.backgroundColor;\r\n                drawPoint(ctx, drawOptions, centerX, centerY);\r\n            } else {\r\n                ctx.fillStyle = options.multiKeyBackground;\r\n                ctx.fillRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\r\n                ctx.lineWidth = 1;\r\n                ctx.strokeStyle = labelColors.borderColor;\r\n                ctx.strokeRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\r\n                ctx.fillStyle = labelColors.backgroundColor;\r\n                ctx.fillRect(rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2), colorY + 1, boxWidth - 2, boxHeight - 2);\r\n            }\r\n            ctx.fillStyle = me.labelTextColors[i];\r\n        }\r\n\r\n        drawBody(pt, ctx, options) {\r\n            const me = this;\r\n            const {body} = me;\r\n            const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\r\n            const bodyFont = toFont(options.bodyFont);\r\n            let bodyLineHeight = bodyFont.lineHeight;\r\n            let xLinePadding = 0;\r\n            const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\r\n            const fillLineOfText = function (line) {\r\n                ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\r\n                pt.y += bodyLineHeight + bodySpacing;\r\n            };\r\n            const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\r\n            let bodyItem, textColor, lines, i, j, ilen, jlen;\r\n            ctx.textAlign = bodyAlign;\r\n            ctx.textBaseline = 'middle';\r\n            ctx.font = bodyFont.string;\r\n            pt.x = getAlignedX(me, bodyAlignForCalculation, options);\r\n            ctx.fillStyle = options.bodyColor;\r\n            each(me.beforeBody, fillLineOfText);\r\n            xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\r\n                ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\r\n                : 0;\r\n            for (i = 0, ilen = body.length; i < ilen; ++i) {\r\n                bodyItem = body[i];\r\n                textColor = me.labelTextColors[i];\r\n                ctx.fillStyle = textColor;\r\n                each(bodyItem.before, fillLineOfText);\r\n                lines = bodyItem.lines;\r\n                if (displayColors && lines.length) {\r\n                    me._drawColorBox(ctx, pt, i, rtlHelper, options);\r\n                    bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\r\n                }\r\n                for (j = 0, jlen = lines.length; j < jlen; ++j) {\r\n                    fillLineOfText(lines[j]);\r\n                    bodyLineHeight = bodyFont.lineHeight;\r\n                }\r\n                each(bodyItem.after, fillLineOfText);\r\n            }\r\n            xLinePadding = 0;\r\n            bodyLineHeight = bodyFont.lineHeight;\r\n            each(me.afterBody, fillLineOfText);\r\n            pt.y -= bodySpacing;\r\n        }\r\n\r\n        drawFooter(pt, ctx, options) {\r\n            const me = this;\r\n            const footer = me.footer;\r\n            const length = footer.length;\r\n            let footerFont, i;\r\n            if (length) {\r\n                const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\r\n                pt.x = getAlignedX(me, options.footerAlign, options);\r\n                pt.y += options.footerMarginTop;\r\n                ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\r\n                ctx.textBaseline = 'middle';\r\n                footerFont = toFont(options.footerFont);\r\n                ctx.fillStyle = options.footerColor;\r\n                ctx.font = footerFont.string;\r\n                for (i = 0; i < length; ++i) {\r\n                    ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\r\n                    pt.y += footerFont.lineHeight + options.footerSpacing;\r\n                }\r\n            }\r\n        }\r\n\r\n        drawBackground(pt, ctx, tooltipSize, options) {\r\n            const {xAlign, yAlign} = this;\r\n            const {x, y} = pt;\r\n            const {width, height} = tooltipSize;\r\n            const radius = options.cornerRadius;\r\n            ctx.fillStyle = options.backgroundColor;\r\n            ctx.strokeStyle = options.borderColor;\r\n            ctx.lineWidth = options.borderWidth;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x + radius, y);\r\n            if (yAlign === 'top') {\r\n                this.drawCaret(pt, ctx, tooltipSize, options);\r\n            }\r\n            ctx.lineTo(x + width - radius, y);\r\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n            if (yAlign === 'center' && xAlign === 'right') {\r\n                this.drawCaret(pt, ctx, tooltipSize, options);\r\n            }\r\n            ctx.lineTo(x + width, y + height - radius);\r\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n            if (yAlign === 'bottom') {\r\n                this.drawCaret(pt, ctx, tooltipSize, options);\r\n            }\r\n            ctx.lineTo(x + radius, y + height);\r\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n            if (yAlign === 'center' && xAlign === 'left') {\r\n                this.drawCaret(pt, ctx, tooltipSize, options);\r\n            }\r\n            ctx.lineTo(x, y + radius);\r\n            ctx.quadraticCurveTo(x, y, x + radius, y);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            if (options.borderWidth > 0) {\r\n                ctx.stroke();\r\n            }\r\n        }\r\n\r\n        _updateAnimationTarget(options) {\r\n            const me = this;\r\n            const chart = me._chart;\r\n            const anims = me.$animations;\r\n            const animX = anims && anims.x;\r\n            const animY = anims && anims.y;\r\n            if (animX || animY) {\r\n                const position = positioners[options.position].call(me, me._active, me._eventPosition);\r\n                if (!position) {\r\n                    return;\r\n                }\r\n                const size = me._size = getTooltipSize(me, options);\r\n                const positionAndSize = Object.assign({}, position, me._size);\r\n                const alignment = determineAlignment(chart, options, positionAndSize);\r\n                const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\r\n                if (animX._to !== point.x || animY._to !== point.y) {\r\n                    me.xAlign = alignment.xAlign;\r\n                    me.yAlign = alignment.yAlign;\r\n                    me.width = size.width;\r\n                    me.height = size.height;\r\n                    me.caretX = position.x;\r\n                    me.caretY = position.y;\r\n                    me._resolveAnimations().update(me, point);\r\n                }\r\n            }\r\n        }\r\n\r\n        draw(ctx) {\r\n            const me = this;\r\n            const options = me.options.setContext(me.getContext());\r\n            let opacity = me.opacity;\r\n            if (!opacity) {\r\n                return;\r\n            }\r\n            me._updateAnimationTarget(options);\r\n            const tooltipSize = {\r\n                width: me.width,\r\n                height: me.height\r\n            };\r\n            const pt = {\r\n                x: me.x,\r\n                y: me.y\r\n            };\r\n            opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\r\n            const padding = toPadding(options.padding);\r\n            const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\r\n            if (options.enabled && hasTooltipContent) {\r\n                ctx.save();\r\n                ctx.globalAlpha = opacity;\r\n                me.drawBackground(pt, ctx, tooltipSize, options);\r\n                overrideTextDirection(ctx, options.textDirection);\r\n                pt.y += padding.top;\r\n                me.drawTitle(pt, ctx, options);\r\n                me.drawBody(pt, ctx, options);\r\n                me.drawFooter(pt, ctx, options);\r\n                restoreTextDirection(ctx, options.textDirection);\r\n                ctx.restore();\r\n            }\r\n        }\r\n\r\n        getActiveElements() {\r\n            return this._active || [];\r\n        }\r\n\r\n        setActiveElements(activeElements, eventPosition) {\r\n            const me = this;\r\n            const lastActive = me._active;\r\n            const active = activeElements.map(({datasetIndex, index}) => {\r\n                const meta = me._chart.getDatasetMeta(datasetIndex);\r\n                if (!meta) {\r\n                    throw new Error('Cannot find a dataset at index ' + datasetIndex);\r\n                }\r\n                return {\r\n                    datasetIndex,\r\n                    element: meta.data[index],\r\n                    index,\r\n                };\r\n            });\r\n            const changed = !_elementsEqual(lastActive, active);\r\n            const positionChanged = me._positionChanged(active, eventPosition);\r\n            if (changed || positionChanged) {\r\n                me._active = active;\r\n                me._eventPosition = eventPosition;\r\n                me.update(true);\r\n            }\r\n        }\r\n\r\n        handleEvent(e, replay) {\r\n            const me = this;\r\n            const options = me.options;\r\n            const lastActive = me._active || [];\r\n            let changed = false;\r\n            let active = [];\r\n            if (e.type !== 'mouseout') {\r\n                active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\r\n                if (options.reverse) {\r\n                    active.reverse();\r\n                }\r\n            }\r\n            const positionChanged = me._positionChanged(active, e);\r\n            changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\r\n            if (changed) {\r\n                me._active = active;\r\n                if (options.enabled || options.external) {\r\n                    me._eventPosition = {\r\n                        x: e.x,\r\n                        y: e.y\r\n                    };\r\n                    me.update(true, replay);\r\n                }\r\n            }\r\n            return changed;\r\n        }\r\n\r\n        _positionChanged(active, e) {\r\n            const me = this;\r\n            const position = positioners[me.options.position].call(me, active, e);\r\n            return me.caretX !== position.x || me.caretY !== position.y;\r\n        }\r\n    }\r\n\r\n    Tooltip.positioners = positioners;\r\n    var plugin_tooltip = {\r\n        id: 'tooltip',\r\n        _element: Tooltip,\r\n        positioners,\r\n        afterInit(chart, _args, options) {\r\n            if (options) {\r\n                chart.tooltip = new Tooltip({_chart: chart, options});\r\n            }\r\n        },\r\n        beforeUpdate(chart, _args, options) {\r\n            if (chart.tooltip) {\r\n                chart.tooltip.initialize(options);\r\n            }\r\n        },\r\n        reset(chart, _args, options) {\r\n            if (chart.tooltip) {\r\n                chart.tooltip.initialize(options);\r\n            }\r\n        },\r\n        afterDraw(chart) {\r\n            const tooltip = chart.tooltip;\r\n            const args = {\r\n                tooltip\r\n            };\r\n            if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\r\n                return;\r\n            }\r\n            if (tooltip) {\r\n                tooltip.draw(chart.ctx);\r\n            }\r\n            chart.notifyPlugins('afterTooltipDraw', args);\r\n        },\r\n        afterEvent(chart, args) {\r\n            if (chart.tooltip) {\r\n                const useFinalPosition = args.replay;\r\n                if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\r\n                    args.changed = true;\r\n                }\r\n            }\r\n        },\r\n        defaults: {\r\n            enabled: true,\r\n            external: null,\r\n            position: 'average',\r\n            backgroundColor: 'rgba(0,0,0,0.8)',\r\n            titleColor: '#fff',\r\n            titleFont: {\r\n                style: 'bold',\r\n            },\r\n            titleSpacing: 2,\r\n            titleMarginBottom: 6,\r\n            titleAlign: 'left',\r\n            bodyColor: '#fff',\r\n            bodySpacing: 2,\r\n            bodyFont: {},\r\n            bodyAlign: 'left',\r\n            footerColor: '#fff',\r\n            footerSpacing: 2,\r\n            footerMarginTop: 6,\r\n            footerFont: {\r\n                style: 'bold',\r\n            },\r\n            footerAlign: 'left',\r\n            padding: 6,\r\n            caretPadding: 2,\r\n            caretSize: 5,\r\n            cornerRadius: 6,\r\n            boxHeight: (ctx, opts) => opts.bodyFont.size,\r\n            boxWidth: (ctx, opts) => opts.bodyFont.size,\r\n            multiKeyBackground: '#fff',\r\n            displayColors: true,\r\n            borderColor: 'rgba(0,0,0,0)',\r\n            borderWidth: 0,\r\n            animation: {\r\n                duration: 400,\r\n                easing: 'easeOutQuart',\r\n            },\r\n            animations: {\r\n                numbers: {\r\n                    type: 'number',\r\n                    properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\r\n                },\r\n                opacity: {\r\n                    easing: 'linear',\r\n                    duration: 200\r\n                }\r\n            },\r\n            callbacks: {\r\n                beforeTitle: noop,\r\n                title(tooltipItems) {\r\n                    if (tooltipItems.length > 0) {\r\n                        const item = tooltipItems[0];\r\n                        const labels = item.chart.data.labels;\r\n                        const labelCount = labels ? labels.length : 0;\r\n                        if (this && this.options && this.options.mode === 'dataset') {\r\n                            return item.dataset.label || '';\r\n                        } else if (item.label) {\r\n                            return item.label;\r\n                        } else if (labelCount > 0 && item.dataIndex < labelCount) {\r\n                            return labels[item.dataIndex];\r\n                        }\r\n                    }\r\n                    return '';\r\n                },\r\n                afterTitle: noop,\r\n                beforeBody: noop,\r\n                beforeLabel: noop,\r\n                label(tooltipItem) {\r\n                    if (this && this.options && this.options.mode === 'dataset') {\r\n                        return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\r\n                    }\r\n                    let label = tooltipItem.dataset.label || '';\r\n                    if (label) {\r\n                        label += ': ';\r\n                    }\r\n                    const value = tooltipItem.formattedValue;\r\n                    if (!isNullOrUndef(value)) {\r\n                        label += value;\r\n                    }\r\n                    return label;\r\n                },\r\n                labelColor(tooltipItem) {\r\n                    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n                    const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n                    return {\r\n                        borderColor: options.borderColor,\r\n                        backgroundColor: options.backgroundColor\r\n                    };\r\n                },\r\n                labelTextColor() {\r\n                    return this.options.bodyColor;\r\n                },\r\n                labelPointStyle(tooltipItem) {\r\n                    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n                    const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n                    return {\r\n                        pointStyle: options.pointStyle,\r\n                        rotation: options.rotation,\r\n                    };\r\n                },\r\n                afterLabel: noop,\r\n                afterBody: noop,\r\n                beforeFooter: noop,\r\n                footer: noop,\r\n                afterFooter: noop\r\n            }\r\n        },\r\n        defaultRoutes: {\r\n            bodyFont: 'font',\r\n            footerFont: 'font',\r\n            titleFont: 'font'\r\n        },\r\n        descriptors: {\r\n            _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\r\n            _indexable: false,\r\n            callbacks: {\r\n                _scriptable: false,\r\n                _indexable: false,\r\n            },\r\n            animation: {\r\n                _fallback: false\r\n            },\r\n            animations: {\r\n                _fallback: 'animation'\r\n            }\r\n        },\r\n        additionalOptionScopes: ['interaction']\r\n    };\r\n\r\n    var plugins = /*#__PURE__*/Object.freeze({\r\n        __proto__: null,\r\n        Decimation: plugin_decimation,\r\n        Filler: plugin_filler,\r\n        Legend: plugin_legend,\r\n        Title: plugin_title,\r\n        Tooltip: plugin_tooltip\r\n    });\r\n\r\n    const addIfString = (labels, raw, index) => typeof raw === 'string'\r\n        ? labels.push(raw) - 1\r\n        : isNaN(raw) ? null : index;\r\n\r\n    function findOrAddLabel(labels, raw, index) {\r\n        const first = labels.indexOf(raw);\r\n        if (first === -1) {\r\n            return addIfString(labels, raw, index);\r\n        }\r\n        const last = labels.lastIndexOf(raw);\r\n        return first !== last ? index : first;\r\n    }\r\n\r\n    const validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\r\n\r\n    class CategoryScale extends Scale {\r\n        constructor(cfg) {\r\n            super(cfg);\r\n            this._startValue = undefined;\r\n            this._valueRange = 0;\r\n        }\r\n\r\n        parse(raw, index) {\r\n            if (isNullOrUndef(raw)) {\r\n                return null;\r\n            }\r\n            const labels = this.getLabels();\r\n            index = isFinite(index) && labels[index] === raw ? index\r\n                : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\r\n            return validIndex(index, labels.length - 1);\r\n        }\r\n\r\n        determineDataLimits() {\r\n            const me = this;\r\n            const {minDefined, maxDefined} = me.getUserBounds();\r\n            let {min, max} = me.getMinMax(true);\r\n            if (me.options.bounds === 'ticks') {\r\n                if (!minDefined) {\r\n                    min = 0;\r\n                }\r\n                if (!maxDefined) {\r\n                    max = me.getLabels().length - 1;\r\n                }\r\n            }\r\n            me.min = min;\r\n            me.max = max;\r\n        }\r\n\r\n        buildTicks() {\r\n            const me = this;\r\n            const min = me.min;\r\n            const max = me.max;\r\n            const offset = me.options.offset;\r\n            const ticks = [];\r\n            let labels = me.getLabels();\r\n            labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\r\n            me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\r\n            me._startValue = me.min - (offset ? 0.5 : 0);\r\n            for (let value = min; value <= max; value++) {\r\n                ticks.push({value});\r\n            }\r\n            return ticks;\r\n        }\r\n\r\n        getLabelForValue(value) {\r\n            const me = this;\r\n            const labels = me.getLabels();\r\n            if (value >= 0 && value < labels.length) {\r\n                return labels[value];\r\n            }\r\n            return value;\r\n        }\r\n\r\n        configure() {\r\n            const me = this;\r\n            super.configure();\r\n            if (!me.isHorizontal()) {\r\n                me._reversePixels = !me._reversePixels;\r\n            }\r\n        }\r\n\r\n        getPixelForValue(value) {\r\n            const me = this;\r\n            if (typeof value !== 'number') {\r\n                value = me.parse(value);\r\n            }\r\n            return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\r\n        }\r\n\r\n        getPixelForTick(index) {\r\n            const me = this;\r\n            const ticks = me.ticks;\r\n            if (index < 0 || index > ticks.length - 1) {\r\n                return null;\r\n            }\r\n            return me.getPixelForValue(ticks[index].value);\r\n        }\r\n\r\n        getValueForPixel(pixel) {\r\n            const me = this;\r\n            return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\r\n        }\r\n\r\n        getBasePixel() {\r\n            return this.bottom;\r\n        }\r\n    }\r\n\r\n    CategoryScale.id = 'category';\r\n    CategoryScale.defaults = {\r\n        ticks: {\r\n            callback: CategoryScale.prototype.getLabelForValue\r\n        }\r\n    };\r\n\r\n    function generateTicks$1(generationOptions, dataRange) {\r\n        const ticks = [];\r\n        const MIN_SPACING = 1e-14;\r\n        const {step, min, max, precision, count, maxTicks} = generationOptions;\r\n        const unit = step || 1;\r\n        const maxSpaces = maxTicks - 1;\r\n        const {min: rmin, max: rmax} = dataRange;\r\n        const minDefined = !isNullOrUndef(min);\r\n        const maxDefined = !isNullOrUndef(max);\r\n        const countDefined = !isNullOrUndef(count);\r\n        let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\r\n        let factor, niceMin, niceMax, numSpaces;\r\n        if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\r\n            return [{value: rmin}, {value: rmax}];\r\n        }\r\n        numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\r\n        if (numSpaces > maxSpaces) {\r\n            spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\r\n        }\r\n        if (!isNullOrUndef(precision)) {\r\n            factor = Math.pow(10, precision);\r\n            spacing = Math.ceil(spacing * factor) / factor;\r\n        }\r\n        niceMin = Math.floor(rmin / spacing) * spacing;\r\n        niceMax = Math.ceil(rmax / spacing) * spacing;\r\n        if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\r\n            numSpaces = Math.min((max - min) / spacing, maxTicks);\r\n            spacing = (max - min) / numSpaces;\r\n            niceMin = min;\r\n            niceMax = max;\r\n        } else if (countDefined) {\r\n            niceMin = minDefined ? min : niceMin;\r\n            niceMax = maxDefined ? max : niceMax;\r\n            numSpaces = count - 1;\r\n            spacing = (niceMax - niceMin) / numSpaces;\r\n        } else {\r\n            numSpaces = (niceMax - niceMin) / spacing;\r\n            if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n                numSpaces = Math.round(numSpaces);\r\n            } else {\r\n                numSpaces = Math.ceil(numSpaces);\r\n            }\r\n        }\r\n        factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\r\n        niceMin = Math.round(niceMin * factor) / factor;\r\n        niceMax = Math.round(niceMax * factor) / factor;\r\n        let j = 0;\r\n        if (minDefined) {\r\n            ticks.push({value: min});\r\n            if (niceMin < min) {\r\n                j++;\r\n            }\r\n            if (almostWhole(Math.round((niceMin + j * spacing) * factor) / factor / min, spacing / 1000)) {\r\n                j++;\r\n            }\r\n        }\r\n        for (; j < numSpaces; ++j) {\r\n            ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\r\n        }\r\n        if (maxDefined) {\r\n            if (almostWhole(ticks[ticks.length - 1].value / max, spacing / 1000)) {\r\n                ticks[ticks.length - 1].value = max;\r\n            } else {\r\n                ticks.push({value: max});\r\n            }\r\n        } else {\r\n            ticks.push({value: niceMax});\r\n        }\r\n        return ticks;\r\n    }\r\n\r\n    class LinearScaleBase extends Scale {\r\n        constructor(cfg) {\r\n            super(cfg);\r\n            this.start = undefined;\r\n            this.end = undefined;\r\n            this._startValue = undefined;\r\n            this._endValue = undefined;\r\n            this._valueRange = 0;\r\n        }\r\n\r\n        parse(raw, index) {\r\n            if (isNullOrUndef(raw)) {\r\n                return null;\r\n            }\r\n            if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\r\n                return null;\r\n            }\r\n            return +raw;\r\n        }\r\n\r\n        handleTickRangeOptions() {\r\n            const me = this;\r\n            const {beginAtZero, stacked} = me.options;\r\n            const {minDefined, maxDefined} = me.getUserBounds();\r\n            let {min, max} = me;\r\n            const setMin = v => (min = minDefined ? min : v);\r\n            const setMax = v => (max = maxDefined ? max : v);\r\n            if (beginAtZero || stacked) {\r\n                const minSign = sign(min);\r\n                const maxSign = sign(max);\r\n                if (minSign < 0 && maxSign < 0) {\r\n                    setMax(0);\r\n                } else if (minSign > 0 && maxSign > 0) {\r\n                    setMin(0);\r\n                }\r\n            }\r\n            if (min === max) {\r\n                setMax(max + 1);\r\n                if (!beginAtZero) {\r\n                    setMin(min - 1);\r\n                }\r\n            }\r\n            me.min = min;\r\n            me.max = max;\r\n        }\r\n\r\n        getTickLimit() {\r\n            const me = this;\r\n            const tickOpts = me.options.ticks;\r\n            let {maxTicksLimit, stepSize} = tickOpts;\r\n            let maxTicks;\r\n            if (stepSize) {\r\n                maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\r\n            } else {\r\n                maxTicks = me.computeTickLimit();\r\n                maxTicksLimit = maxTicksLimit || 11;\r\n            }\r\n            if (maxTicksLimit) {\r\n                maxTicks = Math.min(maxTicksLimit, maxTicks);\r\n            }\r\n            return maxTicks;\r\n        }\r\n\r\n        computeTickLimit() {\r\n            return Number.POSITIVE_INFINITY;\r\n        }\r\n\r\n        buildTicks() {\r\n            const me = this;\r\n            const opts = me.options;\r\n            const tickOpts = opts.ticks;\r\n            let maxTicks = me.getTickLimit();\r\n            maxTicks = Math.max(2, maxTicks);\r\n            const numericGeneratorOptions = {\r\n                maxTicks,\r\n                min: opts.min,\r\n                max: opts.max,\r\n                precision: tickOpts.precision,\r\n                step: tickOpts.stepSize,\r\n                count: tickOpts.count,\r\n            };\r\n            const ticks = generateTicks$1(numericGeneratorOptions, _addGrace(me, opts.grace));\r\n            if (opts.bounds === 'ticks') {\r\n                _setMinAndMaxByKey(ticks, me, 'value');\r\n            }\r\n            if (opts.reverse) {\r\n                ticks.reverse();\r\n                me.start = me.max;\r\n                me.end = me.min;\r\n            } else {\r\n                me.start = me.min;\r\n                me.end = me.max;\r\n            }\r\n            return ticks;\r\n        }\r\n\r\n        configure() {\r\n            const me = this;\r\n            const ticks = me.ticks;\r\n            let start = me.min;\r\n            let end = me.max;\r\n            super.configure();\r\n            if (me.options.offset && ticks.length) {\r\n                const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\r\n                start -= offset;\r\n                end += offset;\r\n            }\r\n            me._startValue = start;\r\n            me._endValue = end;\r\n            me._valueRange = end - start;\r\n        }\r\n\r\n        getLabelForValue(value) {\r\n            return formatNumber(value, this.chart.options.locale);\r\n        }\r\n    }\r\n\r\n    class LinearScale extends LinearScaleBase {\r\n        determineDataLimits() {\r\n            const me = this;\r\n            const {min, max} = me.getMinMax(true);\r\n            me.min = isNumberFinite(min) ? min : 0;\r\n            me.max = isNumberFinite(max) ? max : 1;\r\n            me.handleTickRangeOptions();\r\n        }\r\n\r\n        computeTickLimit() {\r\n            const me = this;\r\n            if (me.isHorizontal()) {\r\n                return Math.ceil(me.width / 40);\r\n            }\r\n            const tickFont = me._resolveTickFontOptions(0);\r\n            return Math.ceil(me.height / tickFont.lineHeight);\r\n        }\r\n\r\n        getPixelForValue(value) {\r\n            return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n        }\r\n\r\n        getValueForPixel(pixel) {\r\n            return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\r\n        }\r\n    }\r\n\r\n    LinearScale.id = 'linear';\r\n    LinearScale.defaults = {\r\n        ticks: {\r\n            callback: Ticks.formatters.numeric\r\n        }\r\n    };\r\n\r\n    function isMajor(tickVal) {\r\n        const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\r\n        return remain === 1;\r\n    }\r\n\r\n    function generateTicks(generationOptions, dataRange) {\r\n        const endExp = Math.floor(log10(dataRange.max));\r\n        const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n        const ticks = [];\r\n        let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\r\n        let exp = Math.floor(log10(tickVal));\r\n        let significand = Math.floor(tickVal / Math.pow(10, exp));\r\n        let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\r\n        do {\r\n            ticks.push({value: tickVal, major: isMajor(tickVal)});\r\n            ++significand;\r\n            if (significand === 10) {\r\n                significand = 1;\r\n                ++exp;\r\n                precision = exp >= 0 ? 1 : precision;\r\n            }\r\n            tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\r\n        } while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n        const lastTick = finiteOrDefault(generationOptions.max, tickVal);\r\n        ticks.push({value: lastTick, major: isMajor(tickVal)});\r\n        return ticks;\r\n    }\r\n\r\n    class LogarithmicScale extends Scale {\r\n        constructor(cfg) {\r\n            super(cfg);\r\n            this.start = undefined;\r\n            this.end = undefined;\r\n            this._startValue = undefined;\r\n            this._valueRange = 0;\r\n        }\r\n\r\n        parse(raw, index) {\r\n            const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\r\n            if (value === 0) {\r\n                this._zero = true;\r\n                return undefined;\r\n            }\r\n            return isNumberFinite(value) && value > 0 ? value : null;\r\n        }\r\n\r\n        determineDataLimits() {\r\n            const me = this;\r\n            const {min, max} = me.getMinMax(true);\r\n            me.min = isNumberFinite(min) ? Math.max(0, min) : null;\r\n            me.max = isNumberFinite(max) ? Math.max(0, max) : null;\r\n            if (me.options.beginAtZero) {\r\n                me._zero = true;\r\n            }\r\n            me.handleTickRangeOptions();\r\n        }\r\n\r\n        handleTickRangeOptions() {\r\n            const me = this;\r\n            const {minDefined, maxDefined} = me.getUserBounds();\r\n            let min = me.min;\r\n            let max = me.max;\r\n            const setMin = v => (min = minDefined ? min : v);\r\n            const setMax = v => (max = maxDefined ? max : v);\r\n            const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\r\n            if (min === max) {\r\n                if (min <= 0) {\r\n                    setMin(1);\r\n                    setMax(10);\r\n                } else {\r\n                    setMin(exp(min, -1));\r\n                    setMax(exp(max, +1));\r\n                }\r\n            }\r\n            if (min <= 0) {\r\n                setMin(exp(max, -1));\r\n            }\r\n            if (max <= 0) {\r\n                setMax(exp(min, +1));\r\n            }\r\n            if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\r\n                setMin(exp(min, -1));\r\n            }\r\n            me.min = min;\r\n            me.max = max;\r\n        }\r\n\r\n        buildTicks() {\r\n            const me = this;\r\n            const opts = me.options;\r\n            const generationOptions = {\r\n                min: me._userMin,\r\n                max: me._userMax\r\n            };\r\n            const ticks = generateTicks(generationOptions, me);\r\n            if (opts.bounds === 'ticks') {\r\n                _setMinAndMaxByKey(ticks, me, 'value');\r\n            }\r\n            if (opts.reverse) {\r\n                ticks.reverse();\r\n                me.start = me.max;\r\n                me.end = me.min;\r\n            } else {\r\n                me.start = me.min;\r\n                me.end = me.max;\r\n            }\r\n            return ticks;\r\n        }\r\n\r\n        getLabelForValue(value) {\r\n            return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\r\n        }\r\n\r\n        configure() {\r\n            const me = this;\r\n            const start = me.min;\r\n            super.configure();\r\n            me._startValue = log10(start);\r\n            me._valueRange = log10(me.max) - log10(start);\r\n        }\r\n\r\n        getPixelForValue(value) {\r\n            const me = this;\r\n            if (value === undefined || value === 0) {\r\n                value = me.min;\r\n            }\r\n            return me.getPixelForDecimal(value === me.min\r\n                ? 0\r\n                : (log10(value) - me._startValue) / me._valueRange);\r\n        }\r\n\r\n        getValueForPixel(pixel) {\r\n            const me = this;\r\n            const decimal = me.getDecimalForPixel(pixel);\r\n            return Math.pow(10, me._startValue + decimal * me._valueRange);\r\n        }\r\n    }\r\n\r\n    LogarithmicScale.id = 'logarithmic';\r\n    LogarithmicScale.defaults = {\r\n        ticks: {\r\n            callback: Ticks.formatters.logarithmic,\r\n            major: {\r\n                enabled: true\r\n            }\r\n        }\r\n    };\r\n\r\n    function getTickBackdropHeight(opts) {\r\n        const tickOpts = opts.ticks;\r\n        if (tickOpts.display && opts.display) {\r\n            const padding = toPadding(tickOpts.backdropPadding);\r\n            return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function measureLabelSize(ctx, lineHeight, label) {\r\n        if (isArray(label)) {\r\n            return {\r\n                w: _longestText(ctx, ctx.font, label),\r\n                h: label.length * lineHeight\r\n            };\r\n        }\r\n        return {\r\n            w: ctx.measureText(label).width,\r\n            h: lineHeight\r\n        };\r\n    }\r\n\r\n    function determineLimits(angle, pos, size, min, max) {\r\n        if (angle === min || angle === max) {\r\n            return {\r\n                start: pos - (size / 2),\r\n                end: pos + (size / 2)\r\n            };\r\n        } else if (angle < min || angle > max) {\r\n            return {\r\n                start: pos - size,\r\n                end: pos\r\n            };\r\n        }\r\n        return {\r\n            start: pos,\r\n            end: pos + size\r\n        };\r\n    }\r\n\r\n    function fitWithPointLabels(scale) {\r\n        const furthestLimits = {\r\n            l: 0,\r\n            r: scale.width,\r\n            t: 0,\r\n            b: scale.height - scale.paddingTop\r\n        };\r\n        const furthestAngles = {};\r\n        let i, textSize, pointPosition;\r\n        const labelSizes = [];\r\n        const padding = [];\r\n        const valueCount = scale.getLabels().length;\r\n        for (i = 0; i < valueCount; i++) {\r\n            const opts = scale.options.pointLabels.setContext(scale.getContext(i));\r\n            padding[i] = opts.padding;\r\n            pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\r\n            const plFont = toFont(opts.font);\r\n            scale.ctx.font = plFont.string;\r\n            textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\r\n            labelSizes[i] = textSize;\r\n            const angleRadians = scale.getIndexAngle(i);\r\n            const angle = toDegrees(angleRadians);\r\n            const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n            const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n            if (hLimits.start < furthestLimits.l) {\r\n                furthestLimits.l = hLimits.start;\r\n                furthestAngles.l = angleRadians;\r\n            }\r\n            if (hLimits.end > furthestLimits.r) {\r\n                furthestLimits.r = hLimits.end;\r\n                furthestAngles.r = angleRadians;\r\n            }\r\n            if (vLimits.start < furthestLimits.t) {\r\n                furthestLimits.t = vLimits.start;\r\n                furthestAngles.t = angleRadians;\r\n            }\r\n            if (vLimits.end > furthestLimits.b) {\r\n                furthestLimits.b = vLimits.end;\r\n                furthestAngles.b = angleRadians;\r\n            }\r\n        }\r\n        scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\r\n        scale._pointLabelItems = [];\r\n        const opts = scale.options;\r\n        const tickBackdropHeight = getTickBackdropHeight(opts);\r\n        const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\r\n        for (i = 0; i < valueCount; i++) {\r\n            const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\r\n            const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\r\n            const angle = toDegrees(scale.getIndexAngle(i));\r\n            const size = labelSizes[i];\r\n            adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\r\n            const textAlign = getTextAlignForAngle(angle);\r\n            let left;\r\n            if (textAlign === 'left') {\r\n                left = pointLabelPosition.x;\r\n            } else if (textAlign === 'center') {\r\n                left = pointLabelPosition.x - (size.w / 2);\r\n            } else {\r\n                left = pointLabelPosition.x - size.w;\r\n            }\r\n            const right = left + size.w;\r\n            scale._pointLabelItems[i] = {\r\n                x: pointLabelPosition.x,\r\n                y: pointLabelPosition.y,\r\n                textAlign,\r\n                left,\r\n                top: pointLabelPosition.y,\r\n                right,\r\n                bottom: pointLabelPosition.y + size.h,\r\n            };\r\n        }\r\n    }\r\n\r\n    function getTextAlignForAngle(angle) {\r\n        if (angle === 0 || angle === 180) {\r\n            return 'center';\r\n        } else if (angle < 180) {\r\n            return 'left';\r\n        }\r\n        return 'right';\r\n    }\r\n\r\n    function adjustPointPositionForLabelHeight(angle, textSize, position) {\r\n        if (angle === 90 || angle === 270) {\r\n            position.y -= (textSize.h / 2);\r\n        } else if (angle > 270 || angle < 90) {\r\n            position.y -= textSize.h;\r\n        }\r\n    }\r\n\r\n    function drawPointLabels(scale, labelCount) {\r\n        const {ctx, options: {pointLabels}} = scale;\r\n        for (let i = labelCount - 1; i >= 0; i--) {\r\n            const optsAtIndex = pointLabels.setContext(scale.getContext(i));\r\n            const plFont = toFont(optsAtIndex.font);\r\n            const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\r\n            const {backdropColor} = optsAtIndex;\r\n            if (!isNullOrUndef(backdropColor)) {\r\n                const padding = toPadding(optsAtIndex.backdropPadding);\r\n                ctx.fillStyle = backdropColor;\r\n                ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\r\n            }\r\n            renderText(\r\n                ctx,\r\n                scale._pointLabels[i],\r\n                x,\r\n                y + (plFont.lineHeight / 2),\r\n                plFont,\r\n                {\r\n                    color: optsAtIndex.color,\r\n                    textAlign: textAlign,\r\n                    textBaseline: 'middle'\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    function pathRadiusLine(scale, radius, circular, labelCount) {\r\n        const {ctx} = scale;\r\n        if (circular) {\r\n            ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\r\n        } else {\r\n            let pointPosition = scale.getPointPosition(0, radius);\r\n            ctx.moveTo(pointPosition.x, pointPosition.y);\r\n            for (let i = 1; i < labelCount; i++) {\r\n                pointPosition = scale.getPointPosition(i, radius);\r\n                ctx.lineTo(pointPosition.x, pointPosition.y);\r\n            }\r\n        }\r\n    }\r\n\r\n    function drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\r\n        const ctx = scale.ctx;\r\n        const circular = gridLineOpts.circular;\r\n        const {color, lineWidth} = gridLineOpts;\r\n        if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\r\n            return;\r\n        }\r\n        ctx.save();\r\n        ctx.strokeStyle = color;\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.setLineDash(gridLineOpts.borderDash);\r\n        ctx.lineDashOffset = gridLineOpts.borderDashOffset;\r\n        ctx.beginPath();\r\n        pathRadiusLine(scale, radius, circular, labelCount);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n\r\n    function numberOrZero(param) {\r\n        return isNumber(param) ? param : 0;\r\n    }\r\n\r\n    class RadialLinearScale extends LinearScaleBase {\r\n        constructor(cfg) {\r\n            super(cfg);\r\n            this.xCenter = undefined;\r\n            this.yCenter = undefined;\r\n            this.drawingArea = undefined;\r\n            this._pointLabels = [];\r\n            this._pointLabelItems = [];\r\n        }\r\n\r\n        setDimensions() {\r\n            const me = this;\r\n            me.width = me.maxWidth;\r\n            me.height = me.maxHeight;\r\n            me.paddingTop = getTickBackdropHeight(me.options) / 2;\r\n            me.xCenter = Math.floor(me.width / 2);\r\n            me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\r\n            me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\r\n        }\r\n\r\n        determineDataLimits() {\r\n            const me = this;\r\n            const {min, max} = me.getMinMax(false);\r\n            me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\r\n            me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\r\n            me.handleTickRangeOptions();\r\n        }\r\n\r\n        computeTickLimit() {\r\n            return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\r\n        }\r\n\r\n        generateTickLabels(ticks) {\r\n            const me = this;\r\n            LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\r\n            me._pointLabels = me.getLabels().map((value, index) => {\r\n                const label = callback(me.options.pointLabels.callback, [value, index], me);\r\n                return label || label === 0 ? label : '';\r\n            });\r\n        }\r\n\r\n        fit() {\r\n            const me = this;\r\n            const opts = me.options;\r\n            if (opts.display && opts.pointLabels.display) {\r\n                fitWithPointLabels(me);\r\n            } else {\r\n                me.setCenterPoint(0, 0, 0, 0);\r\n            }\r\n        }\r\n\r\n        _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\r\n            const me = this;\r\n            let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\r\n            let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\r\n            let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\r\n            let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\r\n            radiusReductionLeft = numberOrZero(radiusReductionLeft);\r\n            radiusReductionRight = numberOrZero(radiusReductionRight);\r\n            radiusReductionTop = numberOrZero(radiusReductionTop);\r\n            radiusReductionBottom = numberOrZero(radiusReductionBottom);\r\n            me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\r\n                Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\r\n                Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\r\n            me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\r\n        }\r\n\r\n        setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n            const me = this;\r\n            const maxRight = me.width - rightMovement - me.drawingArea;\r\n            const maxLeft = leftMovement + me.drawingArea;\r\n            const maxTop = topMovement + me.drawingArea;\r\n            const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\r\n            me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\r\n            me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\r\n        }\r\n\r\n        getIndexAngle(index) {\r\n            const angleMultiplier = TAU / this.getLabels().length;\r\n            const startAngle = this.options.startAngle || 0;\r\n            return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\r\n        }\r\n\r\n        getDistanceFromCenterForValue(value) {\r\n            const me = this;\r\n            if (isNullOrUndef(value)) {\r\n                return NaN;\r\n            }\r\n            const scalingFactor = me.drawingArea / (me.max - me.min);\r\n            if (me.options.reverse) {\r\n                return (me.max - value) * scalingFactor;\r\n            }\r\n            return (value - me.min) * scalingFactor;\r\n        }\r\n\r\n        getValueForDistanceFromCenter(distance) {\r\n            if (isNullOrUndef(distance)) {\r\n                return NaN;\r\n            }\r\n            const me = this;\r\n            const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\r\n            return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\r\n        }\r\n\r\n        getPointPosition(index, distanceFromCenter) {\r\n            const me = this;\r\n            const angle = me.getIndexAngle(index) - HALF_PI;\r\n            return {\r\n                x: Math.cos(angle) * distanceFromCenter + me.xCenter,\r\n                y: Math.sin(angle) * distanceFromCenter + me.yCenter,\r\n                angle\r\n            };\r\n        }\r\n\r\n        getPointPositionForValue(index, value) {\r\n            return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n        }\r\n\r\n        getBasePosition(index) {\r\n            return this.getPointPositionForValue(index || 0, this.getBaseValue());\r\n        }\r\n\r\n        getPointLabelPosition(index) {\r\n            const {left, top, right, bottom} = this._pointLabelItems[index];\r\n            return {\r\n                left,\r\n                top,\r\n                right,\r\n                bottom,\r\n            };\r\n        }\r\n\r\n        drawBackground() {\r\n            const me = this;\r\n            const {backgroundColor, grid: {circular}} = me.options;\r\n            if (backgroundColor) {\r\n                const ctx = me.ctx;\r\n                ctx.save();\r\n                ctx.beginPath();\r\n                pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\r\n                ctx.closePath();\r\n                ctx.fillStyle = backgroundColor;\r\n                ctx.fill();\r\n                ctx.restore();\r\n            }\r\n        }\r\n\r\n        drawGrid() {\r\n            const me = this;\r\n            const ctx = me.ctx;\r\n            const opts = me.options;\r\n            const {angleLines, grid} = opts;\r\n            const labelCount = me.getLabels().length;\r\n            let i, offset, position;\r\n            if (opts.pointLabels.display) {\r\n                drawPointLabels(me, labelCount);\r\n            }\r\n            if (grid.display) {\r\n                me.ticks.forEach((tick, index) => {\r\n                    if (index !== 0) {\r\n                        offset = me.getDistanceFromCenterForValue(tick.value);\r\n                        const optsAtIndex = grid.setContext(me.getContext(index - 1));\r\n                        drawRadiusLine(me, optsAtIndex, offset, labelCount);\r\n                    }\r\n                });\r\n            }\r\n            if (angleLines.display) {\r\n                ctx.save();\r\n                for (i = me.getLabels().length - 1; i >= 0; i--) {\r\n                    const optsAtIndex = angleLines.setContext(me.getContext(i));\r\n                    const {color, lineWidth} = optsAtIndex;\r\n                    if (!lineWidth || !color) {\r\n                        continue;\r\n                    }\r\n                    ctx.lineWidth = lineWidth;\r\n                    ctx.strokeStyle = color;\r\n                    ctx.setLineDash(optsAtIndex.borderDash);\r\n                    ctx.lineDashOffset = optsAtIndex.borderDashOffset;\r\n                    offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\r\n                    position = me.getPointPosition(i, offset);\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(me.xCenter, me.yCenter);\r\n                    ctx.lineTo(position.x, position.y);\r\n                    ctx.stroke();\r\n                }\r\n                ctx.restore();\r\n            }\r\n        }\r\n\r\n        drawLabels() {\r\n            const me = this;\r\n            const ctx = me.ctx;\r\n            const opts = me.options;\r\n            const tickOpts = opts.ticks;\r\n            if (!tickOpts.display) {\r\n                return;\r\n            }\r\n            const startAngle = me.getIndexAngle(0);\r\n            let offset, width;\r\n            ctx.save();\r\n            ctx.translate(me.xCenter, me.yCenter);\r\n            ctx.rotate(startAngle);\r\n            ctx.textAlign = 'center';\r\n            ctx.textBaseline = 'middle';\r\n            me.ticks.forEach((tick, index) => {\r\n                if (index === 0 && !opts.reverse) {\r\n                    return;\r\n                }\r\n                const optsAtIndex = tickOpts.setContext(me.getContext(index));\r\n                const tickFont = toFont(optsAtIndex.font);\r\n                offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\r\n                if (optsAtIndex.showLabelBackdrop) {\r\n                    width = ctx.measureText(tick.label).width;\r\n                    ctx.fillStyle = optsAtIndex.backdropColor;\r\n                    const padding = toPadding(optsAtIndex.backdropPadding);\r\n                    ctx.fillRect(\r\n                        -width / 2 - padding.left,\r\n                        -offset - tickFont.size / 2 - padding.top,\r\n                        width + padding.width,\r\n                        tickFont.size + padding.height\r\n                    );\r\n                }\r\n                renderText(ctx, tick.label, 0, -offset, tickFont, {\r\n                    color: optsAtIndex.color,\r\n                });\r\n            });\r\n            ctx.restore();\r\n        }\r\n\r\n        drawTitle() {\r\n        }\r\n    }\r\n\r\n    RadialLinearScale.id = 'radialLinear';\r\n    RadialLinearScale.defaults = {\r\n        display: true,\r\n        animate: true,\r\n        position: 'chartArea',\r\n        angleLines: {\r\n            display: true,\r\n            lineWidth: 1,\r\n            borderDash: [],\r\n            borderDashOffset: 0.0\r\n        },\r\n        grid: {\r\n            circular: false\r\n        },\r\n        startAngle: 0,\r\n        ticks: {\r\n            showLabelBackdrop: true,\r\n            backdropColor: 'rgba(255,255,255,0.75)',\r\n            backdropPadding: 2,\r\n            callback: Ticks.formatters.numeric\r\n        },\r\n        pointLabels: {\r\n            backdropColor: undefined,\r\n            backdropPadding: 2,\r\n            display: true,\r\n            font: {\r\n                size: 10\r\n            },\r\n            callback(label) {\r\n                return label;\r\n            },\r\n            padding: 5\r\n        }\r\n    };\r\n    RadialLinearScale.defaultRoutes = {\r\n        'angleLines.color': 'borderColor',\r\n        'pointLabels.color': 'color',\r\n        'ticks.color': 'color'\r\n    };\r\n    RadialLinearScale.descriptors = {\r\n        angleLines: {\r\n            _fallback: 'grid'\r\n        }\r\n    };\r\n\r\n    const INTERVALS = {\r\n        millisecond: {common: true, size: 1, steps: 1000},\r\n        second: {common: true, size: 1000, steps: 60},\r\n        minute: {common: true, size: 60000, steps: 60},\r\n        hour: {common: true, size: 3600000, steps: 24},\r\n        day: {common: true, size: 86400000, steps: 30},\r\n        week: {common: false, size: 604800000, steps: 4},\r\n        month: {common: true, size: 2.628e9, steps: 12},\r\n        quarter: {common: false, size: 7.884e9, steps: 4},\r\n        year: {common: true, size: 3.154e10}\r\n    };\r\n    const UNITS = (Object.keys(INTERVALS));\r\n\r\n    function sorter(a, b) {\r\n        return a - b;\r\n    }\r\n\r\n    function parse(scale, input) {\r\n        if (isNullOrUndef(input)) {\r\n            return null;\r\n        }\r\n        const adapter = scale._adapter;\r\n        const options = scale.options.time;\r\n        const {parser, round, isoWeekday} = options;\r\n        let value = input;\r\n        if (typeof parser === 'function') {\r\n            value = parser(value);\r\n        }\r\n        if (!isNumberFinite(value)) {\r\n            value = typeof parser === 'string'\r\n                ? adapter.parse(value, parser)\r\n                : adapter.parse(value);\r\n        }\r\n        if (value === null) {\r\n            return null;\r\n        }\r\n        if (round) {\r\n            value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\r\n                ? adapter.startOf(value, 'isoWeek', isoWeekday)\r\n                : adapter.startOf(value, round);\r\n        }\r\n        return +value;\r\n    }\r\n\r\n    function determineUnitForAutoTicks(minUnit, min, max, capacity) {\r\n        const ilen = UNITS.length;\r\n        for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\r\n            const interval = INTERVALS[UNITS[i]];\r\n            const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\r\n            if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\r\n                return UNITS[i];\r\n            }\r\n        }\r\n        return UNITS[ilen - 1];\r\n    }\r\n\r\n    function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\r\n        for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\r\n            const unit = UNITS[i];\r\n            if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\r\n                return unit;\r\n            }\r\n        }\r\n        return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\r\n    }\r\n\r\n    function determineMajorUnit(unit) {\r\n        for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\r\n            if (INTERVALS[UNITS[i]].common) {\r\n                return UNITS[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    function addTick(ticks, time, timestamps) {\r\n        if (!timestamps) {\r\n            ticks[time] = true;\r\n        } else if (timestamps.length) {\r\n            const {lo, hi} = _lookup(timestamps, time);\r\n            const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\r\n            ticks[timestamp] = true;\r\n        }\r\n    }\r\n\r\n    function setMajorTicks(scale, ticks, map, majorUnit) {\r\n        const adapter = scale._adapter;\r\n        const first = +adapter.startOf(ticks[0].value, majorUnit);\r\n        const last = ticks[ticks.length - 1].value;\r\n        let major, index;\r\n        for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\r\n            index = map[major];\r\n            if (index >= 0) {\r\n                ticks[index].major = true;\r\n            }\r\n        }\r\n        return ticks;\r\n    }\r\n\r\n    function ticksFromTimestamps(scale, values, majorUnit) {\r\n        const ticks = [];\r\n        const map = {};\r\n        const ilen = values.length;\r\n        let i, value;\r\n        for (i = 0; i < ilen; ++i) {\r\n            value = values[i];\r\n            map[value] = i;\r\n            ticks.push({\r\n                value,\r\n                major: false\r\n            });\r\n        }\r\n        return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\r\n    }\r\n\r\n    class TimeScale extends Scale {\r\n        constructor(props) {\r\n            super(props);\r\n            this._cache = {\r\n                data: [],\r\n                labels: [],\r\n                all: []\r\n            };\r\n            this._unit = 'day';\r\n            this._majorUnit = undefined;\r\n            this._offsets = {};\r\n            this._normalized = false;\r\n        }\r\n\r\n        init(scaleOpts, opts) {\r\n            const time = scaleOpts.time || (scaleOpts.time = {});\r\n            const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\r\n            mergeIf(time.displayFormats, adapter.formats());\r\n            super.init(scaleOpts);\r\n            this._normalized = opts.normalized;\r\n        }\r\n\r\n        parse(raw, index) {\r\n            if (raw === undefined) {\r\n                return null;\r\n            }\r\n            return parse(this, raw);\r\n        }\r\n\r\n        beforeLayout() {\r\n            super.beforeLayout();\r\n            this._cache = {\r\n                data: [],\r\n                labels: [],\r\n                all: []\r\n            };\r\n        }\r\n\r\n        determineDataLimits() {\r\n            const me = this;\r\n            const options = me.options;\r\n            const adapter = me._adapter;\r\n            const unit = options.time.unit || 'day';\r\n            let {min, max, minDefined, maxDefined} = me.getUserBounds();\r\n\r\n            function _applyBounds(bounds) {\r\n                if (!minDefined && !isNaN(bounds.min)) {\r\n                    min = Math.min(min, bounds.min);\r\n                }\r\n                if (!maxDefined && !isNaN(bounds.max)) {\r\n                    max = Math.max(max, bounds.max);\r\n                }\r\n            }\r\n\r\n            if (!minDefined || !maxDefined) {\r\n                _applyBounds(me._getLabelBounds());\r\n                if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\r\n                    _applyBounds(me.getMinMax(false));\r\n                }\r\n            }\r\n            min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\r\n            max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\r\n            me.min = Math.min(min, max - 1);\r\n            me.max = Math.max(min + 1, max);\r\n        }\r\n\r\n        _getLabelBounds() {\r\n            const arr = this.getLabelTimestamps();\r\n            let min = Number.POSITIVE_INFINITY;\r\n            let max = Number.NEGATIVE_INFINITY;\r\n            if (arr.length) {\r\n                min = arr[0];\r\n                max = arr[arr.length - 1];\r\n            }\r\n            return {min, max};\r\n        }\r\n\r\n        buildTicks() {\r\n            const me = this;\r\n            const options = me.options;\r\n            const timeOpts = options.time;\r\n            const tickOpts = options.ticks;\r\n            const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\r\n            if (options.bounds === 'ticks' && timestamps.length) {\r\n                me.min = me._userMin || timestamps[0];\r\n                me.max = me._userMax || timestamps[timestamps.length - 1];\r\n            }\r\n            const min = me.min;\r\n            const max = me.max;\r\n            const ticks = _filterBetween(timestamps, min, max);\r\n            me._unit = timeOpts.unit || (tickOpts.autoSkip\r\n                ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\r\n                : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\r\n            me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\r\n                : determineMajorUnit(me._unit);\r\n            me.initOffsets(timestamps);\r\n            if (options.reverse) {\r\n                ticks.reverse();\r\n            }\r\n            return ticksFromTimestamps(me, ticks, me._majorUnit);\r\n        }\r\n\r\n        initOffsets(timestamps) {\r\n            const me = this;\r\n            let start = 0;\r\n            let end = 0;\r\n            let first, last;\r\n            if (me.options.offset && timestamps.length) {\r\n                first = me.getDecimalForValue(timestamps[0]);\r\n                if (timestamps.length === 1) {\r\n                    start = 1 - first;\r\n                } else {\r\n                    start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\r\n                }\r\n                last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\r\n                if (timestamps.length === 1) {\r\n                    end = last;\r\n                } else {\r\n                    end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\r\n                }\r\n            }\r\n            const limit = timestamps.length < 3 ? 0.5 : 0.25;\r\n            start = _limitValue(start, 0, limit);\r\n            end = _limitValue(end, 0, limit);\r\n            me._offsets = {start, end, factor: 1 / (start + 1 + end)};\r\n        }\r\n\r\n        _generate() {\r\n            const me = this;\r\n            const adapter = me._adapter;\r\n            const min = me.min;\r\n            const max = me.max;\r\n            const options = me.options;\r\n            const timeOpts = options.time;\r\n            const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\r\n            const stepSize = valueOrDefault(timeOpts.stepSize, 1);\r\n            const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\r\n            const hasWeekday = isNumber(weekday) || weekday === true;\r\n            const ticks = {};\r\n            let first = min;\r\n            let time, count;\r\n            if (hasWeekday) {\r\n                first = +adapter.startOf(first, 'isoWeek', weekday);\r\n            }\r\n            first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\r\n            if (adapter.diff(max, min, minor) > 100000 * stepSize) {\r\n                throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\r\n            }\r\n            const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\r\n            for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\r\n                addTick(ticks, time, timestamps);\r\n            }\r\n            if (time === max || options.bounds === 'ticks' || count === 1) {\r\n                addTick(ticks, time, timestamps);\r\n            }\r\n            return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\r\n        }\r\n\r\n        getLabelForValue(value) {\r\n            const me = this;\r\n            const adapter = me._adapter;\r\n            const timeOpts = me.options.time;\r\n            if (timeOpts.tooltipFormat) {\r\n                return adapter.format(value, timeOpts.tooltipFormat);\r\n            }\r\n            return adapter.format(value, timeOpts.displayFormats.datetime);\r\n        }\r\n\r\n        _tickFormatFunction(time, index, ticks, format) {\r\n            const me = this;\r\n            const options = me.options;\r\n            const formats = options.time.displayFormats;\r\n            const unit = me._unit;\r\n            const majorUnit = me._majorUnit;\r\n            const minorFormat = unit && formats[unit];\r\n            const majorFormat = majorUnit && formats[majorUnit];\r\n            const tick = ticks[index];\r\n            const major = majorUnit && majorFormat && tick && tick.major;\r\n            const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\r\n            const formatter = options.ticks.callback;\r\n            return formatter ? formatter(label, index, ticks) : label;\r\n        }\r\n\r\n        generateTickLabels(ticks) {\r\n            let i, ilen, tick;\r\n            for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n                tick = ticks[i];\r\n                tick.label = this._tickFormatFunction(tick.value, i, ticks);\r\n            }\r\n        }\r\n\r\n        getDecimalForValue(value) {\r\n            const me = this;\r\n            return value === null ? NaN : (value - me.min) / (me.max - me.min);\r\n        }\r\n\r\n        getPixelForValue(value) {\r\n            const me = this;\r\n            const offsets = me._offsets;\r\n            const pos = me.getDecimalForValue(value);\r\n            return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n        }\r\n\r\n        getValueForPixel(pixel) {\r\n            const me = this;\r\n            const offsets = me._offsets;\r\n            const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n            return me.min + pos * (me.max - me.min);\r\n        }\r\n\r\n        _getLabelSize(label) {\r\n            const me = this;\r\n            const ticksOpts = me.options.ticks;\r\n            const tickLabelWidth = me.ctx.measureText(label).width;\r\n            const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\r\n            const cosRotation = Math.cos(angle);\r\n            const sinRotation = Math.sin(angle);\r\n            const tickFontSize = me._resolveTickFontOptions(0).size;\r\n            return {\r\n                w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\r\n                h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\r\n            };\r\n        }\r\n\r\n        _getLabelCapacity(exampleTime) {\r\n            const me = this;\r\n            const timeOpts = me.options.time;\r\n            const displayFormats = timeOpts.displayFormats;\r\n            const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\r\n            const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\r\n            const size = me._getLabelSize(exampleLabel);\r\n            const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\r\n            return capacity > 0 ? capacity : 1;\r\n        }\r\n\r\n        getDataTimestamps() {\r\n            const me = this;\r\n            let timestamps = me._cache.data || [];\r\n            let i, ilen;\r\n            if (timestamps.length) {\r\n                return timestamps;\r\n            }\r\n            const metas = me.getMatchingVisibleMetas();\r\n            if (me._normalized && metas.length) {\r\n                return (me._cache.data = metas[0].controller.getAllParsedValues(me));\r\n            }\r\n            for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n                timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\r\n            }\r\n            return (me._cache.data = me.normalize(timestamps));\r\n        }\r\n\r\n        getLabelTimestamps() {\r\n            const me = this;\r\n            const timestamps = me._cache.labels || [];\r\n            let i, ilen;\r\n            if (timestamps.length) {\r\n                return timestamps;\r\n            }\r\n            const labels = me.getLabels();\r\n            for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n                timestamps.push(parse(me, labels[i]));\r\n            }\r\n            return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\r\n        }\r\n\r\n        normalize(values) {\r\n            return _arrayUnique(values.sort(sorter));\r\n        }\r\n    }\r\n\r\n    TimeScale.id = 'time';\r\n    TimeScale.defaults = {\r\n        bounds: 'data',\r\n        adapters: {},\r\n        time: {\r\n            parser: false,\r\n            unit: false,\r\n            round: false,\r\n            isoWeekday: false,\r\n            minUnit: 'millisecond',\r\n            displayFormats: {}\r\n        },\r\n        ticks: {\r\n            source: 'auto',\r\n            major: {\r\n                enabled: false\r\n            }\r\n        }\r\n    };\r\n\r\n    function interpolate(table, val, reverse) {\r\n        let prevSource, nextSource, prevTarget, nextTarget;\r\n        if (reverse) {\r\n            prevSource = Math.floor(val);\r\n            nextSource = Math.ceil(val);\r\n            prevTarget = table[prevSource];\r\n            nextTarget = table[nextSource];\r\n        } else {\r\n            const result = _lookup(table, val);\r\n            prevTarget = result.lo;\r\n            nextTarget = result.hi;\r\n            prevSource = table[prevTarget];\r\n            nextSource = table[nextTarget];\r\n        }\r\n        const span = nextSource - prevSource;\r\n        return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\r\n    }\r\n\r\n    class TimeSeriesScale extends TimeScale {\r\n        constructor(props) {\r\n            super(props);\r\n            this._table = [];\r\n            this._maxIndex = undefined;\r\n        }\r\n\r\n        initOffsets() {\r\n            const me = this;\r\n            const timestamps = me._getTimestampsForTable();\r\n            me._table = me.buildLookupTable(timestamps);\r\n            me._maxIndex = me._table.length - 1;\r\n            super.initOffsets(timestamps);\r\n        }\r\n\r\n        buildLookupTable(timestamps) {\r\n            const me = this;\r\n            const {min, max} = me;\r\n            if (!timestamps.length) {\r\n                return [\r\n                    {time: min, pos: 0},\r\n                    {time: max, pos: 1}\r\n                ];\r\n            }\r\n            const items = [min];\r\n            let i, ilen, curr;\r\n            for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\r\n                curr = timestamps[i];\r\n                if (curr > min && curr < max) {\r\n                    items.push(curr);\r\n                }\r\n            }\r\n            items.push(max);\r\n            return items;\r\n        }\r\n\r\n        _getTimestampsForTable() {\r\n            const me = this;\r\n            let timestamps = me._cache.all || [];\r\n            if (timestamps.length) {\r\n                return timestamps;\r\n            }\r\n            const data = me.getDataTimestamps();\r\n            const label = me.getLabelTimestamps();\r\n            if (data.length && label.length) {\r\n                timestamps = me.normalize(data.concat(label));\r\n            } else {\r\n                timestamps = data.length ? data : label;\r\n            }\r\n            timestamps = me._cache.all = timestamps;\r\n            return timestamps;\r\n        }\r\n\r\n        getPixelForValue(value, index) {\r\n            const me = this;\r\n            const offsets = me._offsets;\r\n            const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\r\n                ? index / me._maxIndex : me.getDecimalForValue(value);\r\n            return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n        }\r\n\r\n        getDecimalForValue(value) {\r\n            return interpolate(this._table, value) / this._maxIndex;\r\n        }\r\n\r\n        getValueForPixel(pixel) {\r\n            const me = this;\r\n            const offsets = me._offsets;\r\n            const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n            return interpolate(me._table, decimal * this._maxIndex, true);\r\n        }\r\n    }\r\n\r\n    TimeSeriesScale.id = 'timeseries';\r\n    TimeSeriesScale.defaults = TimeScale.defaults;\r\n\r\n    var scales = /*#__PURE__*/Object.freeze({\r\n        __proto__: null,\r\n        CategoryScale: CategoryScale,\r\n        LinearScale: LinearScale,\r\n        LogarithmicScale: LogarithmicScale,\r\n        RadialLinearScale: RadialLinearScale,\r\n        TimeScale: TimeScale,\r\n        TimeSeriesScale: TimeSeriesScale\r\n    });\r\n\r\n    Chart.register(controllers, scales, elements, plugins);\r\n    Chart.helpers = {...helpers};\r\n    Chart._adapters = _adapters;\r\n    Chart.Animation = Animation;\r\n    Chart.Animations = Animations;\r\n    Chart.animator = animator;\r\n    Chart.controllers = registry.controllers.items;\r\n    Chart.DatasetController = DatasetController;\r\n    Chart.Element = Element;\r\n    Chart.elements = elements;\r\n    Chart.Interaction = Interaction;\r\n    Chart.layouts = layouts;\r\n    Chart.platforms = platforms;\r\n    Chart.Scale = Scale;\r\n    Chart.Ticks = Ticks;\r\n    Object.assign(Chart, controllers, scales, elements, plugins, platforms);\r\n    Chart.Chart = Chart;\r\n    if (typeof window !== 'undefined') {\r\n        window.Chart = Chart;\r\n    }\r\n\r\n    return Chart;\r\n\r\n})));\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}